Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000054 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513003, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 469, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2647)
[0000][PE] mean and std.dev: (679.55, 580.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 409.284 CPU sec, 23.099 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512541, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 888, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4843)
[0000][PE] mean and std.dev: (1068.60, 938.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 410.125 CPU sec, 23.084 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512606, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 524, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4838)
[0000][PE] mean and std.dev: (820.22, 737.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 413.029 CPU sec, 23.181 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512659, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 1007, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6976)
[0000][PE] mean and std.dev: (1438.50, 1639.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 409.853 CPU sec, 23.015 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512494, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 487, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4906)
[0000][PE] mean and std.dev: (796.20, 840.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 411.929 CPU sec, 23.119 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512481, 7, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.64, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 411.720 CPU sec, 23.095 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513374, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 405.846 CPU sec, 22.770 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512991, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 405.466 CPU sec, 22.808 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512936, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 452, 1011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2589)
[0000][PE] mean and std.dev: (605.92, 516.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.16, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (530, 1585, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (1267.00, 681.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 406.828 CPU sec, 22.820 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512798, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 878, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6572)
[0000][PE] mean and std.dev: (1420.23, 1412.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1572, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (1360.56, 631.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 408.046 CPU sec, 22.835 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512558, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 334, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (675.00, 835.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1307, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (1105.70, 458.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 406.460 CPU sec, 22.783 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512758, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 352, 747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1647)
[0000][PE] mean and std.dev: (462.00, 303.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 401.467 CPU sec, 22.510 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512682, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 423, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4062)
[0000][PE] mean and std.dev: (818.44, 706.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 404.636 CPU sec, 22.652 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206110
	[0000][ M::kt_pipeline] read 1206110 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512484, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 360, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1110)
[0000][PE] mean and std.dev: (359.10, 245.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 404.675 CPU sec, 22.680 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513159, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (665, 1263, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3488)
[0000][PE] mean and std.dev: (1115.31, 573.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1159, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (1044.12, 403.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206110 reads in 403.423 CPU sec, 22.611 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512538, 6, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 404.313 CPU sec, 22.665 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512587, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 869, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (1006.93, 954.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 403.542 CPU sec, 22.601 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513122, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 721, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2408)
[0000][PE] mean and std.dev: (688.07, 512.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1419, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2994)
[0000][PE] mean and std.dev: (1254.87, 510.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 400.163 CPU sec, 22.416 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513118, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 401.152 CPU sec, 22.465 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512860, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 277, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8284)
[0000][PE] mean and std.dev: (756.67, 1172.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1525, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (1477.11, 590.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 402.830 CPU sec, 22.561 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512542, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 709, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6279)
[0000][PE] mean and std.dev: (1219.60, 1186.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.59, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 404.024 CPU sec, 22.640 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513064, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 328, 601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1407)
[0000][PE] mean and std.dev: (391.45, 318.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.36, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 402.464 CPU sec, 22.546 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512773, 2, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 402.236 CPU sec, 22.546 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513269, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 500, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (716.64, 603.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.91, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 400.671 CPU sec, 22.436 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512706, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 311, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2114)
[0000][PE] mean and std.dev: (480.07, 414.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.62, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 402.395 CPU sec, 22.591 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512675, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 959, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4157)
[0000][PE] mean and std.dev: (956.07, 805.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 400.082 CPU sec, 22.552 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206060
	[0000][ M::kt_pipeline] read 1206060 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512609, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 383, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (616.06, 631.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.10, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1579, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5722)
[0000][PE] mean and std.dev: (1629.55, 968.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 402.744 CPU sec, 22.580 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512885, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 348, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2164)
[0000][PE] mean and std.dev: (567.50, 494.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206060 reads in 408.024 CPU sec, 23.125 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513231, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 1506, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5786)
[0000][PE] mean and std.dev: (1404.46, 1138.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 399.149 CPU sec, 22.379 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512489, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 486, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2779)
[0000][PE] mean and std.dev: (854.47, 764.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 406.152 CPU sec, 22.792 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513167, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 1100, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (744.67, 562.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 398.977 CPU sec, 22.364 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512935, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 359, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2497)
[0000][PE] mean and std.dev: (418.50, 294.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 400.319 CPU sec, 22.401 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512159, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 265, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 762)
[0000][PE] mean and std.dev: (262.91, 121.49)
[0000][PE] low and high boundaries for proper pairs: (1, 947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.62, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 403.147 CPU sec, 22.585 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513261, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 367, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6069)
[0000][PE] mean and std.dev: (1163.67, 1158.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 398.980 CPU sec, 22.349 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512565, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 322, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3753)
[0000][PE] mean and std.dev: (599.33, 556.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.37, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 402.640 CPU sec, 22.557 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512505, 0, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 339, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3281)
[0000][PE] mean and std.dev: (669.85, 599.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 404.544 CPU sec, 22.656 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512518, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (926, 1431, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5069)
[0000][PE] mean and std.dev: (1551.69, 816.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.40, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 402.957 CPU sec, 22.571 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512204, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1409, 1676, 4796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11570)
[0000][PE] mean and std.dev: (3253.55, 2657.74)
[0000][PE] low and high boundaries for proper pairs: (1, 14957)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 403.713 CPU sec, 22.820 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512762, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 333, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2841)
[0000][PE] mean and std.dev: (686.22, 636.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 398.926 CPU sec, 22.395 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206086
	[0000][ M::kt_pipeline] read 1206086 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513481, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 610, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (724.23, 544.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 403.756 CPU sec, 22.624 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512590, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 910, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6329)
[0000][PE] mean and std.dev: (1527.41, 1644.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206086 reads in 403.353 CPU sec, 22.559 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513356, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 533, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (1079.55, 1016.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 399.244 CPU sec, 22.342 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513089, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 960, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (784.00, 525.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 400.478 CPU sec, 22.429 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513174, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 359, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2050)
[0000][PE] mean and std.dev: (452.40, 282.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.99, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 398.262 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512898, 6, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 400.444 CPU sec, 22.455 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513142, 1, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.48, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 401.279 CPU sec, 22.465 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513109, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 340, 708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1716)
[0000][PE] mean and std.dev: (466.00, 384.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.70, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 400.598 CPU sec, 22.517 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206122
	[0000][ M::kt_pipeline] read 1206122 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513821, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 361, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1755)
[0000][PE] mean and std.dev: (530.28, 377.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 394.612 CPU sec, 22.671 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512704, 2, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206122 reads in 401.762 CPU sec, 22.500 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512704, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 828, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5511)
[0000][PE] mean and std.dev: (917.64, 936.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.65, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1775, 2568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6212)
[0000][PE] mean and std.dev: (1852.70, 1236.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 401.893 CPU sec, 22.514 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513073, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 295, 605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1449)
[0000][PE] mean and std.dev: (289.86, 209.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 401.728 CPU sec, 22.501 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512958, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 914, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (1058.73, 866.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 398.792 CPU sec, 22.346 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512794, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 369, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3190)
[0000][PE] mean and std.dev: (766.30, 854.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 403.618 CPU sec, 22.593 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512918, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 967, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4406)
[0000][PE] mean and std.dev: (679.80, 510.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.50, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1486, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (1469.20, 432.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 399.883 CPU sec, 22.398 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513052, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 549, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5727)
[0000][PE] mean and std.dev: (1245.42, 1562.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1692, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4394)
[0000][PE] mean and std.dev: (1626.20, 918.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 400.302 CPU sec, 22.508 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513156, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 308, 749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1841)
[0000][PE] mean and std.dev: (481.06, 439.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1278, 1916, 2770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5754)
[0000][PE] mean and std.dev: (1889.90, 804.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 402.642 CPU sec, 22.579 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513201, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1766, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4060)
[0000][PE] mean and std.dev: (1507.53, 883.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5066)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 399.593 CPU sec, 22.385 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512331, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 383, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (664.15, 609.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 404.395 CPU sec, 22.661 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512634, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 665, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4618)
[0000][PE] mean and std.dev: (920.10, 963.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 400.952 CPU sec, 22.451 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513545, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 518, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6407)
[0000][PE] mean and std.dev: (1241.12, 1531.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 401.304 CPU sec, 22.477 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512973, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 311, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2162)
[0000][PE] mean and std.dev: (417.80, 340.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 399.941 CPU sec, 22.416 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512872, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 527, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (912.58, 771.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 402.613 CPU sec, 22.578 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512729, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 295, 560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1178)
[0000][PE] mean and std.dev: (370.00, 251.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1749, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (1702.10, 713.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 397.344 CPU sec, 22.272 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513000, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 447, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2915)
[0000][PE] mean and std.dev: (805.67, 726.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1365, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3568)
[0000][PE] mean and std.dev: (1131.27, 639.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 396.519 CPU sec, 22.195 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512870, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 422, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1210)
[0000][PE] mean and std.dev: (455.50, 266.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 967, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6394)
[0000][PE] mean and std.dev: (1456.23, 906.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 401.613 CPU sec, 22.511 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513067, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 485, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1429)
[0000][PE] mean and std.dev: (389.88, 172.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 397.897 CPU sec, 22.292 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512578, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 309, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (872.55, 1104.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.34, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 400.329 CPU sec, 22.402 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513127, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 356, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4367)
[0000][PE] mean and std.dev: (515.90, 492.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1234, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (1230.42, 451.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 398.512 CPU sec, 22.328 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512767, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 360, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (774.75, 684.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 402.343 CPU sec, 22.510 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513107, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 1386, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5037)
[0000][PE] mean and std.dev: (1318.40, 1077.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.32, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 401.370 CPU sec, 22.489 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512332, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1531, 2642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6214)
[0000][PE] mean and std.dev: (1665.15, 990.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8000)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 402.142 CPU sec, 22.518 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513177, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 345, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (781.59, 778.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.29, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 2102, 2553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5891)
[0000][PE] mean and std.dev: (1727.44, 957.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 398.199 CPU sec, 22.306 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206090
	[0000][ M::kt_pipeline] read 1206090 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512398, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 832, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (984.36, 883.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.71, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (571, 953, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2254)
[0000][PE] mean and std.dev: (867.46, 458.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 399.098 CPU sec, 22.402 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513092, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 636, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5625)
[0000][PE] mean and std.dev: (1068.00, 1044.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206090 reads in 399.011 CPU sec, 22.338 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512936, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 769, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2955)
[0000][PE] mean and std.dev: (818.24, 784.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 397.907 CPU sec, 22.253 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512610, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 791, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (999.42, 1023.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 403.084 CPU sec, 22.594 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 512559, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 401.796 CPU sec, 22.567 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512472, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 679, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5721)
[0000][PE] mean and std.dev: (661.40, 601.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1568, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4131)
[0000][PE] mean and std.dev: (1466.27, 505.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 399.737 CPU sec, 22.382 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512650, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 353, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2519)
[0000][PE] mean and std.dev: (577.46, 528.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.44, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 396.673 CPU sec, 22.189 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512415, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (591, 1133, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5403)
[0000][PE] mean and std.dev: (1434.50, 1308.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (638, 1061, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2588)
[0000][PE] mean and std.dev: (995.10, 487.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 400.492 CPU sec, 22.424 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512458, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 562, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2038)
[0000][PE] mean and std.dev: (614.40, 469.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 405.012 CPU sec, 22.667 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512410, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 849, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5132)
[0000][PE] mean and std.dev: (1111.77, 1040.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 400.247 CPU sec, 22.409 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513036, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 473, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3128)
[0000][PE] mean and std.dev: (659.08, 457.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.66, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1219, 1423, 2744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5794)
[0000][PE] mean and std.dev: (2000.82, 1270.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 405.147 CPU sec, 22.701 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512483, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 816, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5709)
[0000][PE] mean and std.dev: (1160.82, 1039.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.62, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (617, 1115, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2585)
[0000][PE] mean and std.dev: (1037.10, 532.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 400.914 CPU sec, 22.461 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512288, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 307, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (649.83, 736.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 401.516 CPU sec, 22.464 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512439, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 401.178 CPU sec, 22.470 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512807, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 399, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2664)
[0000][PE] mean and std.dev: (537.00, 417.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 400.436 CPU sec, 22.443 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513079, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 336, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (437.09, 395.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (571, 1374, 2482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6304)
[0000][PE] mean and std.dev: (1494.94, 1103.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 399.323 CPU sec, 22.354 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513042, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 340, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1803)
[0000][PE] mean and std.dev: (330.07, 212.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.95, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 400.692 CPU sec, 22.425 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512713, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 336, 464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 802)
[0000][PE] mean and std.dev: (370.00, 156.96)
[0000][PE] low and high boundaries for proper pairs: (1, 998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 403.045 CPU sec, 22.562 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206142
	[0000][ M::kt_pipeline] read 1206142 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512907, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 383, 775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1751)
[0000][PE] mean and std.dev: (396.82, 219.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1423, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (1543.44, 888.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 398.086 CPU sec, 22.296 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512966, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 425, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5096)
[0000][PE] mean and std.dev: (1020.69, 1003.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206142 reads in 400.847 CPU sec, 22.469 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512991, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 455, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3434)
[0000][PE] mean and std.dev: (720.39, 744.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.66, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1408, 3002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6524)
[0000][PE] mean and std.dev: (1978.36, 1259.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 399.625 CPU sec, 22.380 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512734, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 395.485 CPU sec, 22.155 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513109, 6, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 397.717 CPU sec, 22.265 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512897, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1044, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5018)
[0000][PE] mean and std.dev: (1271.08, 1164.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 400.494 CPU sec, 22.429 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512617, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 448, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (734.50, 679.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.67, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 400.338 CPU sec, 22.446 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512429, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 447, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2556)
[0000][PE] mean and std.dev: (645.56, 523.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.27, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1407, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3469)
[0000][PE] mean and std.dev: (1250.78, 482.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 400.212 CPU sec, 22.401 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512573, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1419, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (1123.20, 452.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3419)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 400.740 CPU sec, 22.467 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512820, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 332, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1734)
[0000][PE] mean and std.dev: (537.58, 463.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.95, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 397.892 CPU sec, 22.263 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512481, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 403, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2935)
[0000][PE] mean and std.dev: (738.87, 575.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.08, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 400.761 CPU sec, 22.465 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512719, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 494, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3153)
[0000][PE] mean and std.dev: (954.43, 920.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 397.346 CPU sec, 22.251 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513417, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 460, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4802)
[0000][PE] mean and std.dev: (817.25, 740.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 398.467 CPU sec, 22.308 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512809, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 395, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4114)
[0000][PE] mean and std.dev: (826.53, 786.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 400.192 CPU sec, 22.425 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512803, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 400.586 CPU sec, 22.448 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512766, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 426, 607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1481)
[0000][PE] mean and std.dev: (404.64, 309.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.01, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 403.234 CPU sec, 22.566 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513125, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 507, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3070)
[0000][PE] mean and std.dev: (664.84, 604.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 398.337 CPU sec, 22.337 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513074, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 398.826 CPU sec, 22.348 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206150
	[0000][ M::kt_pipeline] read 1206150 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512883, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 383, 900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2094)
[0000][PE] mean and std.dev: (539.20, 329.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.35, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1932, 3015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7537)
[0000][PE] mean and std.dev: (1916.50, 1342.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 397.085 CPU sec, 22.208 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512252, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 396, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5388)
[0000][PE] mean and std.dev: (861.76, 1034.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206150 reads in 404.027 CPU sec, 22.618 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512810, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 365, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1705)
[0000][PE] mean and std.dev: (394.91, 320.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.50, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 400.775 CPU sec, 22.467 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512783, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.65, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1498, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (1491.80, 808.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4971)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 399.909 CPU sec, 22.400 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513276, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 473, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (712.08, 536.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.52, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1637, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3000)
[0000][PE] mean and std.dev: (1467.67, 576.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 397.856 CPU sec, 22.274 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512705, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 711, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (864.50, 733.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 400.671 CPU sec, 22.419 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512966, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 881, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (895.33, 706.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 987, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5700)
[0000][PE] mean and std.dev: (1479.31, 1165.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 398.998 CPU sec, 22.348 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513096, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 711, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5411)
[0000][PE] mean and std.dev: (1075.07, 1091.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1431, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (1308.50, 656.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 397.292 CPU sec, 22.247 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513104, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 479, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3531)
[0000][PE] mean and std.dev: (832.00, 738.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 400.034 CPU sec, 22.367 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513069, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 327, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (700.43, 822.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 398.898 CPU sec, 22.332 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512901, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 288, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (562.10, 537.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.63, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 399.108 CPU sec, 22.325 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513176, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 1118, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5369)
[0000][PE] mean and std.dev: (1555.57, 1543.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1587, 2934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7290)
[0000][PE] mean and std.dev: (1793.58, 1542.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 398.137 CPU sec, 22.306 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512718, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 1486, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6219)
[0000][PE] mean and std.dev: (1562.80, 1457.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.01, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (426, 1037, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3279)
[0000][PE] mean and std.dev: (990.00, 707.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 400.042 CPU sec, 22.386 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513140, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 498, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (662.71, 415.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 398.584 CPU sec, 22.290 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512852, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (557, 1517, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6800)
[0000][PE] mean and std.dev: (1440.08, 1053.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 396.680 CPU sec, 22.221 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512913, 9, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.01, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 398.887 CPU sec, 22.360 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512631, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1012, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (890.92, 663.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1709, 5498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14252)
[0000][PE] mean and std.dev: (2530.36, 2170.99)
[0000][PE] low and high boundaries for proper pairs: (1, 18629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 397.885 CPU sec, 22.297 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512570, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 308, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (569.81, 608.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 405.365 CPU sec, 22.695 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512736, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 526, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (752.44, 662.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.50, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 401.595 CPU sec, 22.509 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512755, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 761, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (803.30, 699.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.95, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 397.883 CPU sec, 22.278 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512647, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.51, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 398.211 CPU sec, 22.305 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512720, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 445, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (890.17, 860.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (472, 1272, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (1047.60, 601.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 397.045 CPU sec, 22.230 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512920, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 1009, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4982)
[0000][PE] mean and std.dev: (1097.92, 883.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 399.868 CPU sec, 22.373 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512826, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 401.001 CPU sec, 22.444 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512336, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 498, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2122)
[0000][PE] mean and std.dev: (497.92, 331.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1365, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6572)
[0000][PE] mean and std.dev: (1882.10, 1378.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 401.268 CPU sec, 22.459 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513012, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 296, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (760.00, 860.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 399.126 CPU sec, 22.343 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512756, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 357, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6047)
[0000][PE] mean and std.dev: (699.45, 759.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1951, 5508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14260)
[0000][PE] mean and std.dev: (2790.30, 2249.40)
[0000][PE] low and high boundaries for proper pairs: (1, 18636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 397.251 CPU sec, 22.241 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512744, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 402, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2715)
[0000][PE] mean and std.dev: (722.89, 554.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1402, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (1502.82, 719.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 399.768 CPU sec, 22.360 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512508, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 910, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (995.35, 923.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 401.394 CPU sec, 22.485 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512955, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 910, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (753.78, 547.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 396.800 CPU sec, 22.215 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512468, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 358, 629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1343)
[0000][PE] mean and std.dev: (407.36, 222.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.41, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 397.838 CPU sec, 22.295 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512942, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 524, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (792.75, 685.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.34, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1571, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1465.30, 616.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 398.983 CPU sec, 22.368 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512997, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 384, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (780.36, 698.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 398.005 CPU sec, 22.266 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512742, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 758, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (795.20, 888.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 399.549 CPU sec, 22.337 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513334, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 400, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6358)
[0000][PE] mean and std.dev: (1035.00, 1000.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.38, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 400.151 CPU sec, 22.388 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512467, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.64, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 398.407 CPU sec, 22.314 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 513308, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 481, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3262)
[0000][PE] mean and std.dev: (711.71, 607.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 397.806 CPU sec, 22.302 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513297, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 671, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (945.33, 757.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 399.740 CPU sec, 22.405 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512857, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 372, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6453)
[0000][PE] mean and std.dev: (754.18, 885.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 401.501 CPU sec, 22.559 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512890, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 1091, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (804.60, 477.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 394.654 CPU sec, 22.761 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512622, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 964, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3135)
[0000][PE] mean and std.dev: (804.80, 569.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1183, 2722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6674)
[0000][PE] mean and std.dev: (1641.92, 1264.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 396.247 CPU sec, 22.393 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512645, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 575, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3990)
[0000][PE] mean and std.dev: (828.35, 636.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1992, 2611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5775)
[0000][PE] mean and std.dev: (1727.55, 678.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 397.345 CPU sec, 22.253 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512863, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 910, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (871.38, 774.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.94, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1285, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (1443.67, 854.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 395.686 CPU sec, 22.202 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512783, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 532, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3883)
[0000][PE] mean and std.dev: (829.33, 767.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 399.153 CPU sec, 22.361 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512578, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 488, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2664)
[0000][PE] mean and std.dev: (774.77, 672.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 870, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (1321.64, 918.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 399.795 CPU sec, 22.398 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512756, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (467, 961, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2960)
[0000][PE] mean and std.dev: (891.45, 488.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1483, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5376)
[0000][PE] mean and std.dev: (1744.00, 1141.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 391.892 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512636, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 450, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (706.33, 727.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.97, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 398.294 CPU sec, 22.341 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 513206, 8, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 394.000 CPU sec, 22.112 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512329, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 404, 3019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8607)
[0000][PE] mean and std.dev: (907.92, 1190.73)
[0000][PE] low and high boundaries for proper pairs: (1, 11401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1536, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5334)
[0000][PE] mean and std.dev: (1325.33, 732.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 398.065 CPU sec, 22.320 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512562, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 752, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (1033.80, 810.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1526, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (1272.56, 387.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 395.085 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512684, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 769, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (702.83, 526.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1278, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (1423.42, 699.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 396.814 CPU sec, 22.323 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513288, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 377, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2465)
[0000][PE] mean and std.dev: (577.54, 380.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 393.800 CPU sec, 22.038 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512586, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 390, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2768)
[0000][PE] mean and std.dev: (636.71, 519.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 392.989 CPU sec, 22.053 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513155, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1118, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (1409.73, 780.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5516)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 391.157 CPU sec, 21.928 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512466, 0, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.01, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 395.232 CPU sec, 22.171 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513060, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 359, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2287)
[0000][PE] mean and std.dev: (617.69, 597.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 396.258 CPU sec, 22.204 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513124, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (740, 1213, 4052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10676)
[0000][PE] mean and std.dev: (2283.15, 2495.84)
[0000][PE] low and high boundaries for proper pairs: (1, 13988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 393.154 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512726, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (479, 1161, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3167)
[0000][PE] mean and std.dev: (1011.00, 717.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 392.118 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512747, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 875, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5106)
[0000][PE] mean and std.dev: (1069.33, 731.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 393.342 CPU sec, 22.053 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512733, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 614, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4759)
[0000][PE] mean and std.dev: (1183.76, 1108.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 392.610 CPU sec, 22.011 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512821, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 1015, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5211)
[0000][PE] mean and std.dev: (1338.67, 1188.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.53, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 389.610 CPU sec, 21.841 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206126
	[0000][ M::kt_pipeline] read 1206126 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512830, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 1149, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6748)
[0000][PE] mean and std.dev: (1466.10, 1553.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 390.950 CPU sec, 21.929 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206100
	[0000][ M::kt_pipeline] read 1206100 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512106, 4, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206126 reads in 395.160 CPU sec, 22.111 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512754, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 371, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3911)
[0000][PE] mean and std.dev: (790.62, 700.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.43, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206100 reads in 395.106 CPU sec, 22.120 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513097, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 1125, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5956)
[0000][PE] mean and std.dev: (1199.83, 910.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.49, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1164, 2941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7243)
[0000][PE] mean and std.dev: (1624.45, 1079.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 393.300 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512550, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (438, 1067, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (1236.20, 829.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1370, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (942.22, 541.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 391.703 CPU sec, 21.956 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512613, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.95, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1213, 3276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7874)
[0000][PE] mean and std.dev: (1992.67, 1540.06)
[0000][PE] low and high boundaries for proper pairs: (1, 10173)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 397.255 CPU sec, 22.379 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512704, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 1152, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5402)
[0000][PE] mean and std.dev: (1319.17, 1160.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 394.180 CPU sec, 22.111 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512602, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 1632, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6710)
[0000][PE] mean and std.dev: (1659.80, 1654.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1112, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2398)
[0000][PE] mean and std.dev: (1096.22, 448.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 393.282 CPU sec, 22.115 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513299, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 308, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 845)
[0000][PE] mean and std.dev: (269.27, 110.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 394.265 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512979, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 491, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (555.08, 570.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 392.245 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512645, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 762, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2559)
[0000][PE] mean and std.dev: (727.00, 544.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1123, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4195)
[0000][PE] mean and std.dev: (1396.83, 810.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 393.930 CPU sec, 22.087 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512674, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 433, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4590)
[0000][PE] mean and std.dev: (603.33, 601.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.26, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 390.705 CPU sec, 21.951 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512893, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 378, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (798.68, 992.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.51, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 392.223 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512740, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 358, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5793)
[0000][PE] mean and std.dev: (690.64, 799.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 391.531 CPU sec, 21.923 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512699, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 369, 868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2018)
[0000][PE] mean and std.dev: (629.73, 496.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 392.245 CPU sec, 21.981 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513101, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 906, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6136)
[0000][PE] mean and std.dev: (1103.30, 870.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 391.943 CPU sec, 21.958 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512969, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 883, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2562)
[0000][PE] mean and std.dev: (905.90, 640.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 390.404 CPU sec, 21.870 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512909, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 367, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5008)
[0000][PE] mean and std.dev: (848.82, 848.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 394.657 CPU sec, 22.144 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512397, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 371, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1933)
[0000][PE] mean and std.dev: (513.00, 348.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1002, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4892)
[0000][PE] mean and std.dev: (1428.86, 1093.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 398.672 CPU sec, 22.345 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512716, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 458, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2310)
[0000][PE] mean and std.dev: (491.08, 395.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (398, 1696, 3387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9365)
[0000][PE] mean and std.dev: (1968.08, 1640.15)
[0000][PE] low and high boundaries for proper pairs: (1, 12354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 394.475 CPU sec, 22.100 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513226, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 357, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3108)
[0000][PE] mean and std.dev: (577.77, 531.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 392.690 CPU sec, 22.056 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512691, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 456, 780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2028)
[0000][PE] mean and std.dev: (619.31, 611.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.52, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 394.502 CPU sec, 22.132 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206150
	[0000][ M::kt_pipeline] read 1206150 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513007, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 445, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (552.19, 447.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 394.829 CPU sec, 22.131 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512546, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 385, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2529)
[0000][PE] mean and std.dev: (543.92, 509.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206150 reads in 395.959 CPU sec, 22.222 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512770, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 605, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (745.00, 546.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 398.057 CPU sec, 22.381 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206100
	[0000][ M::kt_pipeline] read 1206100 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512747, 0, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.00, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 397.243 CPU sec, 22.349 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512613, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 333, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4738)
[0000][PE] mean and std.dev: (1020.64, 1238.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206100 reads in 394.629 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512910, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 1162, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (1020.94, 895.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 396.129 CPU sec, 22.263 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512413, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 918, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5154)
[0000][PE] mean and std.dev: (1301.09, 1397.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (431, 1229, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (1090.79, 773.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 394.183 CPU sec, 22.228 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513109, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 478, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4746)
[0000][PE] mean and std.dev: (956.38, 1056.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 393.531 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513058, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 393.815 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512775, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 1258, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4617)
[0000][PE] mean and std.dev: (1075.44, 889.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.26, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 392.706 CPU sec, 22.011 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512784, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 443, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2231)
[0000][PE] mean and std.dev: (670.23, 470.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 394.958 CPU sec, 22.135 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512884, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 399, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3469)
[0000][PE] mean and std.dev: (943.25, 1054.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1409, 4427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11609)
[0000][PE] mean and std.dev: (2199.54, 1602.47)
[0000][PE] low and high boundaries for proper pairs: (1, 15200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 395.437 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512188, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 354, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1736)
[0000][PE] mean and std.dev: (564.72, 447.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.64, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1571, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5401)
[0000][PE] mean and std.dev: (1497.58, 887.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 395.009 CPU sec, 22.181 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513103, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 401, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (707.53, 582.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.47, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 394.494 CPU sec, 22.105 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513147, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 377, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1303)
[0000][PE] mean and std.dev: (413.78, 290.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 393.272 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512857, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 306, 496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1090)
[0000][PE] mean and std.dev: (340.00, 207.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.23, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 391.798 CPU sec, 21.953 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512666, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 524, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3231)
[0000][PE] mean and std.dev: (648.92, 525.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 396.112 CPU sec, 22.210 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512747, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (673, 1547, 2859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7231)
[0000][PE] mean and std.dev: (1527.00, 1048.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 1428, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (1509.11, 696.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 400.991 CPU sec, 22.456 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513241, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (540, 1309, 2755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7185)
[0000][PE] mean and std.dev: (1490.46, 1341.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 393.396 CPU sec, 22.051 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512773, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 625, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3105)
[0000][PE] mean and std.dev: (768.20, 484.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 393.363 CPU sec, 22.059 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513277, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 396.262 CPU sec, 22.251 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513048, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 796, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5364)
[0000][PE] mean and std.dev: (952.29, 846.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 2082, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5379)
[0000][PE] mean and std.dev: (1622.30, 834.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 394.859 CPU sec, 22.151 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512662, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 350, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6181)
[0000][PE] mean and std.dev: (915.69, 935.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1583, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (1667.33, 977.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 393.275 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512535, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 393, 616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1446)
[0000][PE] mean and std.dev: (474.21, 383.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 395.045 CPU sec, 22.127 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513245, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 1004, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4769)
[0000][PE] mean and std.dev: (1010.85, 651.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 393.226 CPU sec, 22.001 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512977, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 1148, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5638)
[0000][PE] mean and std.dev: (1244.25, 941.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.81, 113.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 393.656 CPU sec, 22.115 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512767, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 476, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2439)
[0000][PE] mean and std.dev: (461.44, 259.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.65, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 395.395 CPU sec, 22.155 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513078, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 319, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (543.89, 532.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.35, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1261, 2169, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5473)
[0000][PE] mean and std.dev: (1829.20, 1220.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 394.192 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512631, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 1103, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (949.40, 614.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.46, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 396.334 CPU sec, 22.203 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512809, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 770, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (961.10, 768.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 392.560 CPU sec, 21.978 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512980, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 717, 4269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12033)
[0000][PE] mean and std.dev: (2116.79, 2290.76)
[0000][PE] low and high boundaries for proper pairs: (1, 15915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 394.460 CPU sec, 22.126 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512363, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 964, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5860)
[0000][PE] mean and std.dev: (1131.92, 970.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 397.151 CPU sec, 22.247 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512781, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 333, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2126)
[0000][PE] mean and std.dev: (423.36, 337.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 393.877 CPU sec, 22.073 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512767, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 714, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2696)
[0000][PE] mean and std.dev: (819.70, 555.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 394.587 CPU sec, 22.149 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512952, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 662, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2796)
[0000][PE] mean and std.dev: (865.00, 804.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 392.421 CPU sec, 21.956 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512970, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 459, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3444)
[0000][PE] mean and std.dev: (740.50, 543.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.29, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1636, 2305, 2489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4195)
[0000][PE] mean and std.dev: (1871.78, 668.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 395.602 CPU sec, 22.239 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513390, 0, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 694, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (725.69, 586.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 393.241 CPU sec, 22.014 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512533, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 466, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4429)
[0000][PE] mean and std.dev: (934.85, 1053.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 396.343 CPU sec, 22.274 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512303, 1, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.55, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 2083, 3202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8132)
[0000][PE] mean and std.dev: (2089.00, 1637.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10597)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 396.825 CPU sec, 22.243 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512143, 0, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 472, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (731.24, 656.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 396.682 CPU sec, 22.232 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512778, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 406, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2859)
[0000][PE] mean and std.dev: (794.25, 834.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1268, 2738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6138)
[0000][PE] mean and std.dev: (1922.58, 1608.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 391.868 CPU sec, 21.965 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513217, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 539, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (945.50, 818.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 394.436 CPU sec, 22.111 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512715, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 387, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4773)
[0000][PE] mean and std.dev: (1089.29, 1259.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 394.500 CPU sec, 22.166 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512599, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 385, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (711.89, 769.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 1816, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (1726.31, 844.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 391.387 CPU sec, 21.950 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512934, 1, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 392.489 CPU sec, 22.052 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 513456, 2, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.34, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 396.002 CPU sec, 22.180 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512713, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 366, 627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1351)
[0000][PE] mean and std.dev: (397.15, 229.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (583, 1034, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (868.20, 510.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 397.278 CPU sec, 22.268 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512471, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 364, 695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1481)
[0000][PE] mean and std.dev: (330.62, 171.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 394.927 CPU sec, 22.118 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513055, 1, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 394.345 CPU sec, 22.139 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513312, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 917, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (984.20, 814.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 392.873 CPU sec, 22.044 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512785, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 572, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5179)
[0000][PE] mean and std.dev: (1031.00, 966.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 393.297 CPU sec, 22.118 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512594, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 334, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 840)
[0000][PE] mean and std.dev: (292.33, 122.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 393.322 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513000, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (109, 328, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3100)
[0000][PE] mean and std.dev: (518.24, 570.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1313, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5826)
[0000][PE] mean and std.dev: (1930.50, 1455.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 393.113 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512491, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 397, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3835)
[0000][PE] mean and std.dev: (925.13, 825.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1661, 2464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1735.00, 1012.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 395.963 CPU sec, 22.249 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513039, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 619, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4452)
[0000][PE] mean and std.dev: (884.67, 888.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 392.268 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512863, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 285, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2090)
[0000][PE] mean and std.dev: (531.38, 496.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 394.454 CPU sec, 22.148 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512323, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (756, 1250, 2838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7002)
[0000][PE] mean and std.dev: (1906.84, 1714.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1039, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3611)
[0000][PE] mean and std.dev: (1081.46, 667.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 397.033 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512466, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 294, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 870)
[0000][PE] mean and std.dev: (255.82, 77.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.59, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1417, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (1304.22, 927.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 396.027 CPU sec, 22.238 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512740, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 406, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (512.09, 446.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 391.839 CPU sec, 21.967 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512641, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 561, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5866)
[0000][PE] mean and std.dev: (1236.00, 1316.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 392.745 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512443, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 326, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1479)
[0000][PE] mean and std.dev: (393.88, 243.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1238, 2478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5564)
[0000][PE] mean and std.dev: (1341.67, 703.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 402.851 CPU sec, 22.649 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206060
	[0000][ M::kt_pipeline] read 1206060 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512585, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 546, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (918.75, 946.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 399.380 CPU sec, 22.391 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512333, 4, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206060 reads in 397.503 CPU sec, 22.272 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512637, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (695, 1610, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5207)
[0000][PE] mean and std.dev: (1628.82, 1294.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 400.467 CPU sec, 22.425 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513444, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 663, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (798.09, 626.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1310, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3012)
[0000][PE] mean and std.dev: (1135.00, 496.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 395.815 CPU sec, 22.229 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512624, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 584, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3044)
[0000][PE] mean and std.dev: (851.20, 651.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.28, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1047, 2621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6373)
[0000][PE] mean and std.dev: (1693.38, 1558.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 394.595 CPU sec, 22.115 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512943, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 438, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (770.00, 808.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 396.510 CPU sec, 22.290 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512374, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1433, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5671)
[0000][PE] mean and std.dev: (1452.56, 905.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7307)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 399.485 CPU sec, 22.386 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512789, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 341, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2388)
[0000][PE] mean and std.dev: (505.90, 358.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 395.859 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 513132, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 488, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2728)
[0000][PE] mean and std.dev: (616.44, 459.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.71, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 395.705 CPU sec, 22.190 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512871, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 374, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2938)
[0000][PE] mean and std.dev: (635.36, 528.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1340, 1644, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (1834.60, 827.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 398.476 CPU sec, 22.310 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512609, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 475, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (550.18, 358.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 396.137 CPU sec, 22.180 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512388, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 339, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (693.87, 831.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.67, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1699, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (1479.90, 590.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 397.754 CPU sec, 22.289 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 513073, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 640, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (749.25, 538.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1570, 3216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8254)
[0000][PE] mean and std.dev: (1694.46, 1092.28)
[0000][PE] low and high boundaries for proper pairs: (1, 10773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 395.253 CPU sec, 22.151 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512866, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 721, 2762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7594)
[0000][PE] mean and std.dev: (1393.17, 1758.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 392.391 CPU sec, 22.060 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512613, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 394.917 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512582, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 947, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4312)
[0000][PE] mean and std.dev: (1000.33, 840.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 395.817 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206110
	[0000][ M::kt_pipeline] read 1206110 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512721, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 1371, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4709)
[0000][PE] mean and std.dev: (1229.00, 893.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 392.689 CPU sec, 21.996 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512246, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 703, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5342)
[0000][PE] mean and std.dev: (1046.92, 927.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206110 reads in 395.440 CPU sec, 22.118 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206068
	[0000][ M::kt_pipeline] read 1206068 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513349, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 627, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6556)
[0000][PE] mean and std.dev: (1035.77, 880.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.53, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 397.309 CPU sec, 22.274 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512958, 5, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206068 reads in 398.711 CPU sec, 22.394 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206074
	[0000][ M::kt_pipeline] read 1206074 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512521, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 433, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4060)
[0000][PE] mean and std.dev: (843.15, 916.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.65, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1468, 1850, 2786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5422)
[0000][PE] mean and std.dev: (2041.60, 946.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 397.984 CPU sec, 22.348 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513177, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 469, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2466)
[0000][PE] mean and std.dev: (515.27, 366.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206074 reads in 395.719 CPU sec, 22.171 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206092
	[0000][ M::kt_pipeline] read 1206092 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512840, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 735, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (854.67, 701.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 395.922 CPU sec, 22.166 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513146, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 403, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2051)
[0000][PE] mean and std.dev: (443.64, 267.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206092 reads in 395.943 CPU sec, 22.190 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512904, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 542, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5051)
[0000][PE] mean and std.dev: (914.47, 906.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 392.558 CPU sec, 21.992 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512912, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 638, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3026)
[0000][PE] mean and std.dev: (786.00, 634.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1451, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (1228.30, 585.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 394.778 CPU sec, 22.202 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513185, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.67, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 399.256 CPU sec, 22.384 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512569, 11, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.66, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (813, 2427, 3622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9240)
[0000][PE] mean and std.dev: (2022.40, 1792.77)
[0000][PE] low and high boundaries for proper pairs: (1, 12049)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 396.215 CPU sec, 22.215 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512976, 7, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 396.730 CPU sec, 22.273 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512574, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1138, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5364)
[0000][PE] mean and std.dev: (1141.67, 911.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 396.824 CPU sec, 22.231 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512782, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 591, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6169)
[0000][PE] mean and std.dev: (1131.87, 1214.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.27, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1900, 4090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9958)
[0000][PE] mean and std.dev: (2495.67, 1561.29)
[0000][PE] low and high boundaries for proper pairs: (1, 12892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 396.184 CPU sec, 22.204 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512785, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 398.126 CPU sec, 22.286 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512761, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (680, 1153, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5681)
[0000][PE] mean and std.dev: (1371.13, 883.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 1456, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4510)
[0000][PE] mean and std.dev: (1535.45, 1184.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 393.768 CPU sec, 22.083 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206068
	[0000][ M::kt_pipeline] read 1206068 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513126, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 668, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (814.76, 772.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 2047, 2712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5670)
[0000][PE] mean and std.dev: (2002.54, 1192.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 394.571 CPU sec, 22.136 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513196, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 374, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (933.87, 1006.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.28, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206068 reads in 394.785 CPU sec, 22.140 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513029, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 380, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (864.29, 813.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 391.327 CPU sec, 21.953 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513012, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 370, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (742.07, 690.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 393.589 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512616, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 493, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2680)
[0000][PE] mean and std.dev: (660.62, 569.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 401.330 CPU sec, 22.487 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512615, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 372, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3040)
[0000][PE] mean and std.dev: (874.25, 856.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 396.927 CPU sec, 22.279 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512903, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 990, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4700)
[0000][PE] mean and std.dev: (1133.36, 810.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.33, 113.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 395.517 CPU sec, 22.200 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513473, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 675, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2202)
[0000][PE] mean and std.dev: (680.78, 437.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.94, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1067, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5581)
[0000][PE] mean and std.dev: (1223.20, 768.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 399.289 CPU sec, 22.432 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512823, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1505, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (1288.27, 566.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4414)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 396.585 CPU sec, 22.230 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512620, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 365, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (722.17, 876.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 396.913 CPU sec, 22.289 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512805, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 409, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2651)
[0000][PE] mean and std.dev: (721.30, 757.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.05, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 397.709 CPU sec, 22.265 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512975, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 375, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (647.58, 537.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.68, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 395.702 CPU sec, 22.173 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513196, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 357, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2539)
[0000][PE] mean and std.dev: (518.45, 463.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1272, 1855, 2842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5982)
[0000][PE] mean and std.dev: (2087.25, 1251.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 390.429 CPU sec, 21.870 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512934, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 1076, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4661)
[0000][PE] mean and std.dev: (1018.33, 1038.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.91, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 395.152 CPU sec, 22.166 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512966, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 368, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (480.43, 324.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 393.241 CPU sec, 22.090 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512640, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 649, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (877.12, 657.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1117, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3166)
[0000][PE] mean and std.dev: (1182.20, 660.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 395.594 CPU sec, 22.177 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512769, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 1103, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5203)
[0000][PE] mean and std.dev: (1080.65, 1003.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1168, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (1280.30, 632.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 395.168 CPU sec, 22.160 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512783, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (502, 965, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5959)
[0000][PE] mean and std.dev: (1381.69, 1162.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 970, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5107)
[0000][PE] mean and std.dev: (1399.25, 713.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 395.405 CPU sec, 22.219 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512197, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 657, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (777.47, 592.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1124, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (1114.58, 664.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 399.264 CPU sec, 22.338 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512656, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 1012, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4206)
[0000][PE] mean and std.dev: (992.07, 807.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.04, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 400.419 CPU sec, 22.527 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512865, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 658, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3442)
[0000][PE] mean and std.dev: (846.50, 691.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 398.732 CPU sec, 22.327 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512910, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 1426, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5277)
[0000][PE] mean and std.dev: (1047.62, 750.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 395.173 CPU sec, 22.177 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206136
	[0000][ M::kt_pipeline] read 1206136 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512909, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (588, 1309, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (1220.58, 906.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1465, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (1633.55, 736.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 400.031 CPU sec, 22.488 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512877, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 311, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2830)
[0000][PE] mean and std.dev: (556.87, 481.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1139, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (1084.00, 436.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206136 reads in 399.875 CPU sec, 22.464 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512717, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 440, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (878.58, 694.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 397.400 CPU sec, 22.270 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512624, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 333, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (756.22, 733.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 396.280 CPU sec, 22.214 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512968, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.53, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 393.487 CPU sec, 22.055 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513397, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1293, 2556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5320)
[0000][PE] mean and std.dev: (1749.12, 1189.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6702)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 398.004 CPU sec, 22.304 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513142, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 368, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4212)
[0000][PE] mean and std.dev: (970.73, 1080.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (457, 1811, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6025)
[0000][PE] mean and std.dev: (1478.60, 968.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 396.342 CPU sec, 22.192 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512698, 1, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1262, 1558, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3503)
[0000][PE] mean and std.dev: (1551.58, 552.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4250)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 395.933 CPU sec, 22.218 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513003, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 872, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4617)
[0000][PE] mean and std.dev: (1010.80, 1018.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 392.929 CPU sec, 21.996 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 513148, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 615, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5052)
[0000][PE] mean and std.dev: (1014.95, 823.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.65, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 395.792 CPU sec, 22.183 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512802, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 440, 774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1788)
[0000][PE] mean and std.dev: (442.40, 374.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 396.910 CPU sec, 22.242 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512932, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 1370, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4600)
[0000][PE] mean and std.dev: (721.70, 628.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 396.138 CPU sec, 22.216 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513007, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 389.814 CPU sec, 21.820 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512645, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 546, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5481)
[0000][PE] mean and std.dev: (1057.25, 962.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 400.074 CPU sec, 22.419 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512652, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 1051, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6509)
[0000][PE] mean and std.dev: (1305.94, 1226.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 1345, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5218)
[0000][PE] mean and std.dev: (1465.75, 1230.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 399.235 CPU sec, 22.384 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512907, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 995, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6297)
[0000][PE] mean and std.dev: (1115.23, 881.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1811, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1819.70, 1147.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 396.752 CPU sec, 22.219 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512669, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 757, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (985.85, 863.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.68, 113.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 397.253 CPU sec, 22.209 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206100
	[0000][ M::kt_pipeline] read 1206100 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512421, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 712, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5724)
[0000][PE] mean and std.dev: (1053.67, 1077.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1546, 2731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6637)
[0000][PE] mean and std.dev: (1745.62, 1360.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 399.256 CPU sec, 22.375 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512782, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (645, 1047, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (1104.64, 611.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.36, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1066, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2767)
[0000][PE] mean and std.dev: (1103.91, 525.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206100 reads in 398.845 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206120
	[0000][ M::kt_pipeline] read 1206120 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512919, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 380, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6174)
[0000][PE] mean and std.dev: (1018.15, 1234.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 398.249 CPU sec, 22.358 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512186, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 296, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2502)
[0000][PE] mean and std.dev: (463.87, 461.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1092, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3049)
[0000][PE] mean and std.dev: (1024.50, 610.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206120 reads in 400.366 CPU sec, 22.393 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512771, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (855, 1632, 3361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8373)
[0000][PE] mean and std.dev: (1958.57, 1433.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1667, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1604.38, 827.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 397.479 CPU sec, 22.256 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512553, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 663, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4312)
[0000][PE] mean and std.dev: (843.00, 879.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 400.427 CPU sec, 22.427 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513452, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 877, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5385)
[0000][PE] mean and std.dev: (1062.00, 937.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.31, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 397.125 CPU sec, 22.244 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512256, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 423, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3608)
[0000][PE] mean and std.dev: (823.62, 635.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1353, 2932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7078)
[0000][PE] mean and std.dev: (1598.91, 1182.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 397.205 CPU sec, 22.238 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513023, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (727, 1317, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6691)
[0000][PE] mean and std.dev: (1314.75, 830.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 401.701 CPU sec, 22.515 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512460, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 408, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (799.45, 710.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1031, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2927)
[0000][PE] mean and std.dev: (1073.11, 294.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 399.826 CPU sec, 22.387 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512381, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 398.201 CPU sec, 22.323 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512598, 7, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 395.116 CPU sec, 22.112 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512762, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 414, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2456)
[0000][PE] mean and std.dev: (492.83, 414.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.24, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1323, 2041, 3080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6594)
[0000][PE] mean and std.dev: (2280.20, 1362.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 398.218 CPU sec, 22.373 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512799, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 443, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2514)
[0000][PE] mean and std.dev: (552.54, 473.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1358, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5532)
[0000][PE] mean and std.dev: (1693.78, 1317.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 401.249 CPU sec, 22.481 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512709, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 639, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (790.46, 689.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 406.210 CPU sec, 22.784 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513067, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 876, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3840)
[0000][PE] mean and std.dev: (984.44, 652.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 397.748 CPU sec, 22.257 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512485, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 434, 692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1482)
[0000][PE] mean and std.dev: (495.10, 271.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 397.691 CPU sec, 22.268 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513175, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 412, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5601)
[0000][PE] mean and std.dev: (1165.64, 1410.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 394.539 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512713, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 740, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1761)
[0000][PE] mean and std.dev: (564.50, 296.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1356, 2588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5672)
[0000][PE] mean and std.dev: (1888.00, 1404.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 396.047 CPU sec, 22.201 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512912, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 376, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2027)
[0000][PE] mean and std.dev: (538.91, 305.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1734, 2679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5887)
[0000][PE] mean and std.dev: (2069.64, 1250.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 396.285 CPU sec, 22.205 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512923, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 545, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6393)
[0000][PE] mean and std.dev: (1298.07, 1098.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1607, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3907)
[0000][PE] mean and std.dev: (1642.90, 800.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 400.270 CPU sec, 22.408 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512913, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.43, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 397.798 CPU sec, 22.294 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206088
	[0000][ M::kt_pipeline] read 1206088 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512991, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 885, 2601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7119)
[0000][PE] mean and std.dev: (1339.11, 1110.30)
[0000][PE] low and high boundaries for proper pairs: (1, 9378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1225, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (1304.50, 618.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 399.158 CPU sec, 22.354 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512821, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 773, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (1162.17, 1143.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.97, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206088 reads in 395.225 CPU sec, 22.114 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512863, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 523, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4733)
[0000][PE] mean and std.dev: (951.50, 871.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 390.997 CPU sec, 21.865 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512843, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 247, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (692.85, 755.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 394.378 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513002, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 469, 653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1531)
[0000][PE] mean and std.dev: (418.78, 263.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 396.024 CPU sec, 22.150 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512680, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 347, 514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1172)
[0000][PE] mean and std.dev: (314.00, 150.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.75, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 393.110 CPU sec, 22.016 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512896, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 377, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3782)
[0000][PE] mean and std.dev: (854.23, 696.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.06, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (678, 1381, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (1222.46, 852.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 394.152 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512770, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 729, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4682)
[0000][PE] mean and std.dev: (1140.21, 985.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 394.664 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512543, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 429, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2420)
[0000][PE] mean and std.dev: (533.00, 378.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (604, 1136, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4045)
[0000][PE] mean and std.dev: (1124.27, 653.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 398.041 CPU sec, 22.285 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206088
	[0000][ M::kt_pipeline] read 1206088 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512772, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 478, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2244)
[0000][PE] mean and std.dev: (616.12, 461.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 395.547 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512623, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 849, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2547)
[0000][PE] mean and std.dev: (584.70, 346.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.66, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206088 reads in 395.165 CPU sec, 22.136 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512775, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 914, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (853.25, 504.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 398.028 CPU sec, 22.320 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512995, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 705, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3381)
[0000][PE] mean and std.dev: (754.73, 605.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 1304, 2951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8217)
[0000][PE] mean and std.dev: (1510.38, 1296.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 393.356 CPU sec, 22.081 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512933, 5, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.48, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 396.231 CPU sec, 22.171 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 512832, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 308, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1744)
[0000][PE] mean and std.dev: (301.52, 239.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.57, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 395.555 CPU sec, 22.163 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512680, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 441, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2845)
[0000][PE] mean and std.dev: (644.70, 567.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.67, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 842, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (871.89, 243.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3606)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 397.682 CPU sec, 22.247 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513152, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 300, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (616.00, 486.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.35, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 392.899 CPU sec, 21.991 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512904, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 1592, 4910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13888)
[0000][PE] mean and std.dev: (2343.50, 2477.07)
[0000][PE] low and high boundaries for proper pairs: (1, 18377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 392.657 CPU sec, 21.990 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513035, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 530, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3930)
[0000][PE] mean and std.dev: (914.08, 899.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 393.259 CPU sec, 22.010 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512863, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 336, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3091)
[0000][PE] mean and std.dev: (673.57, 637.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 392.773 CPU sec, 21.999 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512722, 6, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 396.808 CPU sec, 22.231 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512399, 2, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.97, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 395.945 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512892, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 368, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2872)
[0000][PE] mean and std.dev: (673.17, 546.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 394.607 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512849, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (612, 1642, 3438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9090)
[0000][PE] mean and std.dev: (1798.83, 1452.56)
[0000][PE] low and high boundaries for proper pairs: (1, 11916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.98, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1325, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (1080.40, 605.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 395.929 CPU sec, 22.125 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512984, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 338, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1527)
[0000][PE] mean and std.dev: (350.73, 156.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.64, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 393.336 CPU sec, 22.002 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513096, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 925, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (971.64, 920.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.68, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 396.108 CPU sec, 22.155 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512734, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.44, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 394.533 CPU sec, 22.087 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512863, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 694, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3851)
[0000][PE] mean and std.dev: (841.86, 676.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.46, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (499, 1155, 2700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7102)
[0000][PE] mean and std.dev: (1913.20, 1843.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 391.005 CPU sec, 21.886 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512767, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 917, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5275)
[0000][PE] mean and std.dev: (1024.00, 826.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.33, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 396.031 CPU sec, 22.229 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512726, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 296, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2760)
[0000][PE] mean and std.dev: (597.00, 572.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 391.485 CPU sec, 21.940 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512313, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 897, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4861)
[0000][PE] mean and std.dev: (1169.58, 1099.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1374, 2874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7074)
[0000][PE] mean and std.dev: (1606.58, 1345.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 400.225 CPU sec, 22.428 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512883, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 352, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1312)
[0000][PE] mean and std.dev: (408.39, 266.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1454, 3065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7011)
[0000][PE] mean and std.dev: (2195.08, 1903.90)
[0000][PE] low and high boundaries for proper pairs: (1, 9811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 393.372 CPU sec, 22.022 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512715, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 480, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2856)
[0000][PE] mean and std.dev: (675.92, 407.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 395.253 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 512981, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 321, 867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2187)
[0000][PE] mean and std.dev: (468.24, 405.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 394.325 CPU sec, 22.115 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512848, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 745, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3694)
[0000][PE] mean and std.dev: (846.92, 599.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1099, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (44, 2099)
[0000][PE] mean and std.dev: (868.64, 453.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 394.757 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513239, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 369, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3180)
[0000][PE] mean and std.dev: (708.50, 723.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.47, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1263, 1530, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (127, 2967)
[0000][PE] mean and std.dev: (1322.64, 537.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 391.812 CPU sec, 21.931 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513067, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1484, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5413)
[0000][PE] mean and std.dev: (1726.17, 1305.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6965)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 392.425 CPU sec, 21.961 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512694, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 732, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2978)
[0000][PE] mean and std.dev: (809.23, 670.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1219, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (1397.00, 965.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 394.619 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512173, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 556, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3693)
[0000][PE] mean and std.dev: (694.92, 538.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 395.005 CPU sec, 22.156 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512854, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 395, 619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1305)
[0000][PE] mean and std.dev: (350.25, 163.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 389.933 CPU sec, 21.800 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512934, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1392, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (1146.50, 432.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 393.090 CPU sec, 22.003 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512841, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 466, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2963)
[0000][PE] mean and std.dev: (666.85, 615.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 393.653 CPU sec, 22.006 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512704, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 498, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2882)
[0000][PE] mean and std.dev: (726.41, 737.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 395.955 CPU sec, 22.135 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512849, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1421, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4833)
[0000][PE] mean and std.dev: (1558.36, 1064.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6150)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 394.619 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513041, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 349, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4844)
[0000][PE] mean and std.dev: (877.56, 848.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 398.132 CPU sec, 22.296 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512664, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 285, 606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1450)
[0000][PE] mean and std.dev: (427.52, 354.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 394.663 CPU sec, 22.102 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512802, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 403, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3959)
[0000][PE] mean and std.dev: (739.92, 712.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.62, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1123, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2773)
[0000][PE] mean and std.dev: (1233.20, 584.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 394.125 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206114
	[0000][ M::kt_pipeline] read 1206114 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512339, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 355, 685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1507)
[0000][PE] mean and std.dev: (469.15, 358.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 395.812 CPU sec, 22.166 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512491, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 690, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4741)
[0000][PE] mean and std.dev: (1134.07, 1193.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206114 reads in 397.154 CPU sec, 22.224 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512922, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (552, 872, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (872.90, 673.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 394.224 CPU sec, 22.114 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512996, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 429, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2387)
[0000][PE] mean and std.dev: (667.31, 600.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 395.972 CPU sec, 22.194 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512606, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 430, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4308)
[0000][PE] mean and std.dev: (746.94, 648.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1205, 1378, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (1303.18, 607.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 395.455 CPU sec, 22.156 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 513032, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 394.259 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512775, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 658, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2491)
[0000][PE] mean and std.dev: (723.00, 521.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 395.005 CPU sec, 22.121 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512871, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 368, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4762)
[0000][PE] mean and std.dev: (1053.36, 910.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1622, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (1365.20, 538.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 395.241 CPU sec, 22.112 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512689, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 398.541 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512553, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 307, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (850.46, 871.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 391.184 CPU sec, 21.886 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512870, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 391, 692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1670)
[0000][PE] mean and std.dev: (453.33, 342.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.99, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1079, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (1300.40, 933.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 391.449 CPU sec, 21.915 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513488, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 379, 2364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6482)
[0000][PE] mean and std.dev: (1121.46, 1072.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 391.791 CPU sec, 21.900 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512736, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.33, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1365, 2903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7045)
[0000][PE] mean and std.dev: (2050.79, 1753.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9116)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 394.061 CPU sec, 22.030 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512883, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 1010, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (825.30, 612.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 394.439 CPU sec, 22.086 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512745, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 502, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3397)
[0000][PE] mean and std.dev: (685.50, 483.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1423, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (150, 2690)
[0000][PE] mean and std.dev: (1336.11, 638.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 393.343 CPU sec, 22.021 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513330, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (545, 1201, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (1061.00, 529.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 394.337 CPU sec, 22.055 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 513298, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 365, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1896)
[0000][PE] mean and std.dev: (390.39, 241.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 392.218 CPU sec, 21.951 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512584, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 910, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2540)
[0000][PE] mean and std.dev: (654.12, 346.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1068, 3636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9534)
[0000][PE] mean and std.dev: (1698.15, 1318.47)
[0000][PE] low and high boundaries for proper pairs: (1, 12483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 395.462 CPU sec, 22.160 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513020, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 577, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4277)
[0000][PE] mean and std.dev: (1085.23, 1045.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.53, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 396.791 CPU sec, 22.242 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512670, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 464, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (613.40, 494.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1669, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6016)
[0000][PE] mean and std.dev: (1551.00, 890.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 394.103 CPU sec, 22.047 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512850, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 1026, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5774)
[0000][PE] mean and std.dev: (1016.67, 1002.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 391.307 CPU sec, 21.897 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512514, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 517, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (509.30, 350.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 404.284 CPU sec, 22.651 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206060
	[0000][ M::kt_pipeline] read 1206060 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512890, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 499, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1314)
[0000][PE] mean and std.dev: (504.20, 263.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1386, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3865)
[0000][PE] mean and std.dev: (1299.83, 628.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 391.479 CPU sec, 21.911 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512569, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 1078, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3342)
[0000][PE] mean and std.dev: (961.56, 798.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206060 reads in 397.870 CPU sec, 22.258 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206098
	[0000][ M::kt_pipeline] read 1206098 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512630, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 336, 3100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8728)
[0000][PE] mean and std.dev: (1385.08, 1700.36)
[0000][PE] low and high boundaries for proper pairs: (1, 11542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 395.443 CPU sec, 22.122 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512414, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 448, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4499)
[0000][PE] mean and std.dev: (832.40, 689.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1393, 1544, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5362)
[0000][PE] mean and std.dev: (1867.88, 1036.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206098 reads in 394.605 CPU sec, 22.102 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512587, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 360, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3219)
[0000][PE] mean and std.dev: (800.47, 822.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 393.075 CPU sec, 22.020 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512863, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 588, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (722.27, 685.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1354, 2979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6959)
[0000][PE] mean and std.dev: (1814.00, 1461.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 393.743 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512590, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 495, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5406)
[0000][PE] mean and std.dev: (1110.08, 997.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 395.530 CPU sec, 22.180 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512707, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (539, 740, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2261)
[0000][PE] mean and std.dev: (723.44, 322.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 397.173 CPU sec, 22.239 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512883, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 375, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (768.72, 809.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1335, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3093)
[0000][PE] mean and std.dev: (1345.00, 551.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 395.506 CPU sec, 22.169 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513326, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 573, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (881.17, 676.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 395.655 CPU sec, 22.139 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512516, 2, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.62, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 393.662 CPU sec, 22.027 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512514, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 381, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (869.36, 716.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 398.025 CPU sec, 22.292 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512810, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 593, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3608)
[0000][PE] mean and std.dev: (764.79, 716.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 393.158 CPU sec, 22.013 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513137, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 391.959 CPU sec, 22.001 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512504, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 407, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2235)
[0000][PE] mean and std.dev: (398.80, 236.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1296, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (1497.82, 827.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 397.200 CPU sec, 22.250 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513767, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 515, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3435)
[0000][PE] mean and std.dev: (788.94, 622.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.11, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 390.770 CPU sec, 21.861 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512318, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 553, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (912.25, 754.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.65, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1340, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (1011.78, 489.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 400.437 CPU sec, 22.391 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513082, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 662, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4754)
[0000][PE] mean and std.dev: (900.36, 675.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 391.258 CPU sec, 21.917 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512605, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 865, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5086)
[0000][PE] mean and std.dev: (1161.86, 886.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 395.405 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513113, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 595, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2781)
[0000][PE] mean and std.dev: (602.75, 372.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1541, 2773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6031)
[0000][PE] mean and std.dev: (1773.58, 1033.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 392.391 CPU sec, 21.980 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513062, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 335, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2768)
[0000][PE] mean and std.dev: (425.08, 339.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 393.745 CPU sec, 22.026 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512341, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 894, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (852.60, 599.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 395.720 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513668, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 442, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2667)
[0000][PE] mean and std.dev: (670.42, 667.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.67, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 393.324 CPU sec, 21.996 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512869, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 970, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (980.46, 785.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 393.271 CPU sec, 22.012 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512760, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 250, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (707.35, 848.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 392.047 CPU sec, 21.939 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512925, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 672, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5156)
[0000][PE] mean and std.dev: (905.47, 748.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 395.596 CPU sec, 22.169 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512973, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 351, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2031)
[0000][PE] mean and std.dev: (528.19, 443.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 398.945 CPU sec, 22.340 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513336, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 331, 435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 923)
[0000][PE] mean and std.dev: (262.55, 103.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1137, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6830)
[0000][PE] mean and std.dev: (1909.15, 1560.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 394.717 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513063, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 502, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2782)
[0000][PE] mean and std.dev: (660.38, 649.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 399.748 CPU sec, 22.393 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512900, 2, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 398.078 CPU sec, 22.300 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512087, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 318, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2845)
[0000][PE] mean and std.dev: (558.58, 534.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.06, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 397.875 CPU sec, 22.328 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206164
	[0000][ M::kt_pipeline] read 1206164 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513215, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 519, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (655.11, 501.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.98, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 1053, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (1064.89, 744.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 391.461 CPU sec, 21.910 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512647, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 542, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4815)
[0000][PE] mean and std.dev: (802.19, 714.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1305, 2138, 7374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19512)
[0000][PE] mean and std.dev: (3824.00, 3292.38)
[0000][PE] low and high boundaries for proper pairs: (1, 25581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206164 reads in 397.430 CPU sec, 22.250 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512499, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 394.814 CPU sec, 22.115 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512711, 5, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 395.585 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512811, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 1159, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (1078.17, 715.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (694, 1103, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (1276.78, 1074.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 390.843 CPU sec, 21.893 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512640, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 351, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 987)
[0000][PE] mean and std.dev: (331.36, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 396.086 CPU sec, 22.142 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512830, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 376, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (654.54, 626.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1243, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (1204.67, 376.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 393.157 CPU sec, 22.024 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512929, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 393, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (823.69, 842.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.15, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 395.430 CPU sec, 22.118 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513057, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (569, 962, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2603)
[0000][PE] mean and std.dev: (813.60, 380.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.49, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1284, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5724)
[0000][PE] mean and std.dev: (1485.82, 873.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 393.174 CPU sec, 21.982 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512571, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 477, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (1019.50, 1063.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1285, 2419, 2829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5917)
[0000][PE] mean and std.dev: (2026.70, 857.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 399.476 CPU sec, 22.374 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512999, 5, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 395.994 CPU sec, 22.165 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512682, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 396, 771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1761)
[0000][PE] mean and std.dev: (481.93, 338.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1311, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4758)
[0000][PE] mean and std.dev: (1336.36, 573.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 392.976 CPU sec, 22.012 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512245, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 741, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4634)
[0000][PE] mean and std.dev: (816.64, 603.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 398.035 CPU sec, 22.269 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512863, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 428, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2124)
[0000][PE] mean and std.dev: (637.47, 512.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.54, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 392.654 CPU sec, 21.960 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512967, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 505, 723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1525)
[0000][PE] mean and std.dev: (457.89, 235.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 389.997 CPU sec, 21.823 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512632, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 326, 2946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8310)
[0000][PE] mean and std.dev: (1334.82, 1600.24)
[0000][PE] low and high boundaries for proper pairs: (1, 10992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 393.687 CPU sec, 22.022 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512850, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 1036, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5443)
[0000][PE] mean and std.dev: (1284.86, 1045.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 397.234 CPU sec, 22.246 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513017, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 569, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (696.22, 527.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 394.505 CPU sec, 22.077 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512895, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 442, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5637)
[0000][PE] mean and std.dev: (1045.00, 1071.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1344, 2799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7043)
[0000][PE] mean and std.dev: (1624.23, 1208.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 396.779 CPU sec, 22.220 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512696, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 403, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1172)
[0000][PE] mean and std.dev: (379.40, 199.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 396.165 CPU sec, 22.167 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512569, 2, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.54, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 394.568 CPU sec, 22.098 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512455, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 1265, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3900)
[0000][PE] mean and std.dev: (1044.33, 593.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.52, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 388.748 CPU sec, 21.787 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512993, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 896, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3463)
[0000][PE] mean and std.dev: (862.14, 703.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1256, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (1296.40, 677.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 391.536 CPU sec, 21.939 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513143, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 488, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (566.10, 378.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1168, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4452)
[0000][PE] mean and std.dev: (1317.64, 709.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 389.381 CPU sec, 21.809 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512668, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 469, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2930)
[0000][PE] mean and std.dev: (759.43, 611.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.54, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 394.415 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512574, 2, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 394.412 CPU sec, 22.064 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513154, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 337, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (606.92, 649.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 396.758 CPU sec, 22.195 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512540, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 307, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2252)
[0000][PE] mean and std.dev: (583.33, 561.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 394.820 CPU sec, 22.092 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512402, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 643, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2619)
[0000][PE] mean and std.dev: (717.08, 556.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1139, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (939.00, 392.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 393.592 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513507, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 403, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1945)
[0000][PE] mean and std.dev: (451.75, 209.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 390.470 CPU sec, 21.865 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513025, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 399, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2278)
[0000][PE] mean and std.dev: (604.12, 614.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 1421, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5137)
[0000][PE] mean and std.dev: (1390.57, 848.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 392.353 CPU sec, 21.970 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512762, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 418, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1852)
[0000][PE] mean and std.dev: (617.92, 408.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (407, 1014, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (954.50, 651.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 395.337 CPU sec, 22.124 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513103, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 433, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2805)
[0000][PE] mean and std.dev: (711.69, 623.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.00, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 397.858 CPU sec, 22.334 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512674, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 899, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2708)
[0000][PE] mean and std.dev: (725.44, 469.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 393.259 CPU sec, 22.045 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512630, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 373, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 826)
[0000][PE] mean and std.dev: (325.00, 120.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1585, 2845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6375)
[0000][PE] mean and std.dev: (2063.00, 1394.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 393.842 CPU sec, 22.047 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206192
	[0000][ M::kt_pipeline] read 1206192 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512678, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 378, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4732)
[0000][PE] mean and std.dev: (700.60, 782.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.20, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 394.385 CPU sec, 22.087 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513050, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 955, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3929)
[0000][PE] mean and std.dev: (1170.73, 892.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206192 reads in 395.506 CPU sec, 22.154 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512350, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 1211, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5564)
[0000][PE] mean and std.dev: (1614.82, 1568.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 396.647 CPU sec, 22.198 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513096, 3, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 342, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2844)
[0000][PE] mean and std.dev: (632.64, 508.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 393.625 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512931, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 388, 813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1741)
[0000][PE] mean and std.dev: (525.40, 322.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1420, 3244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7404)
[0000][PE] mean and std.dev: (1638.33, 913.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 395.074 CPU sec, 22.113 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206066
	[0000][ M::kt_pipeline] read 1206066 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512731, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 336, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2908)
[0000][PE] mean and std.dev: (720.91, 831.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.55, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 398.951 CPU sec, 22.354 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206088
	[0000][ M::kt_pipeline] read 1206088 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513011, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 558, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1850)
[0000][PE] mean and std.dev: (551.25, 347.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.24, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206066 reads in 393.271 CPU sec, 22.008 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512419, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 371, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3867)
[0000][PE] mean and std.dev: (842.85, 919.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206088 reads in 397.953 CPU sec, 22.298 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513162, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 654, 845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2111)
[0000][PE] mean and std.dev: (404.12, 293.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.41, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 395.295 CPU sec, 22.108 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513182, 5, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.44, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 394.477 CPU sec, 22.062 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512734, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1587, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3496)
[0000][PE] mean and std.dev: (1238.33, 488.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4371)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 393.233 CPU sec, 22.044 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206080
	[0000][ M::kt_pipeline] read 1206080 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 513183, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 353, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2659)
[0000][PE] mean and std.dev: (599.94, 579.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 391.125 CPU sec, 21.873 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513115, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 858, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (928.15, 637.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206080 reads in 392.415 CPU sec, 21.978 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512987, 2, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 396.423 CPU sec, 22.206 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512646, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1181, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (245, 2430)
[0000][PE] mean and std.dev: (1198.30, 469.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3076)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 396.141 CPU sec, 22.130 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206158
	[0000][ M::kt_pipeline] read 1206158 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512765, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 563, 2869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7853)
[0000][PE] mean and std.dev: (1605.40, 1672.67)
[0000][PE] low and high boundaries for proper pairs: (1, 10345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.40, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 395.211 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512663, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 476, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3750)
[0000][PE] mean and std.dev: (802.87, 741.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206158 reads in 397.929 CPU sec, 22.282 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512975, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 826, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (910.17, 780.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.00, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 392.436 CPU sec, 22.018 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513224, 6, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.27, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 398.414 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206140
	[0000][ M::kt_pipeline] read 1206140 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512550, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (660, 2034, 3212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8316)
[0000][PE] mean and std.dev: (2444.82, 2421.05)
[0000][PE] low and high boundaries for proper pairs: (1, 12129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 396.059 CPU sec, 22.164 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206154
	[0000][ M::kt_pipeline] read 1206154 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512667, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 582, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5501)
[0000][PE] mean and std.dev: (1126.31, 1193.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.95, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206140 reads in 392.555 CPU sec, 21.981 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513067, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 898, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3232)
[0000][PE] mean and std.dev: (689.78, 541.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206154 reads in 394.039 CPU sec, 22.085 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513321, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 517, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1868)
[0000][PE] mean and std.dev: (544.05, 440.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 392.918 CPU sec, 22.000 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512653, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 413, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (551.92, 484.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (559, 981, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (801.12, 313.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 395.315 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512424, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 1078, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (1080.25, 823.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 395.115 CPU sec, 22.146 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512549, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 311, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3897)
[0000][PE] mean and std.dev: (776.85, 795.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1274, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2851)
[0000][PE] mean and std.dev: (1034.20, 479.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 395.527 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512613, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 633, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4746)
[0000][PE] mean and std.dev: (1120.12, 1110.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 394.683 CPU sec, 22.125 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512645, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 355, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5028)
[0000][PE] mean and std.dev: (672.46, 796.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1360, 2306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5534)
[0000][PE] mean and std.dev: (1605.38, 1184.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 392.184 CPU sec, 21.939 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512861, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 275, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 816)
[0000][PE] mean and std.dev: (219.15, 97.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 391.120 CPU sec, 21.930 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512012, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 302, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (633.18, 810.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 393.408 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513140, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.40, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 394.282 CPU sec, 22.064 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512878, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 363, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5655)
[0000][PE] mean and std.dev: (1056.22, 1260.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1338, 1612, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (26, 3306)
[0000][PE] mean and std.dev: (1534.90, 753.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 391.320 CPU sec, 21.913 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512669, 7, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.33, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 394.988 CPU sec, 22.123 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512254, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 485, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (1054.67, 1224.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1481, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4312)
[0000][PE] mean and std.dev: (1251.00, 473.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 396.169 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512479, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (519, 1212, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6633)
[0000][PE] mean and std.dev: (1345.67, 946.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.27, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 391.246 CPU sec, 21.896 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512533, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 454, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1419)
[0000][PE] mean and std.dev: (476.57, 305.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.37, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 396.502 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512132, 6, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 393.736 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512686, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 427, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (872.88, 1020.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1275, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (1300.67, 843.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4831)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 394.559 CPU sec, 22.078 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512902, 4, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 393.209 CPU sec, 22.011 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512451, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 395, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (609.45, 630.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5207)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 801, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2423)
[0000][PE] mean and std.dev: (773.20, 404.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 393.553 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512683, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 438, 452)
[0000][PE] low and high boundaries for computing mean and std.dev: (17, 742)
[0000][PE] mean and std.dev: (340.00, 112.63)
[0000][PE] low and high boundaries for proper pairs: (1, 887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 1149, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (1228.40, 682.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 391.780 CPU sec, 21.911 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512893, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1019, 1236, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5369)
[0000][PE] mean and std.dev: (1539.00, 1004.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1107, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (69, 2174)
[0000][PE] mean and std.dev: (965.67, 467.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 389.751 CPU sec, 21.824 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513306, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1643, 3036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8498)
[0000][PE] mean and std.dev: (1904.57, 2086.23)
[0000][PE] low and high boundaries for proper pairs: (1, 11229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 393.772 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512816, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1464, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5007)
[0000][PE] mean and std.dev: (1001.11, 760.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.66, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 391.708 CPU sec, 21.925 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512444, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 672, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3196)
[0000][PE] mean and std.dev: (763.94, 677.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 395.462 CPU sec, 22.139 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512349, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 613, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4236)
[0000][PE] mean and std.dev: (871.67, 821.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1414, 1902, 2883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5821)
[0000][PE] mean and std.dev: (2223.83, 1266.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 393.378 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513203, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 402, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2003)
[0000][PE] mean and std.dev: (543.00, 352.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.33, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1284, 2885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6959)
[0000][PE] mean and std.dev: (1665.70, 1086.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 390.139 CPU sec, 21.816 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512860, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 391, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4876)
[0000][PE] mean and std.dev: (766.33, 701.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.04, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 392.697 CPU sec, 21.963 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206076
	[0000][ M::kt_pipeline] read 1206076 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512799, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 588, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4297)
[0000][PE] mean and std.dev: (927.23, 859.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 394.181 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512804, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 375, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2874)
[0000][PE] mean and std.dev: (590.47, 505.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.03, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1240, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (1486.47, 759.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206076 reads in 393.890 CPU sec, 22.044 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512569, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 672, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3741)
[0000][PE] mean and std.dev: (873.55, 691.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1425, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (1448.60, 514.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 395.571 CPU sec, 22.179 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513044, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 426, 807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2075)
[0000][PE] mean and std.dev: (382.29, 277.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.91, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 390.046 CPU sec, 21.846 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512494, 0, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 401, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2980)
[0000][PE] mean and std.dev: (646.94, 459.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 394.537 CPU sec, 22.087 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512889, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 906, 2992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8210)
[0000][PE] mean and std.dev: (1600.50, 1575.30)
[0000][PE] low and high boundaries for proper pairs: (1, 10819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 393.510 CPU sec, 22.045 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512530, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 619, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (689.30, 599.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.37, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 395.029 CPU sec, 22.096 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513025, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 761, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (970.53, 718.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1250, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3361)
[0000][PE] mean and std.dev: (1265.27, 719.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 393.700 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512908, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 376, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3137)
[0000][PE] mean and std.dev: (418.80, 286.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.75, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 395.612 CPU sec, 22.161 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512930, 0, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 393, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2738)
[0000][PE] mean and std.dev: (639.18, 654.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 394.889 CPU sec, 22.078 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512674, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 731, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (795.69, 549.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 1388, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (1371.93, 802.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 393.915 CPU sec, 22.032 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512503, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 397, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2353)
[0000][PE] mean and std.dev: (562.62, 521.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 395.005 CPU sec, 22.115 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512636, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 443, 826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1792)
[0000][PE] mean and std.dev: (394.00, 221.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 394.916 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512839, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 1232, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7015)
[0000][PE] mean and std.dev: (1357.71, 1177.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 393.734 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512412, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 367, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1342)
[0000][PE] mean and std.dev: (331.00, 210.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1653, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4297)
[0000][PE] mean and std.dev: (1489.21, 790.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 392.218 CPU sec, 21.950 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512298, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 588, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (840.83, 870.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 390.020 CPU sec, 21.806 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206136
	[0000][ M::kt_pipeline] read 1206136 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512904, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 391.553 CPU sec, 21.937 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512764, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 714, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2975)
[0000][PE] mean and std.dev: (741.50, 643.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206136 reads in 397.941 CPU sec, 22.304 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512799, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 954, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6254)
[0000][PE] mean and std.dev: (1233.61, 1062.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.22, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 394.574 CPU sec, 22.065 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512555, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 292, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (789.08, 946.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1356, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4061)
[0000][PE] mean and std.dev: (1314.23, 544.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 396.397 CPU sec, 22.184 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512640, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.59, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 391.619 CPU sec, 21.890 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513116, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 365, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3798)
[0000][PE] mean and std.dev: (759.92, 658.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.33, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 392.009 CPU sec, 21.976 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512422, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 390, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6406)
[0000][PE] mean and std.dev: (1048.93, 1101.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 390.845 CPU sec, 21.884 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512750, 11, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (636, 1012, 5635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15633)
[0000][PE] mean and std.dev: (2233.09, 2452.89)
[0000][PE] low and high boundaries for proper pairs: (1, 20632)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 397.164 CPU sec, 22.211 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512803, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 369, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (632.00, 480.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1260, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3518)
[0000][PE] mean and std.dev: (1194.83, 501.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 393.058 CPU sec, 21.991 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512910, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 1313, 4606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13164)
[0000][PE] mean and std.dev: (2008.08, 1976.20)
[0000][PE] low and high boundaries for proper pairs: (1, 17443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.40, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (609, 1300, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (1051.22, 443.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 390.380 CPU sec, 21.898 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512633, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 448, 3263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9143)
[0000][PE] mean and std.dev: (1832.30, 2229.88)
[0000][PE] low and high boundaries for proper pairs: (1, 12083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.49, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 392.448 CPU sec, 22.017 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512629, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 397, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2676)
[0000][PE] mean and std.dev: (586.27, 444.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 392.917 CPU sec, 21.992 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513105, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 269, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1631)
[0000][PE] mean and std.dev: (367.36, 306.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1334, 1513, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (1568.11, 666.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 396.166 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512718, 6, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 397.160 CPU sec, 22.224 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512644, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 452, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2161)
[0000][PE] mean and std.dev: (584.21, 352.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.51, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 393.204 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512747, 6, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 391.515 CPU sec, 21.924 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513068, 3, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 388.288 CPU sec, 21.761 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512783, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 407, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2777)
[0000][PE] mean and std.dev: (713.62, 694.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 392.454 CPU sec, 21.957 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512626, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 331, 400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 910)
[0000][PE] mean and std.dev: (302.10, 148.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 392.652 CPU sec, 21.973 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512638, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 447, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6037)
[0000][PE] mean and std.dev: (1225.23, 1254.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1329, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4533)
[0000][PE] mean and std.dev: (1386.08, 1020.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 392.660 CPU sec, 21.987 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206166
	[0000][ M::kt_pipeline] read 1206166 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512320, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 387, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2695)
[0000][PE] mean and std.dev: (655.92, 667.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1506, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5321)
[0000][PE] mean and std.dev: (1491.83, 688.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 394.669 CPU sec, 22.085 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512604, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 431, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (713.22, 622.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.42, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206166 reads in 393.595 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512979, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 870, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (584.12, 431.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 392.247 CPU sec, 21.953 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512847, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 472, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (619.29, 654.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.71, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (612, 1052, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (1128.60, 706.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 391.248 CPU sec, 21.864 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512602, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (609, 1596, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (1421.55, 838.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1321, 1561, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3610)
[0000][PE] mean and std.dev: (1511.09, 467.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 397.043 CPU sec, 22.245 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512899, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 444, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2555)
[0000][PE] mean and std.dev: (486.56, 432.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 391.517 CPU sec, 21.938 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513011, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1087, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3186)
[0000][PE] mean and std.dev: (891.71, 594.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.40, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1335, 2965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7043)
[0000][PE] mean and std.dev: (1707.30, 1017.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 390.454 CPU sec, 21.847 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512926, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 478, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (854.30, 768.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 391.984 CPU sec, 21.956 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513358, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 394, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (659.88, 650.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (490, 1724, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6763)
[0000][PE] mean and std.dev: (1892.75, 1765.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 390.786 CPU sec, 21.899 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512168, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 423, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2292)
[0000][PE] mean and std.dev: (605.04, 428.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 393.029 CPU sec, 22.038 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512423, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 392.043 CPU sec, 21.971 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512864, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 451, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3225)
[0000][PE] mean and std.dev: (800.76, 636.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1323, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3397)
[0000][PE] mean and std.dev: (1519.93, 723.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 390.726 CPU sec, 21.886 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512902, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 938, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (916.00, 625.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 392.094 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206122
	[0000][ M::kt_pipeline] read 1206122 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512852, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 554, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3001)
[0000][PE] mean and std.dev: (601.50, 426.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1593, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5437)
[0000][PE] mean and std.dev: (1533.11, 926.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 392.853 CPU sec, 22.005 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206096
	[0000][ M::kt_pipeline] read 1206096 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512814, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 395, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (728.50, 668.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.35, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206122 reads in 393.463 CPU sec, 22.055 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512399, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 319, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 916)
[0000][PE] mean and std.dev: (332.40, 157.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206096 reads in 389.726 CPU sec, 21.806 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513132, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1083, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4438)
[0000][PE] mean and std.dev: (1087.00, 774.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1543, 2395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5755)
[0000][PE] mean and std.dev: (1520.00, 738.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 389.614 CPU sec, 21.783 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512633, 1, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.74, 113.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 395.799 CPU sec, 22.175 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512783, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 271, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 591)
[0000][PE] mean and std.dev: (257.09, 56.54)
[0000][PE] low and high boundaries for proper pairs: (1, 709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.35, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 389.958 CPU sec, 21.843 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512483, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 480, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1788)
[0000][PE] mean and std.dev: (458.09, 266.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 398.314 CPU sec, 22.332 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512431, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 604, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4656)
[0000][PE] mean and std.dev: (992.13, 934.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1532, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (1690.90, 747.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 394.888 CPU sec, 22.172 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512847, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1222, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (982.50, 660.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 392.478 CPU sec, 21.948 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512786, 7, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 390.661 CPU sec, 21.860 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512636, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 451, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (754.39, 728.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 395.381 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512964, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 469, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4714)
[0000][PE] mean and std.dev: (711.42, 713.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (504, 960, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5868)
[0000][PE] mean and std.dev: (1217.90, 783.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 393.142 CPU sec, 22.009 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512671, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1386, 3583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8543)
[0000][PE] mean and std.dev: (2605.27, 2366.15)
[0000][PE] low and high boundaries for proper pairs: (1, 12070)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 391.292 CPU sec, 21.929 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513001, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 361, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1255)
[0000][PE] mean and std.dev: (296.70, 129.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 393.183 CPU sec, 22.026 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512516, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 460, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2503)
[0000][PE] mean and std.dev: (555.50, 390.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1990, 3534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8652)
[0000][PE] mean and std.dev: (2129.91, 1572.90)
[0000][PE] low and high boundaries for proper pairs: (1, 11211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 395.289 CPU sec, 22.122 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513161, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 898, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2458)
[0000][PE] mean and std.dev: (730.73, 483.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 389.417 CPU sec, 21.843 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206106
	[0000][ M::kt_pipeline] read 1206106 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512445, 1, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 389.362 CPU sec, 21.793 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512657, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 389, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (555.69, 399.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206106 reads in 394.983 CPU sec, 22.088 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513155, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 483, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2289)
[0000][PE] mean and std.dev: (680.38, 499.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.33, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1430, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (1450.62, 436.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 390.704 CPU sec, 21.917 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513043, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 897, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4641)
[0000][PE] mean and std.dev: (1017.57, 923.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 393.130 CPU sec, 22.008 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513162, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 574, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (1083.25, 1116.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 391.427 CPU sec, 21.898 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512368, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 311, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3865)
[0000][PE] mean and std.dev: (618.62, 650.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 392.675 CPU sec, 21.992 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512964, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 300, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3066)
[0000][PE] mean and std.dev: (446.09, 364.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 396.491 CPU sec, 22.178 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512430, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 685, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2780)
[0000][PE] mean and std.dev: (732.00, 683.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 398.115 CPU sec, 22.291 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206066
	[0000][ M::kt_pipeline] read 1206066 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512631, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 361, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1046)
[0000][PE] mean and std.dev: (368.50, 215.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.35, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1433, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (1204.75, 452.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 393.773 CPU sec, 22.036 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512626, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 426, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2637)
[0000][PE] mean and std.dev: (522.10, 400.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.44, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (739, 2108, 2852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7078)
[0000][PE] mean and std.dev: (2119.64, 1852.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206066 reads in 390.833 CPU sec, 21.912 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512780, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 635, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2608)
[0000][PE] mean and std.dev: (573.22, 392.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 391.243 CPU sec, 21.913 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512702, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 349, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 978)
[0000][PE] mean and std.dev: (344.67, 175.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 395.809 CPU sec, 22.156 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512799, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 357, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4157)
[0000][PE] mean and std.dev: (1029.00, 1176.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 394.535 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513112, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 867, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6693)
[0000][PE] mean and std.dev: (1225.73, 1279.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1365, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3116)
[0000][PE] mean and std.dev: (1075.12, 448.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 391.189 CPU sec, 21.890 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512903, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 442, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4215)
[0000][PE] mean and std.dev: (975.21, 945.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.50, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 392.392 CPU sec, 21.981 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512766, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.58, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 393.850 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512798, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 532, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2011)
[0000][PE] mean and std.dev: (756.70, 532.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 397.004 CPU sec, 22.278 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512803, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 394.310 CPU sec, 22.115 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512479, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 360, 681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1627)
[0000][PE] mean and std.dev: (401.85, 307.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.29, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 402.040 CPU sec, 22.541 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 513122, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 499, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2513)
[0000][PE] mean and std.dev: (564.62, 414.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.32, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 1223, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5051)
[0000][PE] mean and std.dev: (1192.58, 771.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6607)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 392.402 CPU sec, 21.984 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512502, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 536, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6927)
[0000][PE] mean and std.dev: (1628.38, 1894.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.31, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1300, 3429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8985)
[0000][PE] mean and std.dev: (1764.38, 1167.15)
[0000][PE] low and high boundaries for proper pairs: (1, 11763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 400.894 CPU sec, 22.474 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512354, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (604, 1478, 2934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7594)
[0000][PE] mean and std.dev: (1640.33, 1156.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 393.479 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512331, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 312, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 861)
[0000][PE] mean and std.dev: (265.08, 107.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 1257, 2525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6233)
[0000][PE] mean and std.dev: (1231.56, 889.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 391.359 CPU sec, 21.921 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206100
	[0000][ M::kt_pipeline] read 1206100 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512491, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 417, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (830.21, 773.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 395.713 CPU sec, 22.148 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512875, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 463, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (749.12, 607.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206100 reads in 395.629 CPU sec, 22.195 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512687, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 972, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4839)
[0000][PE] mean and std.dev: (1020.24, 736.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 391.054 CPU sec, 21.882 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512581, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 919, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2785)
[0000][PE] mean and std.dev: (779.00, 528.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 392.881 CPU sec, 21.978 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206076
	[0000][ M::kt_pipeline] read 1206076 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512834, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 403, 5189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15077)
[0000][PE] mean and std.dev: (1825.08, 2527.11)
[0000][PE] low and high boundaries for proper pairs: (1, 20021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.39, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 393.561 CPU sec, 22.035 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513093, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (491, 1179, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5114)
[0000][PE] mean and std.dev: (1431.05, 1164.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1047, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 1993)
[0000][PE] mean and std.dev: (893.40, 324.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206076 reads in 391.238 CPU sec, 21.869 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 513126, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 585, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4431)
[0000][PE] mean and std.dev: (965.25, 986.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 391.830 CPU sec, 21.935 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513047, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 213, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2436)
[0000][PE] mean and std.dev: (513.92, 543.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 393.125 CPU sec, 21.982 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512450, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 719, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (651.11, 432.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.53, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1068, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2687)
[0000][PE] mean and std.dev: (1162.70, 355.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 395.808 CPU sec, 22.165 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512804, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 362, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1148)
[0000][PE] mean and std.dev: (349.00, 233.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 392.529 CPU sec, 21.980 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512767, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 397, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2506)
[0000][PE] mean and std.dev: (631.00, 560.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 391.858 CPU sec, 21.937 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512495, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 756, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2911)
[0000][PE] mean and std.dev: (656.11, 438.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1488, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4836)
[0000][PE] mean and std.dev: (1632.00, 858.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 395.247 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512844, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 527, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3153)
[0000][PE] mean and std.dev: (723.79, 682.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 391.358 CPU sec, 21.888 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512937, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 398, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (606.20, 502.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 390.699 CPU sec, 21.820 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513445, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 946, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (898.60, 663.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.63, 113.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1766, 2583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5611)
[0000][PE] mean and std.dev: (1533.40, 780.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 392.578 CPU sec, 22.003 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513432, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 288, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2581)
[0000][PE] mean and std.dev: (506.93, 448.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.99, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1294, 1619, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (426, 2596)
[0000][PE] mean and std.dev: (1480.22, 302.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 392.348 CPU sec, 21.931 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513282, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 1189, 2553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7079)
[0000][PE] mean and std.dev: (1375.60, 1164.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.49, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 393.221 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512886, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 480, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2603)
[0000][PE] mean and std.dev: (446.10, 277.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 395.315 CPU sec, 22.116 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512684, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 658, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3128)
[0000][PE] mean and std.dev: (757.92, 582.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 397.786 CPU sec, 22.273 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512790, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 1503, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5117)
[0000][PE] mean and std.dev: (1041.00, 758.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 394.998 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 513038, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 372, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (728.17, 755.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 393.779 CPU sec, 22.066 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512747, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 437, 872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1948)
[0000][PE] mean and std.dev: (542.80, 351.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 393.962 CPU sec, 22.098 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512771, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 325, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2477)
[0000][PE] mean and std.dev: (496.83, 502.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 394.775 CPU sec, 22.135 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512254, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 454, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (1072.90, 1164.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 390.068 CPU sec, 21.835 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512938, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1458, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (1216.00, 595.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4158)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 387.889 CPU sec, 21.701 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512523, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 384, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (814.70, 782.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1237, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (63, 2658)
[0000][PE] mean and std.dev: (1139.56, 359.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 393.165 CPU sec, 21.986 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512609, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 401, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1893)
[0000][PE] mean and std.dev: (478.75, 382.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1301, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3265)
[0000][PE] mean and std.dev: (1180.54, 516.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 393.400 CPU sec, 22.023 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513154, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1116, 1737, 3648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8712)
[0000][PE] mean and std.dev: (2097.08, 1528.36)
[0000][PE] low and high boundaries for proper pairs: (1, 11244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 393.468 CPU sec, 22.041 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512672, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 399, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (684.22, 762.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1908, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5246)
[0000][PE] mean and std.dev: (2031.30, 1106.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 392.875 CPU sec, 22.016 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 513227, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 687, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (819.48, 571.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1098, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5028)
[0000][PE] mean and std.dev: (1424.91, 812.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 390.772 CPU sec, 21.898 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512426, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 331, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2644)
[0000][PE] mean and std.dev: (526.33, 520.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1316, 1946, 3583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8117)
[0000][PE] mean and std.dev: (2499.92, 1993.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 393.843 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512984, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1310, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5536)
[0000][PE] mean and std.dev: (1189.27, 1265.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 393.519 CPU sec, 22.017 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512494, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 345, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (686.12, 554.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 394.718 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512914, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 1101, 2431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6721)
[0000][PE] mean and std.dev: (1434.75, 1365.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1169, 1247, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (201, 2621)
[0000][PE] mean and std.dev: (1142.67, 358.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 391.301 CPU sec, 21.896 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512843, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 298, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 799)
[0000][PE] mean and std.dev: (257.06, 122.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 388.518 CPU sec, 21.765 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512717, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 446, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2056)
[0000][PE] mean and std.dev: (592.25, 435.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (476, 1308, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (1192.90, 805.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 391.479 CPU sec, 21.909 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512496, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.01, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 394.183 CPU sec, 22.054 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512886, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 397, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1673)
[0000][PE] mean and std.dev: (475.40, 342.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 395.317 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513096, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1270, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (212, 2542)
[0000][PE] mean and std.dev: (1285.09, 511.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3332)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 391.247 CPU sec, 21.949 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513220, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 377, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (597.73, 463.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 391.989 CPU sec, 21.952 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512441, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 398, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3286)
[0000][PE] mean and std.dev: (775.94, 718.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 396.272 CPU sec, 22.211 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513202, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1265, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7173)
[0000][PE] mean and std.dev: (1381.00, 1244.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1325, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5564)
[0000][PE] mean and std.dev: (1775.30, 1355.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 393.907 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512309, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 499, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2124)
[0000][PE] mean and std.dev: (523.38, 383.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.27, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 393.426 CPU sec, 22.020 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512738, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 352, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5112)
[0000][PE] mean and std.dev: (1492.20, 1732.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 1004, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4458)
[0000][PE] mean and std.dev: (1358.50, 1018.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 401.354 CPU sec, 22.510 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206082
	[0000][ M::kt_pipeline] read 1206082 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512609, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 343, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2361)
[0000][PE] mean and std.dev: (520.15, 507.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 391.273 CPU sec, 21.900 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512462, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 386, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2117)
[0000][PE] mean and std.dev: (546.11, 355.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.04, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206082 reads in 395.384 CPU sec, 22.165 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512328, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (462, 832, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2955)
[0000][PE] mean and std.dev: (795.76, 478.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 392.916 CPU sec, 21.998 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512544, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 733, 3362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9434)
[0000][PE] mean and std.dev: (1583.31, 1767.86)
[0000][PE] low and high boundaries for proper pairs: (1, 12470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 389.998 CPU sec, 21.836 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512311, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 639, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1035.45, 878.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 386.007 CPU sec, 21.589 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513554, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (531, 661, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2190)
[0000][PE] mean and std.dev: (780.46, 481.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1396, 1831, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5407)
[0000][PE] mean and std.dev: (1972.82, 1052.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 387.767 CPU sec, 21.715 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513335, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 315, 649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1407)
[0000][PE] mean and std.dev: (329.27, 196.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 390.357 CPU sec, 21.852 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512961, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 320, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2530)
[0000][PE] mean and std.dev: (593.20, 583.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 391.492 CPU sec, 21.932 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512419, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 972, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5519)
[0000][PE] mean and std.dev: (1024.13, 934.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1743, 2656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6022)
[0000][PE] mean and std.dev: (1631.27, 906.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 391.068 CPU sec, 21.868 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512589, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 271, 295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 575)
[0000][PE] mean and std.dev: (201.17, 96.81)
[0000][PE] low and high boundaries for proper pairs: (1, 715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.07, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1195, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2478)
[0000][PE] mean and std.dev: (910.40, 440.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 394.453 CPU sec, 22.082 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512748, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1007, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (915.00, 516.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1812, 4452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11098)
[0000][PE] mean and std.dev: (2628.42, 2010.09)
[0000][PE] low and high boundaries for proper pairs: (1, 14421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 387.624 CPU sec, 21.704 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512706, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 1362, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6219)
[0000][PE] mean and std.dev: (1426.21, 1136.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 390.726 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512572, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 528, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2433)
[0000][PE] mean and std.dev: (539.78, 284.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.32, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 394.472 CPU sec, 22.058 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512895, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 633, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (540.60, 377.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 392.416 CPU sec, 21.967 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512660, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 385, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (754.27, 849.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 393.131 CPU sec, 22.043 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513002, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 335, 690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1498)
[0000][PE] mean and std.dev: (449.27, 337.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.51, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 391.828 CPU sec, 21.957 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512881, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 323, 685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1705)
[0000][PE] mean and std.dev: (360.50, 286.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 393.903 CPU sec, 22.121 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512661, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 510, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2387)
[0000][PE] mean and std.dev: (634.46, 443.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 392.987 CPU sec, 21.993 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512970, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 1147, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (816.64, 479.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.70, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1565, 3815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9351)
[0000][PE] mean and std.dev: (2407.00, 2110.56)
[0000][PE] low and high boundaries for proper pairs: (1, 12119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 388.102 CPU sec, 21.717 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512799, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 536, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (603.83, 524.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.31, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (604, 1042, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (1103.91, 669.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 392.093 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512799, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 1268, 2696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7404)
[0000][PE] mean and std.dev: (1535.81, 1239.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 395.080 CPU sec, 22.088 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513135, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (549, 630, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3492)
[0000][PE] mean and std.dev: (894.53, 620.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 387.252 CPU sec, 21.664 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513217, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (634, 1184, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (1098.87, 830.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 395.829 CPU sec, 22.178 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512711, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 790, 4732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13834)
[0000][PE] mean and std.dev: (1868.30, 2214.99)
[0000][PE] low and high boundaries for proper pairs: (1, 18385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 393.533 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512447, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 908, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4437)
[0000][PE] mean and std.dev: (931.19, 735.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1318, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6422)
[0000][PE] mean and std.dev: (1530.67, 856.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 391.577 CPU sec, 21.917 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512900, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 680, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (741.30, 439.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.44, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1403, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (1370.18, 722.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 391.686 CPU sec, 21.917 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512871, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 300, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (554.55, 539.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1532, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (1488.45, 523.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 390.169 CPU sec, 21.848 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513162, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 392, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2950)
[0000][PE] mean and std.dev: (440.64, 334.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1006, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3192)
[0000][PE] mean and std.dev: (1350.18, 749.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 386.997 CPU sec, 21.642 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513154, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 395, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (188, 578)
[0000][PE] mean and std.dev: (362.10, 51.15)
[0000][PE] low and high boundaries for proper pairs: (110, 656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1352, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (1181.88, 329.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 385.642 CPU sec, 21.610 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512803, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 352, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1688)
[0000][PE] mean and std.dev: (428.92, 397.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1148, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2528)
[0000][PE] mean and std.dev: (1165.43, 486.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 391.968 CPU sec, 21.940 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206102
	[0000][ M::kt_pipeline] read 1206102 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512775, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 919, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2645)
[0000][PE] mean and std.dev: (718.17, 430.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 851, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (930.25, 852.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 389.981 CPU sec, 21.842 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512633, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 342, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2926)
[0000][PE] mean and std.dev: (611.31, 500.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.44, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1188, 3423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8457)
[0000][PE] mean and std.dev: (2051.15, 1747.83)
[0000][PE] low and high boundaries for proper pairs: (1, 10974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206102 reads in 393.890 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513291, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 666, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2027)
[0000][PE] mean and std.dev: (759.79, 488.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 389.342 CPU sec, 21.768 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512732, 2, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 389.016 CPU sec, 21.746 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513112, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 431, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3104)
[0000][PE] mean and std.dev: (554.83, 500.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 387.905 CPU sec, 21.703 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512973, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 1289, 3614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9898)
[0000][PE] mean and std.dev: (2087.26, 2138.54)
[0000][PE] low and high boundaries for proper pairs: (1, 13040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.95, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1529, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4182)
[0000][PE] mean and std.dev: (1530.27, 848.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 391.509 CPU sec, 21.906 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512404, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 507, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5064)
[0000][PE] mean and std.dev: (915.36, 903.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 396.039 CPU sec, 22.164 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512659, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 679, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2189)
[0000][PE] mean and std.dev: (693.00, 457.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1352, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2971)
[0000][PE] mean and std.dev: (1320.30, 601.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 397.274 CPU sec, 22.222 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512565, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 388, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (711.15, 709.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 389.649 CPU sec, 21.828 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512878, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 1141, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5369)
[0000][PE] mean and std.dev: (1214.25, 1156.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.38, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (410, 1051, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3779)
[0000][PE] mean and std.dev: (952.69, 561.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 389.815 CPU sec, 21.791 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512870, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 388.557 CPU sec, 21.780 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206168
	[0000][ M::kt_pipeline] read 1206168 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513072, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 543, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5452)
[0000][PE] mean and std.dev: (1042.23, 947.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.33, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 400.506 CPU sec, 22.452 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513205, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 520, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4464)
[0000][PE] mean and std.dev: (731.00, 605.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206168 reads in 388.844 CPU sec, 21.753 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512700, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 653, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4134)
[0000][PE] mean and std.dev: (855.24, 700.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 388.202 CPU sec, 21.859 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513477, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 242, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1383)
[0000][PE] mean and std.dev: (376.78, 350.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 393.434 CPU sec, 22.026 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512680, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 409, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2631)
[0000][PE] mean and std.dev: (409.67, 283.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 392.222 CPU sec, 21.983 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513206, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 314, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (498.57, 480.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 385.402 CPU sec, 21.551 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512138, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 328, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 892)
[0000][PE] mean and std.dev: (252.38, 104.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.37, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 993, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (167, 1917)
[0000][PE] mean and std.dev: (961.80, 421.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 391.725 CPU sec, 21.931 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513035, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 357, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (571.40, 497.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 390.853 CPU sec, 21.905 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512676, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 411, 750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1556)
[0000][PE] mean and std.dev: (500.25, 296.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (466, 1219, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (1146.70, 901.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 388.326 CPU sec, 21.773 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512970, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 406, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2263)
[0000][PE] mean and std.dev: (533.50, 424.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (394, 2026, 3113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8551)
[0000][PE] mean and std.dev: (2006.80, 1736.76)
[0000][PE] low and high boundaries for proper pairs: (1, 11270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 389.459 CPU sec, 21.846 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512765, 2, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 394.414 CPU sec, 22.066 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512791, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 392.539 CPU sec, 21.954 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512778, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 399, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (622.50, 529.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.54, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1282, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (1341.08, 589.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 390.846 CPU sec, 21.885 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513006, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 395, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (694.82, 848.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.91, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 392.649 CPU sec, 21.944 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512860, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 334, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (749.85, 726.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 2228, 2853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6313)
[0000][PE] mean and std.dev: (1917.10, 898.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 388.171 CPU sec, 21.700 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512773, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 449, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (848.82, 930.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.49, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1501, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5191)
[0000][PE] mean and std.dev: (1529.67, 970.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 399.464 CPU sec, 22.374 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512494, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 365, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2194)
[0000][PE] mean and std.dev: (546.19, 426.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.49, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1457, 1570, 3073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6305)
[0000][PE] mean and std.dev: (1914.09, 990.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 392.358 CPU sec, 21.979 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512590, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 390, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (737.55, 653.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.99, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 398.314 CPU sec, 22.433 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512493, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 797, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3536)
[0000][PE] mean and std.dev: (743.27, 538.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 390.663 CPU sec, 21.853 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512665, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 469, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2623)
[0000][PE] mean and std.dev: (636.23, 576.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.82, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1528, 2858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6244)
[0000][PE] mean and std.dev: (1623.54, 863.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 399.207 CPU sec, 22.354 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512633, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 290, 821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2017)
[0000][PE] mean and std.dev: (487.41, 451.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 393.977 CPU sec, 22.048 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513328, 1, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 396.332 CPU sec, 22.193 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512991, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 577, 871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2017)
[0000][PE] mean and std.dev: (549.54, 453.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1130, 3082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7944)
[0000][PE] mean and std.dev: (1842.15, 1490.28)
[0000][PE] low and high boundaries for proper pairs: (1, 10375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 391.237 CPU sec, 21.906 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512972, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 369, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3421)
[0000][PE] mean and std.dev: (694.53, 683.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1138, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5187)
[0000][PE] mean and std.dev: (1294.80, 779.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 389.114 CPU sec, 21.785 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513011, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 638, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (828.73, 713.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 386.073 CPU sec, 21.628 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512757, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 387, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3630)
[0000][PE] mean and std.dev: (772.77, 560.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.95, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 393.522 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513283, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 834, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (637.88, 442.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 388.576 CPU sec, 21.749 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512712, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 396.989 CPU sec, 22.222 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512973, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 428, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (742.50, 853.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 401.219 CPU sec, 22.495 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512491, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 793, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6668)
[0000][PE] mean and std.dev: (1644.38, 2008.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.52, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 393.496 CPU sec, 22.038 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513036, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 534, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (854.12, 759.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1348, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (1386.80, 722.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 391.354 CPU sec, 21.924 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512684, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 841, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (1040.06, 912.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 397.084 CPU sec, 22.220 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512933, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 344, 772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1844)
[0000][PE] mean and std.dev: (409.85, 286.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 398.614 CPU sec, 22.321 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512777, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (502, 866, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5470)
[0000][PE] mean and std.dev: (1223.50, 1299.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.43, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 392.156 CPU sec, 21.969 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 513148, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 259, 829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2127)
[0000][PE] mean and std.dev: (370.80, 349.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 391.976 CPU sec, 21.942 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512452, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 1180, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6324)
[0000][PE] mean and std.dev: (1301.18, 1559.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.67, 113.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1481, 2415, 3417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7289)
[0000][PE] mean and std.dev: (2479.20, 1566.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 395.031 CPU sec, 22.075 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513128, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 360, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3877)
[0000][PE] mean and std.dev: (755.27, 738.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 387.312 CPU sec, 21.685 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512779, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 498, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (835.18, 749.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1288, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3690)
[0000][PE] mean and std.dev: (1155.33, 845.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 390.685 CPU sec, 21.833 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513167, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 270, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2157)
[0000][PE] mean and std.dev: (358.00, 263.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 391.536 CPU sec, 21.906 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512049, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 1190, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6025)
[0000][PE] mean and std.dev: (1423.38, 1181.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 392.894 CPU sec, 22.008 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512354, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 1392, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4629)
[0000][PE] mean and std.dev: (1311.27, 862.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5976)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 391.852 CPU sec, 21.908 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512623, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 322, 765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1859)
[0000][PE] mean and std.dev: (399.47, 300.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 393.032 CPU sec, 21.995 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512791, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 619, 2770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7550)
[0000][PE] mean and std.dev: (1451.73, 1644.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.61, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1142, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (1230.90, 640.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 392.221 CPU sec, 21.979 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512876, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 384, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (764.47, 740.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 389.254 CPU sec, 21.763 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512777, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 1006, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3116)
[0000][PE] mean and std.dev: (895.40, 612.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 390.268 CPU sec, 21.825 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512724, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 203, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 810)
[0000][PE] mean and std.dev: (209.33, 105.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1489, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3782)
[0000][PE] mean and std.dev: (1358.91, 681.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 394.091 CPU sec, 22.047 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512645, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 515, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3358)
[0000][PE] mean and std.dev: (587.92, 504.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 389.139 CPU sec, 21.795 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512596, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 393.637 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513382, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 433, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3301)
[0000][PE] mean and std.dev: (761.12, 732.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.68, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1230, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4356)
[0000][PE] mean and std.dev: (1555.10, 790.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 390.151 CPU sec, 21.820 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512387, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 477, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2131)
[0000][PE] mean and std.dev: (570.43, 413.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1373, 3774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9196)
[0000][PE] mean and std.dev: (2072.38, 1594.57)
[0000][PE] low and high boundaries for proper pairs: (1, 11907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 396.249 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512451, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 444, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2598)
[0000][PE] mean and std.dev: (599.91, 649.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 391.198 CPU sec, 21.883 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512964, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 432, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (764.18, 625.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1515, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (1118.60, 528.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 400.088 CPU sec, 22.414 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206140
	[0000][ M::kt_pipeline] read 1206140 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512672, 0, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1596, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (1505.20, 759.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 395.035 CPU sec, 22.127 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512767, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 838, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2844)
[0000][PE] mean and std.dev: (785.31, 438.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206140 reads in 390.668 CPU sec, 21.870 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512288, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 391.724 CPU sec, 21.916 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512678, 1, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 394.115 CPU sec, 22.088 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512929, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 1034, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3483)
[0000][PE] mean and std.dev: (888.30, 555.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.02, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 391.193 CPU sec, 21.887 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512667, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 872, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2517)
[0000][PE] mean and std.dev: (839.73, 493.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 391.691 CPU sec, 21.909 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512596, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 687, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3196)
[0000][PE] mean and std.dev: (881.53, 716.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.48, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1826, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5308)
[0000][PE] mean and std.dev: (1409.56, 695.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 394.595 CPU sec, 22.072 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512586, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 660, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3520)
[0000][PE] mean and std.dev: (731.62, 629.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1295, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5296)
[0000][PE] mean and std.dev: (1752.20, 1320.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 392.702 CPU sec, 22.022 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513017, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 958, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4711)
[0000][PE] mean and std.dev: (1311.38, 1160.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 400.052 CPU sec, 22.435 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512890, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 832, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2570)
[0000][PE] mean and std.dev: (709.36, 432.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 983, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (1149.91, 524.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 391.212 CPU sec, 21.883 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512919, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 389, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (686.53, 547.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.59, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 392.404 CPU sec, 21.961 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512941, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 656, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4338)
[0000][PE] mean and std.dev: (885.06, 1167.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 394.925 CPU sec, 22.122 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513107, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 959, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (1082.25, 737.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 395.576 CPU sec, 22.146 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512849, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 618, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3726)
[0000][PE] mean and std.dev: (629.50, 476.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 394.337 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512878, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 405, 705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1735)
[0000][PE] mean and std.dev: (478.62, 414.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1584, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1353.80, 724.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 391.352 CPU sec, 21.897 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512906, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 302, 356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 736)
[0000][PE] mean and std.dev: (226.75, 80.17)
[0000][PE] low and high boundaries for proper pairs: (1, 926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 393.094 CPU sec, 21.961 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512862, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 459, 2847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7833)
[0000][PE] mean and std.dev: (917.92, 975.61)
[0000][PE] low and high boundaries for proper pairs: (1, 10326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 393.275 CPU sec, 22.003 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206120
	[0000][ M::kt_pipeline] read 1206120 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513028, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 317, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3610)
[0000][PE] mean and std.dev: (581.46, 624.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 392.117 CPU sec, 21.939 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512864, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 368, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3444)
[0000][PE] mean and std.dev: (607.45, 591.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206120 reads in 391.144 CPU sec, 21.890 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513331, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 287, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5707)
[0000][PE] mean and std.dev: (835.31, 1012.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 390.243 CPU sec, 21.843 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512955, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 334, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1333)
[0000][PE] mean and std.dev: (339.22, 179.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 391.221 CPU sec, 21.905 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513632, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (597, 678, 4213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11445)
[0000][PE] mean and std.dev: (1873.36, 1802.49)
[0000][PE] low and high boundaries for proper pairs: (1, 15061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 391.680 CPU sec, 21.932 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512857, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 476, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4654)
[0000][PE] mean and std.dev: (859.83, 707.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 392.235 CPU sec, 21.936 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512693, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 856, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (973.53, 634.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.59, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 394.304 CPU sec, 22.089 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512641, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 354, 664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1558)
[0000][PE] mean and std.dev: (445.19, 342.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (490, 1365, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5074)
[0000][PE] mean and std.dev: (1132.17, 737.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 394.613 CPU sec, 22.087 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513157, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 282, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3197)
[0000][PE] mean and std.dev: (534.60, 697.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1656, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5812)
[0000][PE] mean and std.dev: (1839.60, 1226.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 396.759 CPU sec, 22.201 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513084, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 490, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3168)
[0000][PE] mean and std.dev: (681.00, 665.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.72, 113.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 397.287 CPU sec, 22.230 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512808, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 531, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2645)
[0000][PE] mean and std.dev: (662.83, 651.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 1266, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (1214.60, 851.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 392.201 CPU sec, 21.994 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512736, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 929, 2614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7426)
[0000][PE] mean and std.dev: (1360.36, 1361.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 397.133 CPU sec, 22.254 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512428, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 286, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6803)
[0000][PE] mean and std.dev: (930.73, 1043.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1405, 2216, 4615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11035)
[0000][PE] mean and std.dev: (2497.08, 1605.91)
[0000][PE] low and high boundaries for proper pairs: (1, 14245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 393.415 CPU sec, 22.061 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512470, 0, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 343, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1175)
[0000][PE] mean and std.dev: (319.42, 106.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 397.565 CPU sec, 22.239 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206098
	[0000][ M::kt_pipeline] read 1206098 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513220, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 719, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (809.56, 668.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 394.444 CPU sec, 22.073 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512532, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206098 reads in 391.592 CPU sec, 21.908 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512443, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 549, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1894)
[0000][PE] mean and std.dev: (503.38, 219.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 396.422 CPU sec, 22.192 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513446, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 685, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3929)
[0000][PE] mean and std.dev: (858.00, 802.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 395.234 CPU sec, 22.154 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512842, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 421, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2558)
[0000][PE] mean and std.dev: (638.57, 489.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1297, 3507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9163)
[0000][PE] mean and std.dev: (2103.60, 1809.17)
[0000][PE] low and high boundaries for proper pairs: (1, 11991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 395.366 CPU sec, 22.150 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512648, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 991, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3836)
[0000][PE] mean and std.dev: (871.13, 567.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1321, 1389, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4324)
[0000][PE] mean and std.dev: (1739.18, 741.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 392.454 CPU sec, 21.952 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512469, 0, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 320, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2760)
[0000][PE] mean and std.dev: (376.00, 333.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.46, 113.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 392.401 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 513035, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.59, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 396.374 CPU sec, 22.160 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512738, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 351, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4746)
[0000][PE] mean and std.dev: (1087.00, 1173.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.39, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 393.792 CPU sec, 22.065 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513034, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 584, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6139)
[0000][PE] mean and std.dev: (1075.57, 951.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1168, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3179)
[0000][PE] mean and std.dev: (1007.36, 501.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 390.851 CPU sec, 21.879 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512617, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 505, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (1020.82, 1007.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 393.389 CPU sec, 21.979 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 512747, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 532, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2743)
[0000][PE] mean and std.dev: (722.46, 461.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (412, 853, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6586)
[0000][PE] mean and std.dev: (1041.70, 933.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 390.236 CPU sec, 21.871 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512606, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 411, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3639)
[0000][PE] mean and std.dev: (746.15, 662.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.40, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1159, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3028)
[0000][PE] mean and std.dev: (1235.64, 675.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 397.060 CPU sec, 22.259 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512880, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 392, 678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1354)
[0000][PE] mean and std.dev: (469.11, 240.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1322, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (6, 2666)
[0000][PE] mean and std.dev: (1094.33, 493.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 392.158 CPU sec, 21.934 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512902, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 429, 767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1891)
[0000][PE] mean and std.dev: (409.14, 302.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 1200, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4345)
[0000][PE] mean and std.dev: (1430.45, 976.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 392.454 CPU sec, 21.987 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512702, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 428, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2753)
[0000][PE] mean and std.dev: (684.00, 683.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.24, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 390.590 CPU sec, 21.841 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513008, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 415, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (517.11, 416.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 391.236 CPU sec, 21.910 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513303, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 399, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3265)
[0000][PE] mean and std.dev: (528.45, 474.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 393.085 CPU sec, 22.030 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512738, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 738, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (814.09, 742.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 395.275 CPU sec, 22.167 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512620, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 382, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1498)
[0000][PE] mean and std.dev: (466.11, 377.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (403, 1038, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2701)
[0000][PE] mean and std.dev: (684.50, 383.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 392.280 CPU sec, 21.950 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512823, 3, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 393.492 CPU sec, 22.008 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512496, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 441, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2638)
[0000][PE] mean and std.dev: (403.62, 293.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 393.921 CPU sec, 22.038 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513286, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 326, 521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1103)
[0000][PE] mean and std.dev: (368.92, 248.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 388.508 CPU sec, 21.714 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512452, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 447, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (874.92, 834.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 394.221 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512535, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (593, 1052, 2918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7568)
[0000][PE] mean and std.dev: (1559.58, 1566.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 396.358 CPU sec, 22.214 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512303, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 775, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3503)
[0000][PE] mean and std.dev: (827.80, 634.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 394.686 CPU sec, 22.102 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512814, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 384, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3246)
[0000][PE] mean and std.dev: (692.46, 656.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1176, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3966)
[0000][PE] mean and std.dev: (1313.58, 805.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 395.101 CPU sec, 22.116 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512943, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 452, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (866.07, 718.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 392.837 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512895, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1334, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4587)
[0000][PE] mean and std.dev: (972.78, 875.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 1276, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6699)
[0000][PE] mean and std.dev: (1494.70, 950.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 394.012 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512864, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 615, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5604)
[0000][PE] mean and std.dev: (1084.80, 903.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.60, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1032, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4790)
[0000][PE] mean and std.dev: (1492.67, 1090.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 394.780 CPU sec, 22.110 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512423, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 395, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2646)
[0000][PE] mean and std.dev: (601.21, 460.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 391.832 CPU sec, 21.947 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513249, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 508, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6063)
[0000][PE] mean and std.dev: (1289.79, 1366.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 389.329 CPU sec, 21.795 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512912, 1, 0)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 393, 505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1171)
[0000][PE] mean and std.dev: (388.30, 243.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 394.655 CPU sec, 22.112 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512450, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 937, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (921.00, 705.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1775, 2911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6383)
[0000][PE] mean and std.dev: (2121.10, 1487.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 394.640 CPU sec, 22.072 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513283, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1751, 2577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5873)
[0000][PE] mean and std.dev: (1901.75, 1432.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7633)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 393.186 CPU sec, 21.996 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513214, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 544, 2938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8140)
[0000][PE] mean and std.dev: (1727.76, 2111.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 392.459 CPU sec, 21.974 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512923, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 405, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5219)
[0000][PE] mean and std.dev: (871.09, 811.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 392.616 CPU sec, 21.970 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206124
	[0000][ M::kt_pipeline] read 1206124 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512755, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 644, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2142)
[0000][PE] mean and std.dev: (709.36, 583.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 392.828 CPU sec, 22.038 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513107, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 402, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2842)
[0000][PE] mean and std.dev: (601.81, 538.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 892, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2729)
[0000][PE] mean and std.dev: (939.11, 394.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206124 reads in 392.390 CPU sec, 21.974 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513266, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 389, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3198)
[0000][PE] mean and std.dev: (588.38, 518.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.27, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 392.959 CPU sec, 22.001 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512693, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.36, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 392.152 CPU sec, 21.921 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512774, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 679, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3035)
[0000][PE] mean and std.dev: (765.58, 571.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 395.591 CPU sec, 22.119 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512464, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 392, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2061)
[0000][PE] mean and std.dev: (491.62, 327.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.47, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1086, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5559)
[0000][PE] mean and std.dev: (1217.00, 754.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 394.430 CPU sec, 22.100 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512175, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 812, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4957)
[0000][PE] mean and std.dev: (1101.79, 1089.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.67, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 392.634 CPU sec, 22.006 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512833, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 347, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1594)
[0000][PE] mean and std.dev: (443.39, 341.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 1038, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5533)
[0000][PE] mean and std.dev: (1069.44, 749.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 395.760 CPU sec, 22.137 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513035, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 349, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1223)
[0000][PE] mean and std.dev: (434.92, 280.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 391.077 CPU sec, 21.881 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512699, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 431, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (573.42, 416.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 394.244 CPU sec, 22.045 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512798, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 755, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (759.55, 548.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.51, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1346, 2784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6184)
[0000][PE] mean and std.dev: (1508.58, 1246.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 396.468 CPU sec, 22.204 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513181, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (540, 776, 3087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8181)
[0000][PE] mean and std.dev: (1231.00, 1149.87)
[0000][PE] low and high boundaries for proper pairs: (1, 10728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 394.759 CPU sec, 22.087 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513160, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 613, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (855.08, 846.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 393.689 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512865, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 678, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (751.35, 553.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.33, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1984, 4265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10715)
[0000][PE] mean and std.dev: (2521.00, 1647.41)
[0000][PE] low and high boundaries for proper pairs: (1, 13940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 395.259 CPU sec, 22.120 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513144, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 527, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4535)
[0000][PE] mean and std.dev: (930.69, 943.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.31, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 391.465 CPU sec, 21.977 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512736, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 415, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2842)
[0000][PE] mean and std.dev: (730.50, 585.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 393.973 CPU sec, 22.055 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513039, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 870, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2687)
[0000][PE] mean and std.dev: (561.27, 358.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.72, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 391.723 CPU sec, 21.881 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206080
	[0000][ M::kt_pipeline] read 1206080 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512626, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (480, 771, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (1131.87, 913.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.81, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 394.771 CPU sec, 22.112 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513051, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 492, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5018)
[0000][PE] mean and std.dev: (1015.10, 1003.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206080 reads in 393.283 CPU sec, 22.031 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512763, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 581, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4779)
[0000][PE] mean and std.dev: (1105.62, 1039.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.47, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 971, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4934)
[0000][PE] mean and std.dev: (1373.54, 1056.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 394.834 CPU sec, 22.133 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512659, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1450, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5101)
[0000][PE] mean and std.dev: (1722.38, 1266.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6786)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 393.130 CPU sec, 21.984 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512665, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 403, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (664.08, 573.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 2003, 3235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7807)
[0000][PE] mean and std.dev: (2112.62, 1356.74)
[0000][PE] low and high boundaries for proper pairs: (1, 10093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 393.550 CPU sec, 22.020 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512473, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 390, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4715)
[0000][PE] mean and std.dev: (828.38, 904.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.00, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 396.532 CPU sec, 22.204 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512503, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 869, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (1025.75, 839.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1382, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6896)
[0000][PE] mean and std.dev: (1728.92, 1216.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 393.226 CPU sec, 21.995 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513297, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 321, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3145)
[0000][PE] mean and std.dev: (738.60, 554.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 391.777 CPU sec, 21.917 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512582, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 351, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (615.06, 493.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 393.147 CPU sec, 22.020 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512798, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 552, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5636)
[0000][PE] mean and std.dev: (1218.10, 1448.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 394.417 CPU sec, 22.100 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 512995, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 363, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2411)
[0000][PE] mean and std.dev: (577.13, 549.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1374, 2961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6621)
[0000][PE] mean and std.dev: (1977.09, 1418.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 395.448 CPU sec, 22.168 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512521, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 357, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2833)
[0000][PE] mean and std.dev: (599.00, 564.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1350, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (1143.00, 463.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 393.869 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512773, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (510, 897, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (1027.79, 901.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1281, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (1421.75, 587.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 393.838 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512780, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 364, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2240)
[0000][PE] mean and std.dev: (517.09, 404.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.05, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1321, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5465)
[0000][PE] mean and std.dev: (1863.65, 1293.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 396.664 CPU sec, 22.248 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513177, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 796, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (954.67, 765.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.39, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 392.075 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512803, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 394.550 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513032, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 351, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1842)
[0000][PE] mean and std.dev: (501.83, 425.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1107, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2940)
[0000][PE] mean and std.dev: (1139.83, 499.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 391.449 CPU sec, 21.936 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512558, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 394.153 CPU sec, 22.090 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512914, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 340, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1966)
[0000][PE] mean and std.dev: (419.69, 278.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (301, 662, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4078)
[0000][PE] mean and std.dev: (903.36, 637.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 393.617 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512929, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 502, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5135)
[0000][PE] mean and std.dev: (866.23, 816.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 394.067 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513054, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 361, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 833)
[0000][PE] mean and std.dev: (342.36, 62.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 392.231 CPU sec, 21.979 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512736, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 411, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2533)
[0000][PE] mean and std.dev: (674.20, 468.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.45, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 392.569 CPU sec, 21.952 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512760, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 307, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (533.23, 510.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 392.103 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512211, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 847, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3242)
[0000][PE] mean and std.dev: (841.54, 663.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 392.236 CPU sec, 21.951 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512879, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 394.809 CPU sec, 22.096 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512988, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 436, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (713.86, 552.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 394.371 CPU sec, 22.075 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206078
	[0000][ M::kt_pipeline] read 1206078 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513239, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 327, 686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1716)
[0000][PE] mean and std.dev: (533.64, 461.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.50, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 389.774 CPU sec, 21.793 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512925, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 699, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (755.70, 630.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206078 reads in 393.593 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512426, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 674, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3275)
[0000][PE] mean and std.dev: (898.71, 774.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.30, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1197, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (1429.50, 638.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 393.312 CPU sec, 22.024 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512702, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 870, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (829.60, 637.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.47, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 392.876 CPU sec, 22.006 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512615, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 401, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2753)
[0000][PE] mean and std.dev: (686.56, 675.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1397, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (1197.00, 495.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 392.696 CPU sec, 22.006 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512852, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 929, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4797)
[0000][PE] mean and std.dev: (851.36, 703.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1017, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (1380.36, 750.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 393.782 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 513222, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 357, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (562.74, 495.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.52, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1659, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5483)
[0000][PE] mean and std.dev: (1528.90, 802.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 390.289 CPU sec, 21.865 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512904, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 618, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (765.15, 672.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1341, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4972)
[0000][PE] mean and std.dev: (1812.70, 1124.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 392.845 CPU sec, 22.000 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512633, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 646, 2612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7178)
[0000][PE] mean and std.dev: (1135.69, 1020.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (377, 807, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (879.33, 706.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 395.718 CPU sec, 22.147 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512139, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 381, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6046)
[0000][PE] mean and std.dev: (964.33, 1180.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 392.907 CPU sec, 22.006 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512789, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 386, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4927)
[0000][PE] mean and std.dev: (831.17, 887.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.50, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 392.753 CPU sec, 21.961 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512491, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.54, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 391.787 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513148, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 358, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1337)
[0000][PE] mean and std.dev: (415.31, 264.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.47, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 391.931 CPU sec, 21.951 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512744, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 327, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2477)
[0000][PE] mean and std.dev: (544.09, 440.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.41, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 396.597 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513227, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 434, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3198)
[0000][PE] mean and std.dev: (556.60, 421.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 572, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3483)
[0000][PE] mean and std.dev: (732.29, 613.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 392.646 CPU sec, 21.994 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512845, 7, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 391.501 CPU sec, 21.928 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512738, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 377, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4847)
[0000][PE] mean and std.dev: (1067.94, 1244.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 392.964 CPU sec, 21.975 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206078
	[0000][ M::kt_pipeline] read 1206078 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513093, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 442, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4310)
[0000][PE] mean and std.dev: (766.80, 672.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.70, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1636, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (1362.22, 625.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 390.927 CPU sec, 21.870 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206110
	[0000][ M::kt_pipeline] read 1206110 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513367, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 464, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1778)
[0000][PE] mean and std.dev: (464.62, 332.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206078 reads in 393.070 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512458, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 583, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (1019.33, 930.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206110 reads in 396.733 CPU sec, 22.213 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512830, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 304, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4832)
[0000][PE] mean and std.dev: (890.83, 1060.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.35, 113.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1371, 1828, 2794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5640)
[0000][PE] mean and std.dev: (2127.42, 1381.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 392.597 CPU sec, 21.985 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512703, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 379, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1877)
[0000][PE] mean and std.dev: (414.18, 247.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 396.826 CPU sec, 22.238 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512374, 5, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1427, 6312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16802)
[0000][PE] mean and std.dev: (2746.54, 2942.15)
[0000][PE] low and high boundaries for proper pairs: (1, 22047)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 394.533 CPU sec, 22.085 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512888, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 543, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1672)
[0000][PE] mean and std.dev: (434.70, 193.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 2096, 3009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7311)
[0000][PE] mean and std.dev: (2043.77, 1301.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 390.693 CPU sec, 21.877 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512668, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 608, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3031)
[0000][PE] mean and std.dev: (766.80, 488.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 390.663 CPU sec, 21.880 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512703, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.47, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 396.931 CPU sec, 22.237 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512695, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 368, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2198)
[0000][PE] mean and std.dev: (532.73, 495.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 398.111 CPU sec, 22.319 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512947, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 936, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6376)
[0000][PE] mean and std.dev: (1207.10, 1139.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.68, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 390.753 CPU sec, 21.861 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512558, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.54, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1184, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4414)
[0000][PE] mean and std.dev: (1473.80, 946.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5524)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 394.288 CPU sec, 22.111 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513129, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 324, 763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1723)
[0000][PE] mean and std.dev: (340.00, 185.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1282, 3372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8072)
[0000][PE] mean and std.dev: (1915.91, 1319.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 393.727 CPU sec, 22.032 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513026, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 631, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (808.64, 842.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 394.015 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513108, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 400, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2951)
[0000][PE] mean and std.dev: (677.07, 526.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.79, 113.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 390.433 CPU sec, 21.845 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512941, 2, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 390.747 CPU sec, 21.916 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512810, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 451, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6060)
[0000][PE] mean and std.dev: (1071.17, 1326.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1419, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5419)
[0000][PE] mean and std.dev: (1662.60, 856.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 394.421 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512614, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 356, 3209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8929)
[0000][PE] mean and std.dev: (1669.36, 2279.04)
[0000][PE] low and high boundaries for proper pairs: (1, 11789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.37, 113.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1219, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4953)
[0000][PE] mean and std.dev: (1252.21, 802.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 393.811 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513067, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 327, 2722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7724)
[0000][PE] mean and std.dev: (1092.94, 1292.40)
[0000][PE] low and high boundaries for proper pairs: (1, 10225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.35, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 387.781 CPU sec, 21.688 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512626, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 301, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (701.45, 687.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1819, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3648)
[0000][PE] mean and std.dev: (1675.00, 588.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 390.580 CPU sec, 21.840 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513245, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 405, 612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1230)
[0000][PE] mean and std.dev: (366.82, 124.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 395.712 CPU sec, 22.169 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512607, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 466, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (808.94, 829.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 394.726 CPU sec, 22.095 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206176
	[0000][ M::kt_pipeline] read 1206176 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512991, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 651, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5663)
[0000][PE] mean and std.dev: (1062.85, 1093.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 392.010 CPU sec, 21.959 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512621, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 459, 791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1825)
[0000][PE] mean and std.dev: (393.80, 177.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1360, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (1496.80, 844.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206176 reads in 391.087 CPU sec, 21.874 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 513361, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1319, 1485, 2564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5054)
[0000][PE] mean and std.dev: (1512.60, 681.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6299)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 390.478 CPU sec, 21.888 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512526, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 747, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4699)
[0000][PE] mean and std.dev: (1128.74, 1068.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 393.089 CPU sec, 21.995 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512156, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 359, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2933)
[0000][PE] mean and std.dev: (549.75, 421.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.46, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 394.154 CPU sec, 22.040 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512838, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 412, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (747.67, 634.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 391.688 CPU sec, 21.933 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513032, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 880, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2637)
[0000][PE] mean and std.dev: (626.67, 384.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1174, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (1180.64, 290.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 390.717 CPU sec, 21.875 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513035, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 449, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (1049.13, 1180.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1286, 2105, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4808)
[0000][PE] mean and std.dev: (1776.69, 1104.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 386.696 CPU sec, 21.645 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512740, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 396, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3766)
[0000][PE] mean and std.dev: (675.38, 581.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1832, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (1542.80, 955.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 392.274 CPU sec, 21.958 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512789, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 670, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (901.91, 718.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (548, 1362, 3769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10211)
[0000][PE] mean and std.dev: (2349.90, 2350.80)
[0000][PE] low and high boundaries for proper pairs: (1, 13432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 393.199 CPU sec, 21.992 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512773, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 393, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (654.58, 638.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 394.791 CPU sec, 22.112 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512901, 7, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1463, 1831, 2489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4541)
[0000][PE] mean and std.dev: (1960.83, 894.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5567)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 392.765 CPU sec, 21.980 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512574, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.85, 113.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1578, 2749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6451)
[0000][PE] mean and std.dev: (1505.00, 882.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8302)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 391.355 CPU sec, 21.879 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513133, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 1124, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5493)
[0000][PE] mean and std.dev: (1141.33, 730.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.68, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 389.058 CPU sec, 21.781 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512335, 10, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1444, 3223, 3785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8467)
[0000][PE] mean and std.dev: (2988.10, 2223.31)
[0000][PE] low and high boundaries for proper pairs: (1, 11881)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 393.770 CPU sec, 22.092 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206068
	[0000][ M::kt_pipeline] read 1206068 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513016, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 1065, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3390)
[0000][PE] mean and std.dev: (980.08, 735.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.97, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 395.737 CPU sec, 22.166 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206074
	[0000][ M::kt_pipeline] read 1206074 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512880, 4, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1231, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (1297.50, 739.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206068 reads in 399.165 CPU sec, 22.365 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512982, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 484, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4844)
[0000][PE] mean and std.dev: (967.20, 896.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1230, 1440, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (1266.60, 479.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206074 reads in 390.056 CPU sec, 21.824 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512973, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 435, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4780)
[0000][PE] mean and std.dev: (970.69, 912.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1266, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (1248.09, 463.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 392.201 CPU sec, 21.973 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512948, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 2410, 2791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7659)
[0000][PE] mean and std.dev: (2298.00, 1872.85)
[0000][PE] low and high boundaries for proper pairs: (1, 10093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1607, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4313)
[0000][PE] mean and std.dev: (1545.14, 854.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 390.821 CPU sec, 21.865 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512941, 1, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.94, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 395.886 CPU sec, 22.154 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513039, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 344, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2673)
[0000][PE] mean and std.dev: (389.00, 296.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 392.827 CPU sec, 21.967 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512842, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 347, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2230)
[0000][PE] mean and std.dev: (527.33, 430.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1908, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5479)
[0000][PE] mean and std.dev: (1829.83, 949.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 392.505 CPU sec, 21.940 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512727, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 361, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2002)
[0000][PE] mean and std.dev: (505.57, 333.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1229, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4291)
[0000][PE] mean and std.dev: (1626.36, 1021.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 395.771 CPU sec, 22.160 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512939, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (485, 810, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2885)
[0000][PE] mean and std.dev: (979.31, 657.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 391.962 CPU sec, 21.928 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512984, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 573, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4546)
[0000][PE] mean and std.dev: (1087.47, 1095.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 389.984 CPU sec, 21.850 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512251, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 326, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 656)
[0000][PE] mean and std.dev: (300.45, 84.52)
[0000][PE] low and high boundaries for proper pairs: (1, 797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 394.789 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512885, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 420, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3180)
[0000][PE] mean and std.dev: (741.70, 681.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.95, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1492, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4360)
[0000][PE] mean and std.dev: (1337.67, 671.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 389.467 CPU sec, 21.807 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513104, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.24, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (654, 906, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (1148.77, 724.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 390.047 CPU sec, 21.824 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512731, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 494, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2819)
[0000][PE] mean and std.dev: (572.27, 383.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.37, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 394.792 CPU sec, 22.092 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512424, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 492, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5140)
[0000][PE] mean and std.dev: (950.92, 1189.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 393.219 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512782, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 316, 472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 974)
[0000][PE] mean and std.dev: (321.22, 218.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 397.314 CPU sec, 22.280 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512628, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 491, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4291)
[0000][PE] mean and std.dev: (616.20, 426.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (688, 1001, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (1075.53, 559.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 393.097 CPU sec, 22.055 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513086, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 998, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (1125.64, 865.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 389.035 CPU sec, 21.760 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512886, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 354, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3141)
[0000][PE] mean and std.dev: (594.62, 567.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.25, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1329, 2628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5752)
[0000][PE] mean and std.dev: (1609.73, 896.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 391.156 CPU sec, 21.945 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513056, 5, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (465, 913, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4866)
[0000][PE] mean and std.dev: (1303.07, 951.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6333)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 389.087 CPU sec, 21.764 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512932, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 304, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4286)
[0000][PE] mean and std.dev: (666.73, 714.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 391.702 CPU sec, 21.948 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512549, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 506, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2356)
[0000][PE] mean and std.dev: (685.79, 551.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 803, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (1052.57, 537.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 395.289 CPU sec, 22.146 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513184, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 479, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2499)
[0000][PE] mean and std.dev: (496.17, 337.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 393.551 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206076
	[0000][ M::kt_pipeline] read 1206076 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512659, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 292, 443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 925)
[0000][PE] mean and std.dev: (296.19, 164.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 394.153 CPU sec, 22.098 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512788, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 335, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (521.71, 631.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206076 reads in 396.758 CPU sec, 22.236 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512532, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 650, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (753.25, 743.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 392.306 CPU sec, 21.988 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512991, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 457, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2948)
[0000][PE] mean and std.dev: (658.62, 615.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.23, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 392.371 CPU sec, 21.947 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512312, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 516, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3181)
[0000][PE] mean and std.dev: (605.25, 465.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 394.924 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512752, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 594, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (846.00, 802.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 392.854 CPU sec, 21.963 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512681, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1232, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4292)
[0000][PE] mean and std.dev: (937.85, 658.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 394.251 CPU sec, 22.021 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512776, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 687, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2700)
[0000][PE] mean and std.dev: (623.14, 432.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (512, 881, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2588)
[0000][PE] mean and std.dev: (842.00, 459.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 392.339 CPU sec, 21.956 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512493, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 842, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (791.58, 608.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 391.144 CPU sec, 21.910 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512551, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 673, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (625.78, 500.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 394.160 CPU sec, 22.092 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512517, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 357, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2445)
[0000][PE] mean and std.dev: (518.50, 454.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.23, 113.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 393.160 CPU sec, 21.980 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512557, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 367, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4941)
[0000][PE] mean and std.dev: (1069.85, 1546.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 394.319 CPU sec, 22.103 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513174, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 728, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7207)
[0000][PE] mean and std.dev: (1320.77, 1460.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 391.339 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512776, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 341, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 795)
[0000][PE] mean and std.dev: (293.87, 89.03)
[0000][PE] low and high boundaries for proper pairs: (1, 967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 391.416 CPU sec, 21.920 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513321, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 408, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1369)
[0000][PE] mean and std.dev: (477.50, 300.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 390.439 CPU sec, 21.846 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512936, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 420, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (675.19, 693.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 392.176 CPU sec, 21.966 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513312, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 334, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2122)
[0000][PE] mean and std.dev: (356.33, 265.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 390.414 CPU sec, 21.897 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512558, 3, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 543, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5066)
[0000][PE] mean and std.dev: (864.25, 890.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 392.109 CPU sec, 21.928 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512413, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 365, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3212)
[0000][PE] mean and std.dev: (791.64, 865.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1736, 2919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6585)
[0000][PE] mean and std.dev: (2228.60, 1651.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 395.717 CPU sec, 22.149 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512990, 1, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 392.551 CPU sec, 21.977 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512927, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 674, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (812.31, 519.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 392.664 CPU sec, 21.990 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512451, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 329, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5326)
[0000][PE] mean and std.dev: (787.86, 749.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 398.191 CPU sec, 22.275 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206102
	[0000][ M::kt_pipeline] read 1206102 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512993, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 446, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (654.67, 736.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 2283, 3075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7669)
[0000][PE] mean and std.dev: (2254.70, 1351.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 389.336 CPU sec, 21.781 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513072, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 475, 925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2373)
[0000][PE] mean and std.dev: (537.79, 371.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206102 reads in 390.727 CPU sec, 21.890 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512900, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 441, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2050)
[0000][PE] mean and std.dev: (457.81, 406.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.51, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 392.157 CPU sec, 21.968 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512570, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 440, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (831.50, 995.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 397.648 CPU sec, 22.244 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512592, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 415, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 879)
[0000][PE] mean and std.dev: (375.78, 213.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 393.602 CPU sec, 22.060 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512893, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 1309, 3080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8496)
[0000][PE] mean and std.dev: (1846.27, 1762.22)
[0000][PE] low and high boundaries for proper pairs: (1, 11204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 393.810 CPU sec, 22.050 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512544, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 394.281 CPU sec, 22.107 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512396, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 565, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (1071.80, 1190.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 392.512 CPU sec, 21.985 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206084
	[0000][ M::kt_pipeline] read 1206084 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512712, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 398.179 CPU sec, 22.318 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513157, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.80, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206084 reads in 389.325 CPU sec, 21.804 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513328, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 815, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7383)
[0000][PE] mean and std.dev: (1365.38, 1415.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 394.000 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512675, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 1192, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5192)
[0000][PE] mean and std.dev: (1101.14, 925.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1449, 4875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12307)
[0000][PE] mean and std.dev: (2273.36, 1743.46)
[0000][PE] low and high boundaries for proper pairs: (1, 16023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 393.403 CPU sec, 22.050 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513174, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.66, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 996, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (64, 2184)
[0000][PE] mean and std.dev: (1017.18, 424.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2717)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 390.184 CPU sec, 21.854 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512798, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 728, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6247)
[0000][PE] mean and std.dev: (1227.27, 1067.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 390.825 CPU sec, 21.890 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513135, 0, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 820, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (682.25, 387.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 389.392 CPU sec, 21.776 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512742, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 314, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2348)
[0000][PE] mean and std.dev: (528.47, 466.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1386, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3859)
[0000][PE] mean and std.dev: (1253.58, 609.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 391.823 CPU sec, 21.906 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512949, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 620, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (659.08, 430.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.37, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1648, 1948, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (126, 3931)
[0000][PE] mean and std.dev: (2195.56, 927.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 393.947 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512825, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 612, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2743)
[0000][PE] mean and std.dev: (742.43, 554.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 391.271 CPU sec, 21.889 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513124, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1061, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (1068.50, 792.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.70, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 390.280 CPU sec, 21.838 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512305, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 380, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3135)
[0000][PE] mean and std.dev: (729.41, 779.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.30, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1283, 1427, 3160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6914)
[0000][PE] mean and std.dev: (1795.50, 985.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 393.617 CPU sec, 22.040 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512543, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 996, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (882.46, 670.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1425, 1939, 2981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6093)
[0000][PE] mean and std.dev: (2059.42, 1183.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 391.251 CPU sec, 21.944 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512409, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 482, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2265)
[0000][PE] mean and std.dev: (449.29, 420.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1646, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3911)
[0000][PE] mean and std.dev: (1427.22, 639.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 396.641 CPU sec, 22.176 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512836, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 942, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (1001.00, 871.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 391.282 CPU sec, 21.944 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512828, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 427, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2450)
[0000][PE] mean and std.dev: (638.83, 471.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.40, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1536, 2684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5884)
[0000][PE] mean and std.dev: (2082.50, 1354.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 390.100 CPU sec, 21.871 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512891, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (629, 880, 2843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7271)
[0000][PE] mean and std.dev: (1579.82, 1416.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1242, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3018)
[0000][PE] mean and std.dev: (1018.82, 518.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 395.303 CPU sec, 22.128 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513030, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 388.780 CPU sec, 21.780 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512547, 5, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.69, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 392.797 CPU sec, 22.016 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512690, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 383, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5190)
[0000][PE] mean and std.dev: (830.30, 1041.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 391.233 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513039, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 1099, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (1100.71, 904.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1269, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4735)
[0000][PE] mean and std.dev: (1535.46, 923.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 390.354 CPU sec, 21.828 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512676, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 355, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5481)
[0000][PE] mean and std.dev: (703.07, 737.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.47, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 391.367 CPU sec, 21.892 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206162
	[0000][ M::kt_pipeline] read 1206162 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512735, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 639, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (813.71, 558.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 391.500 CPU sec, 21.905 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512804, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 602, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2428)
[0000][PE] mean and std.dev: (562.92, 393.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.31, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206162 reads in 393.302 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512908, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 512, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2619)
[0000][PE] mean and std.dev: (642.64, 403.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 393.082 CPU sec, 22.014 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512556, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 307, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (394.83, 317.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 389.522 CPU sec, 21.828 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512445, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.43, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1251, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2694)
[0000][PE] mean and std.dev: (1223.10, 587.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3573)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 395.769 CPU sec, 22.204 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512916, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 934, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5977)
[0000][PE] mean and std.dev: (1046.33, 747.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 391.655 CPU sec, 21.929 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513022, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 675, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2767)
[0000][PE] mean and std.dev: (742.14, 451.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 391.383 CPU sec, 21.933 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512758, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 644, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2568)
[0000][PE] mean and std.dev: (653.67, 519.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1528, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (1425.55, 812.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 393.779 CPU sec, 22.048 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512679, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 394, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1326)
[0000][PE] mean and std.dev: (299.75, 173.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.43, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 388.986 CPU sec, 21.797 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512696, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 485, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (890.67, 837.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1707, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (1608.83, 692.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 389.507 CPU sec, 21.789 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513304, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 391.245 CPU sec, 21.899 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512698, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 442, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 902)
[0000][PE] mean and std.dev: (357.10, 142.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 905, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2284)
[0000][PE] mean and std.dev: (904.93, 484.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 393.256 CPU sec, 22.008 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512701, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 423, 685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1411)
[0000][PE] mean and std.dev: (452.85, 282.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.33, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1253, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (1159.20, 605.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 391.113 CPU sec, 21.907 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206080
	[0000][ M::kt_pipeline] read 1206080 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513187, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 709, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3550)
[0000][PE] mean and std.dev: (648.67, 562.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 391.688 CPU sec, 21.933 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513179, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 436, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4769)
[0000][PE] mean and std.dev: (634.29, 689.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (588, 2017, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (1573.60, 828.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206080 reads in 392.540 CPU sec, 21.971 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512723, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.29, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 393.590 CPU sec, 22.064 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512464, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 414, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2758)
[0000][PE] mean and std.dev: (750.07, 729.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1469, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3042)
[0000][PE] mean and std.dev: (1463.20, 452.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 388.063 CPU sec, 21.702 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512919, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 446, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4993)
[0000][PE] mean and std.dev: (1135.76, 1143.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1163, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3078)
[0000][PE] mean and std.dev: (1061.79, 491.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 394.847 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206076
	[0000][ M::kt_pipeline] read 1206076 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513301, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 283, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 721)
[0000][PE] mean and std.dev: (258.89, 108.58)
[0000][PE] low and high boundaries for proper pairs: (1, 896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.52, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 388.302 CPU sec, 21.743 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512390, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 485, 693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1571)
[0000][PE] mean and std.dev: (514.67, 328.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (653, 1364, 2803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7103)
[0000][PE] mean and std.dev: (1738.53, 1414.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206076 reads in 390.059 CPU sec, 21.811 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512790, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 552, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3492)
[0000][PE] mean and std.dev: (809.12, 750.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.98, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 396.432 CPU sec, 22.180 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512941, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 381, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2109)
[0000][PE] mean and std.dev: (571.89, 394.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.94, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 388.961 CPU sec, 21.776 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512322, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 378, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1139)
[0000][PE] mean and std.dev: (390.00, 270.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 388.207 CPU sec, 21.714 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206078
	[0000][ M::kt_pipeline] read 1206078 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512679, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 278, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6117)
[0000][PE] mean and std.dev: (774.89, 978.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 389.158 CPU sec, 21.759 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513292, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 670, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4512)
[0000][PE] mean and std.dev: (1018.53, 885.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.40, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1351, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (1470.29, 378.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206078 reads in 386.442 CPU sec, 21.625 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512528, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 281, 444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 958)
[0000][PE] mean and std.dev: (278.11, 135.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.30, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 391.606 CPU sec, 21.899 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512760, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (471, 1015, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5382)
[0000][PE] mean and std.dev: (1343.23, 1101.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7019)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 386.242 CPU sec, 21.648 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512866, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 484, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1918)
[0000][PE] mean and std.dev: (561.00, 426.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1426, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5328)
[0000][PE] mean and std.dev: (1812.45, 1285.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 389.342 CPU sec, 21.832 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512858, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 1171, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4587)
[0000][PE] mean and std.dev: (901.00, 664.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 389.863 CPU sec, 21.831 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206070
	[0000][ M::kt_pipeline] read 1206070 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512567, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 1329, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5238)
[0000][PE] mean and std.dev: (1297.81, 1104.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1150, 3902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10090)
[0000][PE] mean and std.dev: (2015.92, 1879.64)
[0000][PE] low and high boundaries for proper pairs: (1, 13184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 387.843 CPU sec, 21.713 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512723, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 327, 692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1716)
[0000][PE] mean and std.dev: (346.75, 210.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1365, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5712)
[0000][PE] mean and std.dev: (1393.00, 844.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206070 reads in 388.951 CPU sec, 21.746 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513750, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 263, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2422)
[0000][PE] mean and std.dev: (633.00, 680.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 1698, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (1539.91, 1113.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 384.504 CPU sec, 21.503 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513190, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 378, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1991)
[0000][PE] mean and std.dev: (348.18, 227.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.41, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 396.736 CPU sec, 22.258 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512731, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 516, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3018)
[0000][PE] mean and std.dev: (838.82, 665.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1166, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (980.00, 401.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 390.806 CPU sec, 21.911 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512652, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 336, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3405)
[0000][PE] mean and std.dev: (633.83, 879.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 388.490 CPU sec, 21.744 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512776, 6, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 389.186 CPU sec, 21.773 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512331, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (457, 1076, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6301)
[0000][PE] mean and std.dev: (1351.27, 1457.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 389.232 CPU sec, 21.781 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206082
	[0000][ M::kt_pipeline] read 1206082 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512786, 6, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 388.238 CPU sec, 21.714 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512576, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 316, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1736)
[0000][PE] mean and std.dev: (324.18, 154.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.26, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1315, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2829)
[0000][PE] mean and std.dev: (1178.56, 436.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206082 reads in 389.709 CPU sec, 21.835 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512664, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 431, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (695.91, 585.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 389.112 CPU sec, 21.783 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512627, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 1138, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6071)
[0000][PE] mean and std.dev: (1311.00, 1079.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.49, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 391.628 CPU sec, 21.895 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512927, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 484, 799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1981)
[0000][PE] mean and std.dev: (448.94, 343.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 1212, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5147)
[0000][PE] mean and std.dev: (1269.17, 1108.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 384.943 CPU sec, 21.553 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512735, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 374, 517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1043)
[0000][PE] mean and std.dev: (353.00, 196.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1521, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3466)
[0000][PE] mean and std.dev: (1469.58, 568.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 387.040 CPU sec, 21.638 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512638, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1461, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4549)
[0000][PE] mean and std.dev: (1508.75, 817.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5683)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 389.125 CPU sec, 21.775 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513005, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (583, 1269, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4606)
[0000][PE] mean and std.dev: (1313.31, 969.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5947)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 384.873 CPU sec, 21.555 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512818, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 396, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4636)
[0000][PE] mean and std.dev: (614.92, 650.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 401.930 CPU sec, 22.539 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512860, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 602, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (827.31, 681.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.53, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 386.111 CPU sec, 21.620 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512920, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 320, 709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1561)
[0000][PE] mean and std.dev: (422.92, 283.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.64, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 384.891 CPU sec, 21.542 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512987, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 458, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (715.75, 727.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1282, 2748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6472)
[0000][PE] mean and std.dev: (1764.70, 1266.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 386.321 CPU sec, 21.596 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512894, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (694, 1539, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4597)
[0000][PE] mean and std.dev: (1346.08, 739.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.35, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 389.362 CPU sec, 21.793 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512564, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 273, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1034)
[0000][PE] mean and std.dev: (271.07, 236.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 386.436 CPU sec, 21.630 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 512967, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 447, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3434)
[0000][PE] mean and std.dev: (726.61, 654.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 394.948 CPU sec, 22.201 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513054, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 428, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2528)
[0000][PE] mean and std.dev: (635.31, 514.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (465, 1316, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7245)
[0000][PE] mean and std.dev: (1728.69, 1397.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 382.073 CPU sec, 21.355 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512995, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 587, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3168)
[0000][PE] mean and std.dev: (925.11, 788.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1402, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2820)
[0000][PE] mean and std.dev: (1346.00, 420.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 398.464 CPU sec, 22.383 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512703, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 988, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (989.50, 783.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 388.095 CPU sec, 21.725 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512653, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 794, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (776.73, 667.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 396.919 CPU sec, 22.218 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513276, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1064, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5015)
[0000][PE] mean and std.dev: (1308.94, 1102.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 1932, 2767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5991)
[0000][PE] mean and std.dev: (1952.67, 899.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 387.385 CPU sec, 21.720 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513065, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 406, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4416)
[0000][PE] mean and std.dev: (905.07, 747.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.37, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 390.993 CPU sec, 21.915 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512758, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 403, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2089)
[0000][PE] mean and std.dev: (575.07, 483.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.21, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 390.389 CPU sec, 22.097 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512359, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 519, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3513)
[0000][PE] mean and std.dev: (866.65, 841.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 394.188 CPU sec, 22.086 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512593, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 516, 952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2154)
[0000][PE] mean and std.dev: (716.90, 579.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.37, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 393.844 CPU sec, 22.044 real sec
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512535, 0, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 502, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2577)
[0000][PE] mean and std.dev: (659.08, 527.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 393.287 CPU sec, 22.080 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512744, 0, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 573, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2478)
[0000][PE] mean and std.dev: (682.00, 559.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 391.141 CPU sec, 21.898 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206048
	[0000][ M::kt_pipeline] read 1206048 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512706, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 563, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5838)
[0000][PE] mean and std.dev: (1114.73, 1064.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 395.289 CPU sec, 22.126 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512394, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 326, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (603.20, 622.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1411, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (1367.55, 761.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206048 reads in 391.407 CPU sec, 21.935 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513013, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 580, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (1131.87, 1106.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 390.517 CPU sec, 21.871 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512552, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 604, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4171)
[0000][PE] mean and std.dev: (1092.50, 1156.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1456, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3246)
[0000][PE] mean and std.dev: (1300.33, 560.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 390.712 CPU sec, 21.861 real sec
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513160, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 407, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (628.27, 597.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 389.159 CPU sec, 21.788 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513208, 0, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 1023, 3176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8624)
[0000][PE] mean and std.dev: (1986.53, 2233.83)
[0000][PE] low and high boundaries for proper pairs: (1, 11348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 391.893 CPU sec, 21.950 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513044, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 897, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4424)
[0000][PE] mean and std.dev: (849.23, 713.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 390.873 CPU sec, 21.912 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512646, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 426, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2782)
[0000][PE] mean and std.dev: (743.90, 685.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 392.163 CPU sec, 21.976 real sec
[0000] Calling mem_process_seqs.., task: 1066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512593, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 409, 831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1959)
[0000][PE] mean and std.dev: (526.69, 350.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (533, 1271, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4760)
[0000][PE] mean and std.dev: (1264.56, 866.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 391.752 CPU sec, 21.929 real sec
[0000] Calling mem_process_seqs.., task: 1067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512250, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 399, 763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1697)
[0000][PE] mean and std.dev: (527.00, 376.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.22, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 389.712 CPU sec, 21.789 real sec
[0000] Calling mem_process_seqs.., task: 1068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512514, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 658, 2501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6805)
[0000][PE] mean and std.dev: (672.22, 695.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 952, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (393, 1468)
[0000][PE] mean and std.dev: (936.88, 70.80)
[0000][PE] low and high boundaries for proper pairs: (178, 1683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 388.618 CPU sec, 21.769 real sec
[0000] Calling mem_process_seqs.., task: 1069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512625, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 716, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (918.08, 714.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.46, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1153, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (1185.73, 546.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 392.955 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 1070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512905, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 706, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3536)
[0000][PE] mean and std.dev: (803.05, 535.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 391.276 CPU sec, 21.923 real sec
[0000] Calling mem_process_seqs.., task: 1071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512602, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 501, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (968.29, 844.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 392.968 CPU sec, 22.032 real sec
[0000] Calling mem_process_seqs.., task: 1072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513045, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 345, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (664.06, 762.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 390.446 CPU sec, 21.891 real sec
[0000] Calling mem_process_seqs.., task: 1073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512698, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 767, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (960.36, 809.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 391.232 CPU sec, 21.951 real sec
[0000] Calling mem_process_seqs.., task: 1074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512833, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 732, 3687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10417)
[0000][PE] mean and std.dev: (1522.23, 1459.17)
[0000][PE] low and high boundaries for proper pairs: (1, 13782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.37, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 392.106 CPU sec, 22.020 real sec
[0000] Calling mem_process_seqs.., task: 1075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513063, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 271, 453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 983)
[0000][PE] mean and std.dev: (237.27, 109.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 394.872 CPU sec, 22.098 real sec
[0000] Calling mem_process_seqs.., task: 1076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513497, 6, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.66, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1110, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2310)
[0000][PE] mean and std.dev: (1127.33, 447.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2918)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 390.321 CPU sec, 21.878 real sec
[0000] Calling mem_process_seqs.., task: 1077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512573, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (513, 1217, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (1054.60, 682.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.63, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 388.931 CPU sec, 21.850 real sec
[0000] Calling mem_process_seqs.., task: 1078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512832, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 567, 826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1808)
[0000][PE] mean and std.dev: (562.33, 358.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.44, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 394.297 CPU sec, 22.537 real sec
[0000] Calling mem_process_seqs.., task: 1079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 512591, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 451, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4974)
[0000][PE] mean and std.dev: (909.88, 917.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1277, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5205)
[0000][PE] mean and std.dev: (1558.90, 1190.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 396.463 CPU sec, 23.022 real sec
[0000] Calling mem_process_seqs.., task: 1080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512373, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 1047, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2974)
[0000][PE] mean and std.dev: (882.00, 670.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (443, 871, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (894.80, 549.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 392.678 CPU sec, 21.978 real sec
[0000] Calling mem_process_seqs.., task: 1081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512604, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 940, 3540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10038)
[0000][PE] mean and std.dev: (2082.15, 2430.84)
[0000][PE] low and high boundaries for proper pairs: (1, 13287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 390.845 CPU sec, 21.864 real sec
[0000] Calling mem_process_seqs.., task: 1082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513228, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 391.242 CPU sec, 21.897 real sec
[0000] Calling mem_process_seqs.., task: 1083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512494, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 469, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (984.47, 1157.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 394.160 CPU sec, 22.062 real sec
[0000] Calling mem_process_seqs.., task: 1084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512483, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 389, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (829.14, 881.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 392.616 CPU sec, 21.986 real sec
[0000] Calling mem_process_seqs.., task: 1085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513072, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (476, 1512, 2475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6473)
[0000][PE] mean and std.dev: (1751.08, 1717.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 389.095 CPU sec, 21.782 real sec
[0000] Calling mem_process_seqs.., task: 1086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512331, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 545, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (705.90, 627.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1220, 1499, 2817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6011)
[0000][PE] mean and std.dev: (1764.36, 848.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 390.212 CPU sec, 21.870 real sec
[0000] Calling mem_process_seqs.., task: 1087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513070, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 1143, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5487)
[0000][PE] mean and std.dev: (1362.40, 1542.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 391.474 CPU sec, 21.917 real sec
[0000] Calling mem_process_seqs.., task: 1088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513024, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 593, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (814.24, 705.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.64, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1299, 1774, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (79, 3129)
[0000][PE] mean and std.dev: (1582.80, 378.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 392.573 CPU sec, 22.001 real sec
[0000] Calling mem_process_seqs.., task: 1089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206088
	[0000][ M::kt_pipeline] read 1206088 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512675, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1387, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3180)
[0000][PE] mean and std.dev: (1149.89, 526.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3945)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 390.567 CPU sec, 21.861 real sec
[0000] Calling mem_process_seqs.., task: 1090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512819, 7, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 2628, 5790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15672)
[0000][PE] mean and std.dev: (3232.00, 2215.40)
[0000][PE] low and high boundaries for proper pairs: (1, 20613)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206088 reads in 393.067 CPU sec, 22.012 real sec
[0000] Calling mem_process_seqs.., task: 1091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512891, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 560, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (750.61, 546.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.48, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 393.955 CPU sec, 22.078 real sec
[0000] Calling mem_process_seqs.., task: 1092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512611, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 929, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (863.77, 682.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.94, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 389.319 CPU sec, 21.820 real sec
[0000] Calling mem_process_seqs.., task: 1093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512895, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (722, 1568, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4832)
[0000][PE] mean and std.dev: (1534.40, 1212.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.18, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (233, 1397, 3565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10229)
[0000][PE] mean and std.dev: (2256.00, 2570.91)
[0000][PE] low and high boundaries for proper pairs: (1, 13561)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1459, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (239, 2659)
[0000][PE] mean and std.dev: (1431.00, 536.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 391.027 CPU sec, 21.902 real sec
[0000] Calling mem_process_seqs.., task: 1094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512837, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 656, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5722)
[0000][PE] mean and std.dev: (981.00, 910.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1448, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5333)
[0000][PE] mean and std.dev: (1519.09, 783.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 390.517 CPU sec, 21.862 real sec
[0000] Calling mem_process_seqs.., task: 1095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512609, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 493, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3000)
[0000][PE] mean and std.dev: (826.40, 710.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 392.282 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 1096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512959, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 890, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (879.33, 574.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.21, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 1709, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (1410.67, 761.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 387.209 CPU sec, 21.664 real sec
[0000] Calling mem_process_seqs.., task: 1097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512756, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 372, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4017)
[0000][PE] mean and std.dev: (779.69, 718.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.64, 113.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 389.788 CPU sec, 21.816 real sec
[0000] Calling mem_process_seqs.., task: 1098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512935, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 568, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2925)
[0000][PE] mean and std.dev: (685.06, 558.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 390.988 CPU sec, 21.875 real sec
[0000] Calling mem_process_seqs.., task: 1099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513094, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 687, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2767)
[0000][PE] mean and std.dev: (595.22, 384.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 394.746 CPU sec, 22.100 real sec
[0000] Calling mem_process_seqs.., task: 1100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512967, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 412, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2111)
[0000][PE] mean and std.dev: (556.50, 467.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 388.603 CPU sec, 21.771 real sec
[0000] Calling mem_process_seqs.., task: 1101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512870, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 843, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5835)
[0000][PE] mean and std.dev: (945.29, 901.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 389.219 CPU sec, 21.834 real sec
[0000] Calling mem_process_seqs.., task: 1102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512431, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 385, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (684.44, 732.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 388.984 CPU sec, 21.810 real sec
[0000] Calling mem_process_seqs.., task: 1103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512988, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 1133, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7197)
[0000][PE] mean and std.dev: (1278.67, 1157.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.11, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 389.260 CPU sec, 21.786 real sec
[0000] Calling mem_process_seqs.., task: 1104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206136
	[0000][ M::kt_pipeline] read 1206136 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513237, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 291, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2893)
[0000][PE] mean and std.dev: (409.22, 387.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.45, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 950, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (1160.50, 444.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 385.142 CPU sec, 21.554 real sec
[0000] Calling mem_process_seqs.., task: 1105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512777, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1128, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6064)
[0000][PE] mean and std.dev: (1636.67, 1389.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7767)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206136 reads in 387.676 CPU sec, 21.730 real sec
[0000] Calling mem_process_seqs.., task: 1106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513098, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.54, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1934, 3933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9573)
[0000][PE] mean and std.dev: (2268.09, 1494.12)
[0000][PE] low and high boundaries for proper pairs: (1, 12393)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 386.559 CPU sec, 21.620 real sec
[0000] Calling mem_process_seqs.., task: 1107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512611, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 349, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2053)
[0000][PE] mean and std.dev: (497.67, 341.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1480, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (199, 2649)
[0000][PE] mean and std.dev: (1414.50, 446.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 388.000 CPU sec, 21.727 real sec
[0000] Calling mem_process_seqs.., task: 1108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512605, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (610, 1637, 5595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15565)
[0000][PE] mean and std.dev: (2493.85, 2422.56)
[0000][PE] low and high boundaries for proper pairs: (1, 20550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.66, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 390.856 CPU sec, 21.907 real sec
[0000] Calling mem_process_seqs.., task: 1109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 513007, 7, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 390.685 CPU sec, 21.878 real sec
[0000] Calling mem_process_seqs.., task: 1110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512866, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 443, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2030)
[0000][PE] mean and std.dev: (501.60, 392.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.37, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 389.064 CPU sec, 21.831 real sec
[0000] Calling mem_process_seqs.., task: 1111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513147, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 439, 883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2129)
[0000][PE] mean and std.dev: (567.75, 369.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.65, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 388.015 CPU sec, 21.745 real sec
[0000] Calling mem_process_seqs.., task: 1112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206098
	[0000][ M::kt_pipeline] read 1206098 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513453, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.19, 113.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 389.076 CPU sec, 21.809 real sec
[0000] Calling mem_process_seqs.., task: 1113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512867, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 405, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2466)
[0000][PE] mean and std.dev: (673.33, 466.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206098 reads in 385.337 CPU sec, 21.574 real sec
[0000] Calling mem_process_seqs.., task: 1114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513016, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 619, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2926)
[0000][PE] mean and std.dev: (611.79, 388.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 2133, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5930)
[0000][PE] mean and std.dev: (1636.78, 857.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 385.268 CPU sec, 21.612 real sec
[0000] Calling mem_process_seqs.., task: 1115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512836, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (496, 1317, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5770)
[0000][PE] mean and std.dev: (1344.06, 1071.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1339, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3623)
[0000][PE] mean and std.dev: (1262.47, 671.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 385.904 CPU sec, 21.631 real sec
[0000] Calling mem_process_seqs.., task: 1116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513234, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 333, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (582.13, 459.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1456, 2719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5901)
[0000][PE] mean and std.dev: (1527.42, 1002.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 381.605 CPU sec, 21.365 real sec
[0000] Calling mem_process_seqs.., task: 1117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512966, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 373, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3933)
[0000][PE] mean and std.dev: (783.38, 698.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 385.215 CPU sec, 21.575 real sec
[0000] Calling mem_process_seqs.., task: 1118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512904, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 330, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2108)
[0000][PE] mean and std.dev: (375.50, 272.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 388.454 CPU sec, 21.748 real sec
[0000] Calling mem_process_seqs.., task: 1119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512903, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 1092, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (1048.62, 763.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1562, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5843)
[0000][PE] mean and std.dev: (1850.00, 1276.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 388.038 CPU sec, 21.733 real sec
[0000] Calling mem_process_seqs.., task: 1120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513273, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 588, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4912)
[0000][PE] mean and std.dev: (1219.36, 1248.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 395.383 CPU sec, 22.195 real sec
[0000] Calling mem_process_seqs.., task: 1121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512586, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (449, 1245, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5003)
[0000][PE] mean and std.dev: (1316.00, 1138.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 393.038 CPU sec, 22.011 real sec
[0000] Calling mem_process_seqs.., task: 1122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512452, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 757, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5357)
[0000][PE] mean and std.dev: (1283.53, 1431.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 390.566 CPU sec, 21.860 real sec
[0000] Calling mem_process_seqs.., task: 1123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512577, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 463, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4925)
[0000][PE] mean and std.dev: (812.47, 668.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.68, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1840, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4867)
[0000][PE] mean and std.dev: (1458.80, 684.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 390.831 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 1124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512540, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.63, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1276, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2600)
[0000][PE] mean and std.dev: (1092.50, 521.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3218)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 390.343 CPU sec, 21.872 real sec
[0000] Calling mem_process_seqs.., task: 1125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513238, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 649, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2377)
[0000][PE] mean and std.dev: (494.88, 280.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1187, 4468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11498)
[0000][PE] mean and std.dev: (2649.54, 2564.12)
[0000][PE] low and high boundaries for proper pairs: (1, 15013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 388.622 CPU sec, 21.761 real sec
[0000] Calling mem_process_seqs.., task: 1126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512855, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 507, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5450)
[0000][PE] mean and std.dev: (1115.91, 1187.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1557, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4825)
[0000][PE] mean and std.dev: (1436.90, 583.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 389.915 CPU sec, 21.884 real sec
[0000] Calling mem_process_seqs.., task: 1127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513150, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 686, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (836.89, 860.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.52, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 394.275 CPU sec, 22.122 real sec
[0000] Calling mem_process_seqs.., task: 1128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512994, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 1037, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4038)
[0000][PE] mean and std.dev: (974.56, 619.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 388.173 CPU sec, 21.741 real sec
[0000] Calling mem_process_seqs.., task: 1129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512402, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 1036, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5779)
[0000][PE] mean and std.dev: (1353.92, 1271.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.81, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1383, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (1234.82, 533.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 388.163 CPU sec, 21.751 real sec
[0000] Calling mem_process_seqs.., task: 1130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512402, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 743, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (840.23, 494.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 391.008 CPU sec, 21.896 real sec
[0000] Calling mem_process_seqs.., task: 1131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512908, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 449, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (699.88, 697.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 388.036 CPU sec, 21.739 real sec
[0000] Calling mem_process_seqs.., task: 1132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512944, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 460, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6375)
[0000][PE] mean and std.dev: (975.11, 1037.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1152, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2142)
[0000][PE] mean and std.dev: (948.00, 376.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 389.187 CPU sec, 21.811 real sec
[0000] Calling mem_process_seqs.., task: 1133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512817, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 393, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2154)
[0000][PE] mean and std.dev: (496.23, 383.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 390.687 CPU sec, 21.860 real sec
[0000] Calling mem_process_seqs.., task: 1134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512912, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 800, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2172)
[0000][PE] mean and std.dev: (540.18, 344.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 389.724 CPU sec, 21.843 real sec
[0000] Calling mem_process_seqs.., task: 1135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512862, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 523, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2081)
[0000][PE] mean and std.dev: (435.50, 230.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 390.312 CPU sec, 21.841 real sec
[0000] Calling mem_process_seqs.., task: 1136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512879, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 388.340 CPU sec, 21.726 real sec
[0000] Calling mem_process_seqs.., task: 1137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512770, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 438, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3894)
[0000][PE] mean and std.dev: (857.36, 937.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.45, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 388.551 CPU sec, 21.827 real sec
[0000] Calling mem_process_seqs.., task: 1138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512669, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 323, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2409)
[0000][PE] mean and std.dev: (407.56, 298.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.59, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (439, 1057, 2777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7453)
[0000][PE] mean and std.dev: (1902.40, 2003.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 392.625 CPU sec, 21.968 real sec
[0000] Calling mem_process_seqs.., task: 1139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512859, 6, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 389.797 CPU sec, 21.852 real sec
[0000] Calling mem_process_seqs.., task: 1140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512829, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 379, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (787.41, 894.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 388.555 CPU sec, 21.758 real sec
[0000] Calling mem_process_seqs.., task: 1141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513163, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 1189, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (1110.21, 788.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1062, 3000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7192)
[0000][PE] mean and std.dev: (1677.73, 1367.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 391.681 CPU sec, 21.921 real sec
[0000] Calling mem_process_seqs.., task: 1142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512801, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 875, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4166)
[0000][PE] mean and std.dev: (946.06, 842.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.46, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 392.856 CPU sec, 22.013 real sec
[0000] Calling mem_process_seqs.., task: 1143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513179, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 662, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2889)
[0000][PE] mean and std.dev: (701.00, 468.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 388.383 CPU sec, 21.787 real sec
[0000] Calling mem_process_seqs.., task: 1144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512840, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 323, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3791)
[0000][PE] mean and std.dev: (722.67, 805.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 388.999 CPU sec, 21.765 real sec
[0000] Calling mem_process_seqs.., task: 1145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512470, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 430, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (685.13, 671.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1458, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5547)
[0000][PE] mean and std.dev: (1669.08, 980.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 388.737 CPU sec, 21.776 real sec
[0000] Calling mem_process_seqs.., task: 1146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512989, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 990, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (961.18, 673.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.91, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 389.684 CPU sec, 21.843 real sec
[0000] Calling mem_process_seqs.., task: 1147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512630, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 741, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2310)
[0000][PE] mean and std.dev: (806.64, 486.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1786, 3567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8287)
[0000][PE] mean and std.dev: (1930.00, 1436.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 387.160 CPU sec, 21.727 real sec
[0000] Calling mem_process_seqs.., task: 1148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512391, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 389.268 CPU sec, 21.793 real sec
[0000] Calling mem_process_seqs.., task: 1149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512917, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 1002, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4209)
[0000][PE] mean and std.dev: (1094.56, 793.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 389.426 CPU sec, 21.816 real sec
[0000] Calling mem_process_seqs.., task: 1150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513056, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 352, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1632)
[0000][PE] mean and std.dev: (349.71, 309.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1694, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4250)
[0000][PE] mean and std.dev: (1647.58, 1145.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 393.645 CPU sec, 22.074 real sec
[0000] Calling mem_process_seqs.., task: 1151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512682, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 389.315 CPU sec, 21.785 real sec
[0000] Calling mem_process_seqs.., task: 1152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512765, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 393.756 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 1153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206068
	[0000][ M::kt_pipeline] read 1206068 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513119, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 412, 702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1786)
[0000][PE] mean and std.dev: (545.90, 456.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1363, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4384)
[0000][PE] mean and std.dev: (1306.58, 733.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 389.185 CPU sec, 21.766 real sec
[0000] Calling mem_process_seqs.., task: 1154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512971, 0, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206068 reads in 389.886 CPU sec, 21.829 real sec
[0000] Calling mem_process_seqs.., task: 1155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513345, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 485, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (1048.45, 961.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1398, 2327, 2771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5517)
[0000][PE] mean and std.dev: (2157.50, 1230.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 389.517 CPU sec, 21.793 real sec
[0000] Calling mem_process_seqs.., task: 1156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512762, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 376, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1975)
[0000][PE] mean and std.dev: (436.19, 297.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1466, 1905, 5349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13115)
[0000][PE] mean and std.dev: (2899.75, 2235.05)
[0000][PE] low and high boundaries for proper pairs: (1, 16998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 389.983 CPU sec, 21.842 real sec
[0000] Calling mem_process_seqs.., task: 1157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512832, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 340, 562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1108)
[0000][PE] mean and std.dev: (321.09, 141.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 391.239 CPU sec, 21.939 real sec
[0000] Calling mem_process_seqs.., task: 1158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512895, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 561, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2874)
[0000][PE] mean and std.dev: (591.93, 458.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.35, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 390.213 CPU sec, 21.861 real sec
[0000] Calling mem_process_seqs.., task: 1159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512350, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1405, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6165)
[0000][PE] mean and std.dev: (1477.55, 902.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7890)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 391.514 CPU sec, 21.919 real sec
[0000] Calling mem_process_seqs.., task: 1160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512769, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 858, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2610)
[0000][PE] mean and std.dev: (683.71, 502.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 389.478 CPU sec, 21.854 real sec
[0000] Calling mem_process_seqs.., task: 1161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512847, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 507, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2048)
[0000][PE] mean and std.dev: (494.58, 287.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.69, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1273, 1549, 3362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7540)
[0000][PE] mean and std.dev: (1912.82, 1175.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 389.205 CPU sec, 21.813 real sec
[0000] Calling mem_process_seqs.., task: 1162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512380, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 308, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2114)
[0000][PE] mean and std.dev: (449.77, 363.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1530, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4613)
[0000][PE] mean and std.dev: (1623.73, 706.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 389.410 CPU sec, 21.812 real sec
[0000] Calling mem_process_seqs.., task: 1163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512836, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 964, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3433)
[0000][PE] mean and std.dev: (923.83, 709.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 390.421 CPU sec, 21.858 real sec
[0000] Calling mem_process_seqs.., task: 1164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512488, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 512, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (719.30, 646.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 403.102 CPU sec, 22.573 real sec
[0000] Calling mem_process_seqs.., task: 1165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513172, 5, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 391.282 CPU sec, 21.917 real sec
[0000] Calling mem_process_seqs.., task: 1166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206080
	[0000][ M::kt_pipeline] read 1206080 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512851, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 342, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (784.59, 733.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.71, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 393.617 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 1167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512742, 4, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.91, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (664, 1658, 3231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8365)
[0000][PE] mean and std.dev: (1836.10, 1309.97)
[0000][PE] low and high boundaries for proper pairs: (1, 10932)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206080 reads in 388.879 CPU sec, 21.770 real sec
[0000] Calling mem_process_seqs.., task: 1168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512343, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 594, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (848.39, 759.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.53, 113.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 394.085 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 1169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206096
	[0000][ M::kt_pipeline] read 1206096 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512660, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 660, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3071)
[0000][PE] mean and std.dev: (810.85, 574.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.67, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 399.826 CPU sec, 22.436 real sec
[0000] Calling mem_process_seqs.., task: 1170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206150
	[0000][ M::kt_pipeline] read 1206150 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513352, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (535, 1288, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3664)
[0000][PE] mean and std.dev: (1174.00, 779.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206096 reads in 391.193 CPU sec, 21.906 real sec
[0000] Calling mem_process_seqs.., task: 1171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512503, 4, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1378, 1736, 2509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4771)
[0000][PE] mean and std.dev: (1657.00, 471.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5902)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206150 reads in 392.126 CPU sec, 21.952 real sec
[0000] Calling mem_process_seqs.., task: 1172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512790, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 1082, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3344)
[0000][PE] mean and std.dev: (911.18, 689.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.52, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 390.628 CPU sec, 21.867 real sec
[0000] Calling mem_process_seqs.., task: 1173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512672, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 328, 873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2083)
[0000][PE] mean and std.dev: (521.92, 373.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.32, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 390.087 CPU sec, 21.843 real sec
[0000] Calling mem_process_seqs.., task: 1174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512830, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 393, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3084)
[0000][PE] mean and std.dev: (523.80, 470.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 391.660 CPU sec, 21.932 real sec
[0000] Calling mem_process_seqs.., task: 1175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206098
	[0000][ M::kt_pipeline] read 1206098 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512788, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 338, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4816)
[0000][PE] mean and std.dev: (765.87, 724.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 393.499 CPU sec, 22.006 real sec
[0000] Calling mem_process_seqs.., task: 1176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513029, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 1090, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (1033.69, 625.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1778, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (1384.83, 738.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206098 reads in 395.378 CPU sec, 22.179 real sec
[0000] Calling mem_process_seqs.., task: 1177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512549, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 652, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5881)
[0000][PE] mean and std.dev: (1295.53, 1363.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1390, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2812)
[0000][PE] mean and std.dev: (1197.40, 383.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 392.583 CPU sec, 21.987 real sec
[0000] Calling mem_process_seqs.., task: 1178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512347, 5, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 395.184 CPU sec, 22.120 real sec
[0000] Calling mem_process_seqs.., task: 1179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513223, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 825, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (693.40, 529.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.35, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 387.407 CPU sec, 21.696 real sec
[0000] Calling mem_process_seqs.., task: 1180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512420, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 442, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1559)
[0000][PE] mean and std.dev: (493.57, 367.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 394.499 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 1181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512964, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 462, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2245)
[0000][PE] mean and std.dev: (533.07, 428.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.35, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1235, 1555, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3188)
[0000][PE] mean and std.dev: (1506.67, 530.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 392.282 CPU sec, 21.967 real sec
[0000] Calling mem_process_seqs.., task: 1182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512807, 0, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 422, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4053)
[0000][PE] mean and std.dev: (638.75, 478.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 394.131 CPU sec, 22.095 real sec
[0000] Calling mem_process_seqs.., task: 1183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512667, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 462, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (706.27, 534.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 392.270 CPU sec, 21.985 real sec
[0000] Calling mem_process_seqs.., task: 1184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512937, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 732, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5011)
[0000][PE] mean and std.dev: (1159.69, 996.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 394.605 CPU sec, 22.153 real sec
[0000] Calling mem_process_seqs.., task: 1185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512459, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 680, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (791.36, 515.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.40, 113.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (448, 1019, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4132)
[0000][PE] mean and std.dev: (1076.00, 711.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 399.241 CPU sec, 22.350 real sec
[0000] Calling mem_process_seqs.., task: 1186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513053, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1268, 1609, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (1612.70, 576.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4300)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 396.201 CPU sec, 22.210 real sec
[0000] Calling mem_process_seqs.., task: 1187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512690, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 543, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2754)
[0000][PE] mean and std.dev: (607.00, 494.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (688, 1698, 2546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6262)
[0000][PE] mean and std.dev: (1607.08, 1076.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 390.533 CPU sec, 21.885 real sec
[0000] Calling mem_process_seqs.., task: 1188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512579, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 409, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2987)
[0000][PE] mean and std.dev: (554.33, 374.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1073, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5996)
[0000][PE] mean and std.dev: (1623.18, 1136.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 397.124 CPU sec, 22.218 real sec
[0000] Calling mem_process_seqs.., task: 1189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512987, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1551, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3708)
[0000][PE] mean and std.dev: (1519.00, 596.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4597)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 396.724 CPU sec, 22.256 real sec
[0000] Calling mem_process_seqs.., task: 1190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512910, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (559, 797, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2446)
[0000][PE] mean and std.dev: (799.00, 582.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 393.123 CPU sec, 21.994 real sec
[0000] Calling mem_process_seqs.., task: 1191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512471, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 626, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (721.79, 600.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.33, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 392.829 CPU sec, 22.024 real sec
[0000] Calling mem_process_seqs.., task: 1192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512701, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 466, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (849.93, 784.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 390.918 CPU sec, 21.930 real sec
[0000] Calling mem_process_seqs.., task: 1193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206066
	[0000][ M::kt_pipeline] read 1206066 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513085, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 386.959 CPU sec, 21.674 real sec
[0000] Calling mem_process_seqs.., task: 1194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512540, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 360, 540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1164)
[0000][PE] mean and std.dev: (353.15, 184.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206066 reads in 398.198 CPU sec, 22.333 real sec
[0000] Calling mem_process_seqs.., task: 1195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512684, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 806, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8114)
[0000][PE] mean and std.dev: (1690.85, 2106.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 393.806 CPU sec, 22.035 real sec
[0000] Calling mem_process_seqs.., task: 1196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512476, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 761, 2439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6831)
[0000][PE] mean and std.dev: (1108.42, 1052.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1430, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (1395.85, 517.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 393.293 CPU sec, 22.026 real sec
[0000] Calling mem_process_seqs.., task: 1197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512890, 0, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 556, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (783.12, 810.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 394.188 CPU sec, 22.055 real sec
[0000] Calling mem_process_seqs.., task: 1198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512742, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 797, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (968.06, 937.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.39, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 393.256 CPU sec, 22.009 real sec
[0000] Calling mem_process_seqs.., task: 1199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 512714, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 357, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (697.65, 796.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 394.391 CPU sec, 22.092 real sec
[0000] Calling mem_process_seqs.., task: 1200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512858, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 346, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1976)
[0000][PE] mean and std.dev: (431.46, 388.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.94, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1179, 2914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7032)
[0000][PE] mean and std.dev: (1851.67, 1475.44)
[0000][PE] low and high boundaries for proper pairs: (1, 9091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 394.332 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 1201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512830, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 506, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (739.70, 762.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (474, 1722, 2917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7803)
[0000][PE] mean and std.dev: (1670.90, 1136.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 394.558 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 513040, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 788, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4192)
[0000][PE] mean and std.dev: (970.38, 720.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 391.995 CPU sec, 21.969 real sec
[0000] Calling mem_process_seqs.., task: 1203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512620, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 355, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1040)
[0000][PE] mean and std.dev: (307.38, 139.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 391.924 CPU sec, 21.955 real sec
[0000] Calling mem_process_seqs.., task: 1204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512719, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (582, 1032, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (989.19, 618.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (632, 1091, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5588)
[0000][PE] mean and std.dev: (1297.29, 978.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 391.231 CPU sec, 21.910 real sec
[0000] Calling mem_process_seqs.., task: 1205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512931, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 1203, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (923.70, 502.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (551, 1081, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4424)
[0000][PE] mean and std.dev: (1272.70, 827.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 391.679 CPU sec, 21.928 real sec
[0000] Calling mem_process_seqs.., task: 1206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 511865, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 386, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (828.92, 966.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.45, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1593, 2047, 2972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5730)
[0000][PE] mean and std.dev: (1967.78, 1020.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 395.956 CPU sec, 22.172 real sec
[0000] Calling mem_process_seqs.., task: 1207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513158, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 542, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3352)
[0000][PE] mean and std.dev: (938.42, 1085.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1209, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4253)
[0000][PE] mean and std.dev: (1387.86, 652.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 391.250 CPU sec, 21.891 real sec
[0000] Calling mem_process_seqs.., task: 1208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206130
	[0000][ M::kt_pipeline] read 1206130 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512844, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 720, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (803.87, 630.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 389.528 CPU sec, 21.799 real sec
[0000] Calling mem_process_seqs.., task: 1209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512954, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (505, 679, 2789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7357)
[0000][PE] mean and std.dev: (1348.58, 1350.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206130 reads in 388.931 CPU sec, 21.756 real sec
[0000] Calling mem_process_seqs.., task: 1210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512551, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 540, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2447)
[0000][PE] mean and std.dev: (679.15, 527.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 392.300 CPU sec, 21.993 real sec
[0000] Calling mem_process_seqs.., task: 1211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206100
	[0000][ M::kt_pipeline] read 1206100 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512985, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 1681, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6024)
[0000][PE] mean and std.dev: (1122.33, 847.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 389.298 CPU sec, 21.787 real sec
[0000] Calling mem_process_seqs.., task: 1212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512814, 7, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.79, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206100 reads in 389.000 CPU sec, 21.771 real sec
[0000] Calling mem_process_seqs.., task: 1213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512752, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 420, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7191)
[0000][PE] mean and std.dev: (1361.10, 1736.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.59, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 391.934 CPU sec, 21.966 real sec
[0000] Calling mem_process_seqs.., task: 1214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512634, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 388.635 CPU sec, 21.767 real sec
[0000] Calling mem_process_seqs.., task: 1215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512868, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 351, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (861.72, 1035.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 392.832 CPU sec, 21.995 real sec
[0000] Calling mem_process_seqs.., task: 1216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 513018, 5, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 389.396 CPU sec, 21.844 real sec
[0000] Calling mem_process_seqs.., task: 1217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513035, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 546, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4639)
[0000][PE] mean and std.dev: (1023.80, 1056.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 2970, 3807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9069)
[0000][PE] mean and std.dev: (2726.20, 1983.67)
[0000][PE] low and high boundaries for proper pairs: (1, 11700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 390.220 CPU sec, 21.905 real sec
[0000] Calling mem_process_seqs.., task: 1218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512947, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 359, 809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1945)
[0000][PE] mean and std.dev: (601.27, 508.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.66, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (485, 1378, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4472)
[0000][PE] mean and std.dev: (1451.00, 1162.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 390.884 CPU sec, 21.905 real sec
[0000] Calling mem_process_seqs.., task: 1219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512526, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 685, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2573)
[0000][PE] mean and std.dev: (853.57, 593.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 1360, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (78, 2978)
[0000][PE] mean and std.dev: (1410.27, 677.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 395.045 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 1220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512463, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 1099, 3349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9601)
[0000][PE] mean and std.dev: (1765.80, 2066.75)
[0000][PE] low and high boundaries for proper pairs: (1, 12727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1084, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (1381.43, 772.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 391.707 CPU sec, 21.935 real sec
[0000] Calling mem_process_seqs.., task: 1221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513127, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 340, 885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2117)
[0000][PE] mean and std.dev: (509.38, 495.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 390.747 CPU sec, 21.857 real sec
[0000] Calling mem_process_seqs.., task: 1222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512557, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 421, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2779)
[0000][PE] mean and std.dev: (589.00, 569.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1291, 1409, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4468)
[0000][PE] mean and std.dev: (1333.00, 515.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 390.011 CPU sec, 21.859 real sec
[0000] Calling mem_process_seqs.., task: 1223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512340, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 549, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3191)
[0000][PE] mean and std.dev: (954.50, 774.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 393.456 CPU sec, 22.093 real sec
[0000] Calling mem_process_seqs.., task: 1224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512576, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 362, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (814.71, 822.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 394.178 CPU sec, 22.062 real sec
[0000] Calling mem_process_seqs.., task: 1225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206120
	[0000][ M::kt_pipeline] read 1206120 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512538, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 728, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5478)
[0000][PE] mean and std.dev: (1275.75, 1429.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 393.472 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 1226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512751, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 928, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4706)
[0000][PE] mean and std.dev: (1096.93, 945.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206120 reads in 394.174 CPU sec, 22.062 real sec
[0000] Calling mem_process_seqs.., task: 1227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513184, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 527, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2559)
[0000][PE] mean and std.dev: (631.08, 561.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 391.886 CPU sec, 21.934 real sec
[0000] Calling mem_process_seqs.., task: 1228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 513190, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 541, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2162)
[0000][PE] mean and std.dev: (557.40, 436.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 387.109 CPU sec, 21.747 real sec
[0000] Calling mem_process_seqs.., task: 1229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512954, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 392, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2681)
[0000][PE] mean and std.dev: (603.36, 692.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 392.337 CPU sec, 21.982 real sec
[0000] Calling mem_process_seqs.., task: 1230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512502, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 467, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (1069.86, 1218.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.09, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1289, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5523)
[0000][PE] mean and std.dev: (1471.87, 898.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7062)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 394.306 CPU sec, 22.052 real sec
[0000] Calling mem_process_seqs.., task: 1231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512644, 1, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.97, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 396.204 CPU sec, 22.213 real sec
[0000] Calling mem_process_seqs.., task: 1232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513243, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 236, 873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2263)
[0000][PE] mean and std.dev: (465.31, 408.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 393.089 CPU sec, 21.991 real sec
[0000] Calling mem_process_seqs.., task: 1233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206080
	[0000][ M::kt_pipeline] read 1206080 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512872, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 1024, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6476)
[0000][PE] mean and std.dev: (1267.36, 1028.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 389.274 CPU sec, 21.818 real sec
[0000] Calling mem_process_seqs.., task: 1234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513370, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 290, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (585.31, 648.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.50, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206080 reads in 392.504 CPU sec, 21.977 real sec
[0000] Calling mem_process_seqs.., task: 1235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512911, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 363, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2447)
[0000][PE] mean and std.dev: (623.85, 651.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.54, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 387.956 CPU sec, 21.707 real sec
[0000] Calling mem_process_seqs.., task: 1236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512256, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 605, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (680.50, 439.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 393.458 CPU sec, 22.010 real sec
[0000] Calling mem_process_seqs.., task: 1237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512869, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 620, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3216)
[0000][PE] mean and std.dev: (772.75, 488.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.99, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1272, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3372)
[0000][PE] mean and std.dev: (1091.00, 444.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 396.537 CPU sec, 22.202 real sec
[0000] Calling mem_process_seqs.., task: 1238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512573, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 630, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (791.31, 690.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 395.503 CPU sec, 22.169 real sec
[0000] Calling mem_process_seqs.., task: 1239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512584, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 955, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4904)
[0000][PE] mean and std.dev: (932.54, 783.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 389.775 CPU sec, 21.857 real sec
[0000] Calling mem_process_seqs.., task: 1240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512603, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 1397, 5530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15956)
[0000][PE] mean and std.dev: (2130.31, 2518.46)
[0000][PE] low and high boundaries for proper pairs: (1, 21169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 395.943 CPU sec, 22.159 real sec
[0000] Calling mem_process_seqs.., task: 1241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206130
	[0000][ M::kt_pipeline] read 1206130 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512878, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 345, 734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1710)
[0000][PE] mean and std.dev: (367.08, 245.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 393.647 CPU sec, 22.056 real sec
[0000] Calling mem_process_seqs.., task: 1242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512606, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 840, 2927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8099)
[0000][PE] mean and std.dev: (1439.20, 1479.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.97, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1784, 2794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6308)
[0000][PE] mean and std.dev: (2049.43, 1322.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206130 reads in 391.918 CPU sec, 21.937 real sec
[0000] Calling mem_process_seqs.., task: 1243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512863, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.69, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 2052, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4380)
[0000][PE] mean and std.dev: (1696.44, 917.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5455)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 394.932 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 1244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 513322, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.69, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 387.628 CPU sec, 21.690 real sec
[0000] Calling mem_process_seqs.., task: 1245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 513336, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 338, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1024)
[0000][PE] mean and std.dev: (287.53, 110.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 391.576 CPU sec, 21.919 real sec
[0000] Calling mem_process_seqs.., task: 1246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512958, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 531, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3049)
[0000][PE] mean and std.dev: (599.33, 420.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1072, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4830)
[0000][PE] mean and std.dev: (1402.50, 1164.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 391.292 CPU sec, 21.928 real sec
[0000] Calling mem_process_seqs.., task: 1247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512791, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 334, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5294)
[0000][PE] mean and std.dev: (961.00, 1360.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (483, 1002, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2727)
[0000][PE] mean and std.dev: (879.22, 413.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3475)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 389.682 CPU sec, 21.851 real sec
[0000] Calling mem_process_seqs.., task: 1248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512542, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 413, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1146)
[0000][PE] mean and std.dev: (373.25, 173.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 393.103 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 1249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512800, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 442, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3387)
[0000][PE] mean and std.dev: (696.68, 525.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1962, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5479)
[0000][PE] mean and std.dev: (1663.90, 908.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 389.406 CPU sec, 21.836 real sec
[0000] Calling mem_process_seqs.., task: 1250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513540, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 722, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6454)
[0000][PE] mean and std.dev: (1116.54, 1019.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 388.322 CPU sec, 21.755 real sec
[0000] Calling mem_process_seqs.., task: 1251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512905, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 444, 787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1851)
[0000][PE] mean and std.dev: (603.44, 452.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (661, 1227, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (1277.40, 809.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 391.350 CPU sec, 21.923 real sec
[0000] Calling mem_process_seqs.., task: 1252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512772, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 392.489 CPU sec, 21.969 real sec
[0000] Calling mem_process_seqs.., task: 1253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512808, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 636, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (918.18, 790.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 394.173 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 1254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512552, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 271, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 785)
[0000][PE] mean and std.dev: (256.42, 128.52)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 395.496 CPU sec, 22.140 real sec
[0000] Calling mem_process_seqs.., task: 1255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513087, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (111, 321, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3000)
[0000][PE] mean and std.dev: (558.00, 789.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 393.040 CPU sec, 22.005 real sec
[0000] Calling mem_process_seqs.., task: 1256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513234, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 440, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2067)
[0000][PE] mean and std.dev: (642.25, 460.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 743, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5387)
[0000][PE] mean and std.dev: (1047.08, 820.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 389.684 CPU sec, 21.793 real sec
[0000] Calling mem_process_seqs.., task: 1257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512952, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1270, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5192)
[0000][PE] mean and std.dev: (1731.42, 903.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6567)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 393.705 CPU sec, 22.043 real sec
[0000] Calling mem_process_seqs.., task: 1258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512933, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 1547, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6808)
[0000][PE] mean and std.dev: (1802.09, 1882.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.26, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (566, 1168, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3602)
[0000][PE] mean and std.dev: (1252.78, 902.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 389.674 CPU sec, 21.817 real sec
[0000] Calling mem_process_seqs.., task: 1259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512667, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 395.506 CPU sec, 22.122 real sec
[0000] Calling mem_process_seqs.., task: 1260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513082, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 777, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4414)
[0000][PE] mean and std.dev: (988.80, 1040.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1390, 1741, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4678)
[0000][PE] mean and std.dev: (1894.33, 990.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 394.947 CPU sec, 22.111 real sec
[0000] Calling mem_process_seqs.., task: 1261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513181, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 461, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4827)
[0000][PE] mean and std.dev: (936.47, 866.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 390.696 CPU sec, 21.872 real sec
[0000] Calling mem_process_seqs.., task: 1262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512477, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 381, 813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1963)
[0000][PE] mean and std.dev: (407.64, 236.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 394.364 CPU sec, 22.094 real sec
[0000] Calling mem_process_seqs.., task: 1263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512836, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 519, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4181)
[0000][PE] mean and std.dev: (759.19, 674.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 391.954 CPU sec, 21.981 real sec
[0000] Calling mem_process_seqs.., task: 1264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512631, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 409, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (710.88, 687.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 396.026 CPU sec, 22.184 real sec
[0000] Calling mem_process_seqs.., task: 1265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 512642, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 519, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (635.76, 551.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.67, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 390.159 CPU sec, 21.843 real sec
[0000] Calling mem_process_seqs.., task: 1266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512634, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 276, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2462)
[0000][PE] mean and std.dev: (604.29, 698.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.37, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 391.931 CPU sec, 21.958 real sec
[0000] Calling mem_process_seqs.., task: 1267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 513003, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 481, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2853)
[0000][PE] mean and std.dev: (509.16, 438.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 392.752 CPU sec, 22.028 real sec
[0000] Calling mem_process_seqs.., task: 1268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512787, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.16, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 393.118 CPU sec, 21.983 real sec
[0000] Calling mem_process_seqs.., task: 1269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512897, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 343, 777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1955)
[0000][PE] mean and std.dev: (433.54, 349.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.46, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 392.134 CPU sec, 21.970 real sec
[0000] Calling mem_process_seqs.., task: 1270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512885, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 393.563 CPU sec, 22.020 real sec
[0000] Calling mem_process_seqs.., task: 1271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512957, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 495, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4925)
[0000][PE] mean and std.dev: (1187.07, 1296.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1331, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2498)
[0000][PE] mean and std.dev: (1184.20, 527.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 392.930 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 1272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513298, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 524, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (706.00, 628.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.66, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 2862, 3038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7056)
[0000][PE] mean and std.dev: (2167.60, 1043.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 393.177 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 1273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512938, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (654, 1171, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3282)
[0000][PE] mean and std.dev: (1087.61, 560.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 394.010 CPU sec, 22.076 real sec
[0000] Calling mem_process_seqs.., task: 1274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513028, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 224, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2584)
[0000][PE] mean and std.dev: (493.40, 406.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 390.839 CPU sec, 21.869 real sec
[0000] Calling mem_process_seqs.., task: 1275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512598, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 341, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2735)
[0000][PE] mean and std.dev: (415.67, 324.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 395.967 CPU sec, 22.158 real sec
[0000] Calling mem_process_seqs.., task: 1276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512378, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 413, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (616.60, 429.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.57, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 393.851 CPU sec, 22.048 real sec
[0000] Calling mem_process_seqs.., task: 1277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513411, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 338, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3701)
[0000][PE] mean and std.dev: (696.29, 781.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 391.730 CPU sec, 21.948 real sec
[0000] Calling mem_process_seqs.., task: 1278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512873, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 393.598 CPU sec, 22.089 real sec
[0000] Calling mem_process_seqs.., task: 1279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512886, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 392.461 CPU sec, 21.981 real sec
[0000] Calling mem_process_seqs.., task: 1280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513220, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 349, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (790.58, 843.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 399.257 CPU sec, 22.341 real sec
[0000] Calling mem_process_seqs.., task: 1281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206086
	[0000][ M::kt_pipeline] read 1206086 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512664, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 1022, 2722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7266)
[0000][PE] mean and std.dev: (1596.45, 1409.96)
[0000][PE] low and high boundaries for proper pairs: (1, 9538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 1230, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5607)
[0000][PE] mean and std.dev: (1463.91, 809.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 391.832 CPU sec, 21.954 real sec
[0000] Calling mem_process_seqs.., task: 1282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512888, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 531, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (727.40, 729.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206086 reads in 395.823 CPU sec, 22.197 real sec
[0000] Calling mem_process_seqs.., task: 1283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512633, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 306, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1642)
[0000][PE] mean and std.dev: (373.77, 232.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.98, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 391.705 CPU sec, 21.918 real sec
[0000] Calling mem_process_seqs.., task: 1284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512521, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 333, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4639)
[0000][PE] mean and std.dev: (773.25, 862.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1913, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5299)
[0000][PE] mean and std.dev: (1646.60, 787.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 394.935 CPU sec, 22.108 real sec
[0000] Calling mem_process_seqs.., task: 1285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512803, 2, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 389.785 CPU sec, 21.818 real sec
[0000] Calling mem_process_seqs.., task: 1286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513296, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 1101, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (1008.54, 660.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1441, 3385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7741)
[0000][PE] mean and std.dev: (2068.27, 1642.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 389.176 CPU sec, 21.800 real sec
[0000] Calling mem_process_seqs.., task: 1287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512494, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 367, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 818)
[0000][PE] mean and std.dev: (300.23, 95.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1151, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2716)
[0000][PE] mean and std.dev: (1085.08, 566.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 394.977 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 1288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513024, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 419, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2489)
[0000][PE] mean and std.dev: (489.08, 445.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 393.136 CPU sec, 22.028 real sec
[0000] Calling mem_process_seqs.., task: 1289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512859, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.63, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 392.178 CPU sec, 21.991 real sec
[0000] Calling mem_process_seqs.., task: 1290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512659, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 398, 987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2285)
[0000][PE] mean and std.dev: (585.58, 408.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1197, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (1240.45, 857.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 395.511 CPU sec, 22.127 real sec
[0000] Calling mem_process_seqs.., task: 1291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512490, 7, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1061, 1589, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (1487.57, 811.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 392.243 CPU sec, 21.954 real sec
[0000] Calling mem_process_seqs.., task: 1292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512649, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 967, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5170)
[0000][PE] mean and std.dev: (874.47, 753.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 394.049 CPU sec, 22.043 real sec
[0000] Calling mem_process_seqs.., task: 1293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512788, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 461, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3822)
[0000][PE] mean and std.dev: (695.06, 612.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.72, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 391.857 CPU sec, 21.980 real sec
[0000] Calling mem_process_seqs.., task: 1294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512461, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (500, 856, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4736)
[0000][PE] mean and std.dev: (1275.40, 1021.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 393.349 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 1295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512671, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 392.099 CPU sec, 21.960 real sec
[0000] Calling mem_process_seqs.., task: 1296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512673, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 817, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4332)
[0000][PE] mean and std.dev: (1079.95, 969.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 393.601 CPU sec, 22.041 real sec
[0000] Calling mem_process_seqs.., task: 1297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512727, 4, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 393.822 CPU sec, 22.065 real sec
[0000] Calling mem_process_seqs.., task: 1298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206080
	[0000][ M::kt_pipeline] read 1206080 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512877, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 430, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (803.43, 819.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 394.064 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 1299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512613, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 672, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (751.71, 716.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.49, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206080 reads in 395.892 CPU sec, 22.229 real sec
[0000] Calling mem_process_seqs.., task: 1300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512731, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (500, 1229, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6164)
[0000][PE] mean and std.dev: (1346.00, 1001.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 394.289 CPU sec, 22.116 real sec
[0000] Calling mem_process_seqs.., task: 1301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206076
	[0000][ M::kt_pipeline] read 1206076 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 513493, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 717, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (845.33, 684.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 392.932 CPU sec, 22.006 real sec
[0000] Calling mem_process_seqs.., task: 1302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512860, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 844, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (770.00, 447.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206076 reads in 396.129 CPU sec, 22.178 real sec
[0000] Calling mem_process_seqs.., task: 1303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512503, 3, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1402, 1587, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (564, 2659)
[0000][PE] mean and std.dev: (1482.12, 221.27)
[0000][PE] low and high boundaries for proper pairs: (145, 3078)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 394.381 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 1304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512883, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 391.412 CPU sec, 21.905 real sec
[0000] Calling mem_process_seqs.., task: 1305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512783, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 256, 2708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7856)
[0000][PE] mean and std.dev: (1181.62, 1666.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 389.097 CPU sec, 21.795 real sec
[0000] Calling mem_process_seqs.., task: 1306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512400, 1, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 860, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4674)
[0000][PE] mean and std.dev: (1025.31, 745.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 390.810 CPU sec, 21.904 real sec
[0000] Calling mem_process_seqs.., task: 1307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512881, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 394.390 CPU sec, 22.095 real sec
[0000] Calling mem_process_seqs.., task: 1308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512343, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (590, 1010, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3632)
[0000][PE] mean and std.dev: (1003.18, 565.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1509, 2847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6427)
[0000][PE] mean and std.dev: (1814.27, 1068.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 394.691 CPU sec, 22.102 real sec
[0000] Calling mem_process_seqs.., task: 1309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512880, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 1128, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7489)
[0000][PE] mean and std.dev: (1534.80, 1499.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 390.733 CPU sec, 21.890 real sec
[0000] Calling mem_process_seqs.., task: 1310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512888, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 337, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (79, 569)
[0000][PE] mean and std.dev: (290.75, 67.64)
[0000][PE] low and high boundaries for proper pairs: (1, 667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.02, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 392.279 CPU sec, 21.959 real sec
[0000] Calling mem_process_seqs.., task: 1311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512560, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 373, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5197)
[0000][PE] mean and std.dev: (1275.90, 1545.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 395.775 CPU sec, 22.151 real sec
[0000] Calling mem_process_seqs.., task: 1312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513034, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 802, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (968.80, 728.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1368, 1626, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (638, 2463)
[0000][PE] mean and std.dev: (1342.75, 346.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 389.863 CPU sec, 21.830 real sec
[0000] Calling mem_process_seqs.., task: 1313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512878, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 364, 480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 920)
[0000][PE] mean and std.dev: (329.31, 109.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 390.678 CPU sec, 21.885 real sec
[0000] Calling mem_process_seqs.., task: 1314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513014, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 620, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6027)
[0000][PE] mean and std.dev: (1198.42, 1346.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1657, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5655)
[0000][PE] mean and std.dev: (1541.30, 966.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 389.851 CPU sec, 21.794 real sec
[0000] Calling mem_process_seqs.., task: 1315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513237, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 502, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (903.92, 942.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 403.031 CPU sec, 22.605 real sec
[0000] Calling mem_process_seqs.., task: 1316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512745, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 667, 2303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6111)
[0000][PE] mean and std.dev: (1089.00, 828.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1430, 1947, 3451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7493)
[0000][PE] mean and std.dev: (2103.30, 1078.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 390.891 CPU sec, 21.868 real sec
[0000] Calling mem_process_seqs.., task: 1317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513146, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 455, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3690)
[0000][PE] mean and std.dev: (913.46, 824.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 392.582 CPU sec, 21.962 real sec
[0000] Calling mem_process_seqs.., task: 1318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513059, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 482, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3612)
[0000][PE] mean and std.dev: (772.75, 639.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 389.592 CPU sec, 21.813 real sec
[0000] Calling mem_process_seqs.., task: 1319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206098
	[0000][ M::kt_pipeline] read 1206098 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512888, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (680, 1498, 3617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9491)
[0000][PE] mean and std.dev: (2073.75, 1942.96)
[0000][PE] low and high boundaries for proper pairs: (1, 12428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.29, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 391.847 CPU sec, 21.971 real sec
[0000] Calling mem_process_seqs.., task: 1320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513293, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 422, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2957)
[0000][PE] mean and std.dev: (776.86, 644.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206098 reads in 390.284 CPU sec, 21.870 real sec
[0000] Calling mem_process_seqs.., task: 1321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513127, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 769, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2845)
[0000][PE] mean and std.dev: (766.31, 492.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1790, 2961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6453)
[0000][PE] mean and std.dev: (1681.64, 808.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 390.904 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 1322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513294, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 775, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1898)
[0000][PE] mean and std.dev: (701.36, 424.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.51, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 389.697 CPU sec, 21.818 real sec
[0000] Calling mem_process_seqs.., task: 1323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513011, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 658, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (882.64, 925.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.53, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1152, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3008)
[0000][PE] mean and std.dev: (1185.82, 729.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 389.170 CPU sec, 21.792 real sec
[0000] Calling mem_process_seqs.., task: 1324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512810, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 309, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1449)
[0000][PE] mean and std.dev: (326.71, 196.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.01, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 392.594 CPU sec, 21.961 real sec
[0000] Calling mem_process_seqs.., task: 1325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513249, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1009, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (1225.00, 1211.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 392.528 CPU sec, 21.998 real sec
[0000] Calling mem_process_seqs.., task: 1326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512923, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 365, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1794)
[0000][PE] mean and std.dev: (544.47, 430.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (528, 740, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5226)
[0000][PE] mean and std.dev: (1003.50, 759.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 389.808 CPU sec, 21.801 real sec
[0000] Calling mem_process_seqs.., task: 1327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513220, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 329, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5393)
[0000][PE] mean and std.dev: (862.47, 1039.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.40, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 392.008 CPU sec, 21.959 real sec
[0000] Calling mem_process_seqs.., task: 1328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512885, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 391.614 CPU sec, 21.976 real sec
[0000] Calling mem_process_seqs.., task: 1329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 513220, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 391.959 CPU sec, 21.908 real sec
[0000] Calling mem_process_seqs.., task: 1330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512361, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 341, 792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1946)
[0000][PE] mean and std.dev: (420.50, 283.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 390.501 CPU sec, 21.850 real sec
[0000] Calling mem_process_seqs.., task: 1331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513244, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 529, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4725)
[0000][PE] mean and std.dev: (975.07, 864.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.54, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 392.733 CPU sec, 22.011 real sec
[0000] Calling mem_process_seqs.., task: 1332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512698, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 505, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2409)
[0000][PE] mean and std.dev: (605.58, 566.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.64, 113.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1553, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4387)
[0000][PE] mean and std.dev: (1617.91, 714.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 391.046 CPU sec, 21.887 real sec
[0000] Calling mem_process_seqs.., task: 1333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512778, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 541, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4747)
[0000][PE] mean and std.dev: (955.75, 928.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 392.504 CPU sec, 21.977 real sec
[0000] Calling mem_process_seqs.., task: 1334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512728, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 361, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (748.94, 720.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (438, 993, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4467)
[0000][PE] mean and std.dev: (1052.67, 755.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 392.584 CPU sec, 21.975 real sec
[0000] Calling mem_process_seqs.., task: 1335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513067, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 488, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (591.00, 519.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 390.605 CPU sec, 21.895 real sec
[0000] Calling mem_process_seqs.., task: 1336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512595, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 466, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2169)
[0000][PE] mean and std.dev: (651.17, 502.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.68, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 393.449 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 1337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512927, 5, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 395.971 CPU sec, 22.169 real sec
[0000] Calling mem_process_seqs.., task: 1338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512810, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 987, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5973)
[0000][PE] mean and std.dev: (1346.67, 1298.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 1836, 4259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10335)
[0000][PE] mean and std.dev: (2885.70, 2537.98)
[0000][PE] low and high boundaries for proper pairs: (1, 13373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 394.769 CPU sec, 22.110 real sec
[0000] Calling mem_process_seqs.., task: 1339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513082, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 355, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2104)
[0000][PE] mean and std.dev: (469.07, 381.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.60, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 392.046 CPU sec, 21.982 real sec
[0000] Calling mem_process_seqs.., task: 1340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512767, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 206, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2573)
[0000][PE] mean and std.dev: (435.82, 439.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (626, 1110, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (1066.80, 485.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 396.113 CPU sec, 22.180 real sec
[0000] Calling mem_process_seqs.., task: 1341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512502, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 578, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (725.18, 778.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 398.169 CPU sec, 22.322 real sec
[0000] Calling mem_process_seqs.., task: 1342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512930, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 472, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5127)
[0000][PE] mean and std.dev: (839.47, 748.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 1488, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3518)
[0000][PE] mean and std.dev: (1369.40, 696.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 393.473 CPU sec, 22.029 real sec
[0000] Calling mem_process_seqs.., task: 1343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512775, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1112, 3244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8996)
[0000][PE] mean and std.dev: (1555.00, 1549.28)
[0000][PE] low and high boundaries for proper pairs: (1, 11872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 391.346 CPU sec, 21.902 real sec
[0000] Calling mem_process_seqs.., task: 1344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512643, 0, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (538, 804, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3019)
[0000][PE] mean and std.dev: (749.12, 328.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 397.327 CPU sec, 22.273 real sec
[0000] Calling mem_process_seqs.., task: 1345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512227, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 422, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4449)
[0000][PE] mean and std.dev: (754.06, 743.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.91, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 396.206 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 1346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513272, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 408, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5726)
[0000][PE] mean and std.dev: (1224.23, 1235.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 394.386 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 1347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512926, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 970, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6766)
[0000][PE] mean and std.dev: (1202.67, 952.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 398.333 CPU sec, 22.298 real sec
[0000] Calling mem_process_seqs.., task: 1348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512756, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 290, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3230)
[0000][PE] mean and std.dev: (766.86, 910.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 391.584 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 1349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512570, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1269, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5042)
[0000][PE] mean and std.dev: (1147.44, 966.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 393.212 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 1350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512706, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 638, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5524)
[0000][PE] mean and std.dev: (1070.21, 910.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1206, 1574, 2664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5580)
[0000][PE] mean and std.dev: (1568.78, 608.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 392.000 CPU sec, 21.944 real sec
[0000] Calling mem_process_seqs.., task: 1351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 513140, 2, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 393.842 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 1352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512987, 5, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 856, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (701.46, 447.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 391.258 CPU sec, 21.911 real sec
[0000] Calling mem_process_seqs.., task: 1353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513001, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 330, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6867)
[0000][PE] mean and std.dev: (759.33, 1009.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.35, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1750, 3274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8362)
[0000][PE] mean and std.dev: (2103.85, 1810.01)
[0000][PE] low and high boundaries for proper pairs: (1, 10906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 392.580 CPU sec, 21.983 real sec
[0000] Calling mem_process_seqs.., task: 1354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513115, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 703, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4449)
[0000][PE] mean and std.dev: (929.62, 651.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 390.530 CPU sec, 21.877 real sec
[0000] Calling mem_process_seqs.., task: 1355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512501, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 527, 904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2080)
[0000][PE] mean and std.dev: (545.69, 308.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 393.919 CPU sec, 22.057 real sec
[0000] Calling mem_process_seqs.., task: 1356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512639, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 330, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (931.95, 1100.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 390.014 CPU sec, 21.843 real sec
[0000] Calling mem_process_seqs.., task: 1357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513249, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 387.857 CPU sec, 21.698 real sec
[0000] Calling mem_process_seqs.., task: 1358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513088, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (505, 921, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1096.75, 841.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.26, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1282, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2893)
[0000][PE] mean and std.dev: (1069.60, 438.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 390.899 CPU sec, 21.905 real sec
[0000] Calling mem_process_seqs.., task: 1359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512540, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 263, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (550.62, 488.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1190, 3184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7774)
[0000][PE] mean and std.dev: (1908.69, 1877.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 391.429 CPU sec, 21.934 real sec
[0000] Calling mem_process_seqs.., task: 1360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513064, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 466, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (771.14, 807.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1251, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4970)
[0000][PE] mean and std.dev: (1535.73, 1023.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 392.684 CPU sec, 21.988 real sec
[0000] Calling mem_process_seqs.., task: 1361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512452, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 986, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (965.22, 761.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (571, 944, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (1031.00, 601.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 391.146 CPU sec, 21.920 real sec
[0000] Calling mem_process_seqs.., task: 1362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512773, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 317, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2268)
[0000][PE] mean and std.dev: (397.00, 340.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 392.801 CPU sec, 21.989 real sec
[0000] Calling mem_process_seqs.., task: 1363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512854, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 873, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (1007.71, 713.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 392.041 CPU sec, 21.967 real sec
[0000] Calling mem_process_seqs.., task: 1364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513032, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 857, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4564)
[0000][PE] mean and std.dev: (1185.08, 1097.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.29, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 391.678 CPU sec, 21.943 real sec
[0000] Calling mem_process_seqs.., task: 1365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513001, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 448, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (789.12, 789.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 392.668 CPU sec, 22.016 real sec
[0000] Calling mem_process_seqs.., task: 1366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512633, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 552, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3603)
[0000][PE] mean and std.dev: (984.12, 1004.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.22, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1242, 3190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7502)
[0000][PE] mean and std.dev: (2245.00, 1966.70)
[0000][PE] low and high boundaries for proper pairs: (1, 10112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 392.306 CPU sec, 21.953 real sec
[0000] Calling mem_process_seqs.., task: 1367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512902, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (947, 1266, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5279)
[0000][PE] mean and std.dev: (1473.67, 958.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 391.470 CPU sec, 21.908 real sec
[0000] Calling mem_process_seqs.., task: 1368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512637, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 621, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (828.74, 627.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 392.941 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 1369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513056, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 372, 721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1515)
[0000][PE] mean and std.dev: (401.42, 222.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 386.794 CPU sec, 21.643 real sec
[0000] Calling mem_process_seqs.., task: 1370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513084, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 721, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5405)
[0000][PE] mean and std.dev: (908.40, 840.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 390.495 CPU sec, 21.832 real sec
[0000] Calling mem_process_seqs.., task: 1371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512914, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 425, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2543)
[0000][PE] mean and std.dev: (743.53, 644.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 391.130 CPU sec, 21.909 real sec
[0000] Calling mem_process_seqs.., task: 1372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512902, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 392.152 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 1373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513226, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 453, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (819.91, 686.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1223, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3735)
[0000][PE] mean and std.dev: (1283.11, 603.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 388.991 CPU sec, 21.776 real sec
[0000] Calling mem_process_seqs.., task: 1374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512656, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 391, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3224)
[0000][PE] mean and std.dev: (657.80, 665.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 395.138 CPU sec, 22.154 real sec
[0000] Calling mem_process_seqs.., task: 1375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512931, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 503, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4229)
[0000][PE] mean and std.dev: (623.00, 491.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 387.656 CPU sec, 21.750 real sec
[0000] Calling mem_process_seqs.., task: 1376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512818, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 960, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (855.46, 554.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1386, 3049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6665)
[0000][PE] mean and std.dev: (2093.80, 1552.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 393.147 CPU sec, 22.028 real sec
[0000] Calling mem_process_seqs.., task: 1377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512695, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 437, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3102)
[0000][PE] mean and std.dev: (765.82, 709.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 393.793 CPU sec, 22.045 real sec
[0000] Calling mem_process_seqs.., task: 1378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512978, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 503, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2767)
[0000][PE] mean and std.dev: (559.33, 354.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.53, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1223, 1483, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4622)
[0000][PE] mean and std.dev: (1305.89, 655.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 396.573 CPU sec, 22.220 real sec
[0000] Calling mem_process_seqs.., task: 1379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512788, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 390.743 CPU sec, 21.882 real sec
[0000] Calling mem_process_seqs.., task: 1380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206088
	[0000][ M::kt_pipeline] read 1206088 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512754, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 651, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5290)
[0000][PE] mean and std.dev: (1292.35, 1418.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1040, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5622)
[0000][PE] mean and std.dev: (1545.36, 1236.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 389.114 CPU sec, 21.787 real sec
[0000] Calling mem_process_seqs.., task: 1381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512994, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 406, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2090)
[0000][PE] mean and std.dev: (500.80, 392.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206088 reads in 396.086 CPU sec, 22.258 real sec
[0000] Calling mem_process_seqs.., task: 1382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512408, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 429, 807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2113)
[0000][PE] mean and std.dev: (527.92, 490.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 391.813 CPU sec, 21.940 real sec
[0000] Calling mem_process_seqs.., task: 1383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 513152, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 391.765 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 1384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512907, 0, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 348, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3141)
[0000][PE] mean and std.dev: (522.40, 448.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 388.359 CPU sec, 21.729 real sec
[0000] Calling mem_process_seqs.., task: 1385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512674, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 404, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3713)
[0000][PE] mean and std.dev: (777.31, 800.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 390.880 CPU sec, 21.877 real sec
[0000] Calling mem_process_seqs.., task: 1386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206070
	[0000][ M::kt_pipeline] read 1206070 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512578, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1089, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4665)
[0000][PE] mean and std.dev: (1146.79, 1059.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 391.018 CPU sec, 21.873 real sec
[0000] Calling mem_process_seqs.., task: 1387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512627, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 560, 2980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8296)
[0000][PE] mean and std.dev: (1647.30, 1795.21)
[0000][PE] low and high boundaries for proper pairs: (1, 10954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206070 reads in 390.252 CPU sec, 21.871 real sec
[0000] Calling mem_process_seqs.., task: 1388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512345, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1361, 1584, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (513, 2633)
[0000][PE] mean and std.dev: (1514.80, 424.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3212)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 391.625 CPU sec, 21.936 real sec
[0000] Calling mem_process_seqs.., task: 1389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512712, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 459, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4454)
[0000][PE] mean and std.dev: (1008.29, 894.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 390.654 CPU sec, 21.875 real sec
[0000] Calling mem_process_seqs.., task: 1390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512776, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.32, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 392.115 CPU sec, 21.962 real sec
[0000] Calling mem_process_seqs.., task: 1391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512979, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 621, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2599)
[0000][PE] mean and std.dev: (667.50, 472.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 390.367 CPU sec, 21.875 real sec
[0000] Calling mem_process_seqs.., task: 1392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512421, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 521, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2082)
[0000][PE] mean and std.dev: (588.00, 410.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.33, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1484, 1867, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (76, 3596)
[0000][PE] mean and std.dev: (1795.92, 754.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 390.817 CPU sec, 21.903 real sec
[0000] Calling mem_process_seqs.., task: 1393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513019, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 500, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (722.62, 624.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 1191, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2666)
[0000][PE] mean and std.dev: (906.64, 426.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 393.360 CPU sec, 22.059 real sec
[0000] Calling mem_process_seqs.., task: 1394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513053, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 639, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2659)
[0000][PE] mean and std.dev: (574.00, 401.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.01, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 386.916 CPU sec, 21.669 real sec
[0000] Calling mem_process_seqs.., task: 1395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512963, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 535, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (795.19, 570.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 390.011 CPU sec, 21.823 real sec
[0000] Calling mem_process_seqs.., task: 1396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206048
	[0000][ M::kt_pipeline] read 1206048 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512509, 2, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1470, 2735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6405)
[0000][PE] mean and std.dev: (2086.75, 1581.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8411)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 393.303 CPU sec, 22.026 real sec
[0000] Calling mem_process_seqs.., task: 1397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512437, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 864, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1229.21, 1126.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206048 reads in 396.553 CPU sec, 22.205 real sec
[0000] Calling mem_process_seqs.., task: 1398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512751, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 729, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3764)
[0000][PE] mean and std.dev: (1051.21, 1154.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1499, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4033)
[0000][PE] mean and std.dev: (1200.36, 569.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 391.562 CPU sec, 21.925 real sec
[0000] Calling mem_process_seqs.., task: 1399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513119, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 374, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2374)
[0000][PE] mean and std.dev: (462.93, 312.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1536, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5338)
[0000][PE] mean and std.dev: (1712.08, 1146.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 389.561 CPU sec, 21.837 real sec
[0000] Calling mem_process_seqs.., task: 1400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512684, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 367, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6005)
[0000][PE] mean and std.dev: (1083.00, 1079.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.97, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 392.821 CPU sec, 21.978 real sec
[0000] Calling mem_process_seqs.., task: 1401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512925, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 390.393 CPU sec, 21.845 real sec
[0000] Calling mem_process_seqs.., task: 1402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513311, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 407, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2258)
[0000][PE] mean and std.dev: (559.85, 409.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 388.348 CPU sec, 21.740 real sec
[0000] Calling mem_process_seqs.., task: 1403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206082
	[0000][ M::kt_pipeline] read 1206082 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512877, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 265, 431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 919)
[0000][PE] mean and std.dev: (301.54, 201.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 389.421 CPU sec, 21.815 real sec
[0000] Calling mem_process_seqs.., task: 1404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512599, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 801, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (908.56, 779.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.99, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206082 reads in 390.808 CPU sec, 21.864 real sec
[0000] Calling mem_process_seqs.., task: 1405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512665, 5, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 484, 816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1814)
[0000][PE] mean and std.dev: (564.42, 394.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.91, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 392.884 CPU sec, 22.034 real sec
[0000] Calling mem_process_seqs.., task: 1406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513100, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 1101, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5245)
[0000][PE] mean and std.dev: (1450.91, 1348.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1596, 2532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5338)
[0000][PE] mean and std.dev: (1561.36, 796.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 388.497 CPU sec, 21.707 real sec
[0000] Calling mem_process_seqs.., task: 1407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513396, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 1129, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5634)
[0000][PE] mean and std.dev: (1353.92, 1290.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.61, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 391.782 CPU sec, 21.913 real sec
[0000] Calling mem_process_seqs.., task: 1408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512523, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 312, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1616)
[0000][PE] mean and std.dev: (397.50, 291.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 397.787 CPU sec, 22.312 real sec
[0000] Calling mem_process_seqs.., task: 1409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512693, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 381, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1278)
[0000][PE] mean and std.dev: (421.08, 261.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.33, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1366, 1988, 2613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5107)
[0000][PE] mean and std.dev: (1886.00, 854.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 389.214 CPU sec, 21.770 real sec
[0000] Calling mem_process_seqs.., task: 1410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513052, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 817, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (915.63, 764.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 387.455 CPU sec, 21.692 real sec
[0000] Calling mem_process_seqs.., task: 1411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513051, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 623, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5760)
[0000][PE] mean and std.dev: (1387.35, 1604.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.81, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 390.352 CPU sec, 21.871 real sec
[0000] Calling mem_process_seqs.., task: 1412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512600, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 441, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (694.31, 630.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.99, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1944, 3285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7589)
[0000][PE] mean and std.dev: (2278.43, 1700.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 386.506 CPU sec, 21.644 real sec
[0000] Calling mem_process_seqs.., task: 1413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512561, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 319, 919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2223)
[0000][PE] mean and std.dev: (584.38, 511.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.53, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1541, 2370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5012)
[0000][PE] mean and std.dev: (1601.09, 874.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 392.661 CPU sec, 21.989 real sec
[0000] Calling mem_process_seqs.., task: 1414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512752, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 683, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5436)
[0000][PE] mean and std.dev: (1137.58, 1174.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 1267, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4417)
[0000][PE] mean and std.dev: (1191.21, 753.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 391.419 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 1415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512683, 0, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 860, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (969.73, 662.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 391.350 CPU sec, 21.922 real sec
[0000] Calling mem_process_seqs.., task: 1416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512761, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 375, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (585.50, 440.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 390.298 CPU sec, 21.882 real sec
[0000] Calling mem_process_seqs.., task: 1417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512697, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 341, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2694)
[0000][PE] mean and std.dev: (469.75, 444.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 391.394 CPU sec, 21.936 real sec
[0000] Calling mem_process_seqs.., task: 1418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206072
	[0000][ M::kt_pipeline] read 1206072 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512444, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 407, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2045)
[0000][PE] mean and std.dev: (456.50, 271.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 389.615 CPU sec, 21.817 real sec
[0000] Calling mem_process_seqs.., task: 1419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512395, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 409, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2744)
[0000][PE] mean and std.dev: (773.12, 672.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206072 reads in 389.021 CPU sec, 21.829 real sec
[0000] Calling mem_process_seqs.., task: 1420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512615, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 721, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2204)
[0000][PE] mean and std.dev: (508.80, 312.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 391.446 CPU sec, 21.926 real sec
[0000] Calling mem_process_seqs.., task: 1421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513090, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 286, 686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1678)
[0000][PE] mean and std.dev: (387.50, 339.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 391.859 CPU sec, 21.967 real sec
[0000] Calling mem_process_seqs.., task: 1422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512408, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 569, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (955.37, 901.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1225, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (80, 2330)
[0000][PE] mean and std.dev: (1058.50, 403.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 392.319 CPU sec, 21.967 real sec
[0000] Calling mem_process_seqs.., task: 1423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513058, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 864, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5478)
[0000][PE] mean and std.dev: (1168.23, 790.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 389.271 CPU sec, 21.780 real sec
[0000] Calling mem_process_seqs.., task: 1424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512836, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 1424, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4138)
[0000][PE] mean and std.dev: (1121.09, 838.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 392.564 CPU sec, 21.979 real sec
[0000] Calling mem_process_seqs.., task: 1425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512676, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 422, 1066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (553.94, 481.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 391.614 CPU sec, 21.941 real sec
[0000] Calling mem_process_seqs.., task: 1426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512706, 2, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 391.206 CPU sec, 21.923 real sec
[0000] Calling mem_process_seqs.., task: 1427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512985, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (775, 1392, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5623)
[0000][PE] mean and std.dev: (1485.82, 939.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 391.061 CPU sec, 21.903 real sec
[0000] Calling mem_process_seqs.., task: 1428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512719, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 487, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3019)
[0000][PE] mean and std.dev: (846.14, 753.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (555, 1104, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2748)
[0000][PE] mean and std.dev: (908.36, 339.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 389.502 CPU sec, 21.841 real sec
[0000] Calling mem_process_seqs.., task: 1429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513050, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 782, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2662)
[0000][PE] mean and std.dev: (762.87, 546.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 393.039 CPU sec, 22.015 real sec
[0000] Calling mem_process_seqs.., task: 1430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512798, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 1043, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3638)
[0000][PE] mean and std.dev: (965.31, 744.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1451, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3358)
[0000][PE] mean and std.dev: (1389.40, 467.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 389.564 CPU sec, 21.822 real sec
[0000] Calling mem_process_seqs.., task: 1431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512894, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 966, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (1068.50, 792.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1328, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (223, 2433)
[0000][PE] mean and std.dev: (1374.80, 525.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 391.112 CPU sec, 21.893 real sec
[0000] Calling mem_process_seqs.., task: 1432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206064
	[0000][ M::kt_pipeline] read 1206064 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512694, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 434, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3367)
[0000][PE] mean and std.dev: (779.10, 892.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1009, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5429)
[0000][PE] mean and std.dev: (1322.50, 881.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 389.290 CPU sec, 21.792 real sec
[0000] Calling mem_process_seqs.., task: 1433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513000, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 345, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4927)
[0000][PE] mean and std.dev: (1103.40, 1205.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206064 reads in 390.488 CPU sec, 21.870 real sec
[0000] Calling mem_process_seqs.., task: 1434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512638, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 390.557 CPU sec, 21.864 real sec
[0000] Calling mem_process_seqs.., task: 1435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512982, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 569, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2972)
[0000][PE] mean and std.dev: (696.30, 623.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 390.948 CPU sec, 21.884 real sec
[0000] Calling mem_process_seqs.., task: 1436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512619, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 388, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2119)
[0000][PE] mean and std.dev: (480.71, 434.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 390.937 CPU sec, 21.866 real sec
[0000] Calling mem_process_seqs.., task: 1437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513365, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 480, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3113)
[0000][PE] mean and std.dev: (673.69, 497.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 388.975 CPU sec, 21.762 real sec
[0000] Calling mem_process_seqs.., task: 1438
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512983, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 523, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2149)
[0000][PE] mean and std.dev: (576.06, 288.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.80, 113.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 388.154 CPU sec, 21.857 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000266 bp)...
[0000] Calling mem_process_seqs.., task: 1439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512832, 1, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1345, 1863, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (1550.25, 564.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 395.617 CPU sec, 22.229 real sec
[0000] Calling mem_process_seqs.., task: 1440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512713, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 285, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4879)
[0000][PE] mean and std.dev: (1082.36, 1312.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1139, 2892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6872)
[0000][PE] mean and std.dev: (1675.22, 1632.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 398.083 CPU sec, 22.341 real sec
[0000] Calling mem_process_seqs.., task: 1441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512819, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 1124, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4247)
[0000][PE] mean and std.dev: (1043.40, 960.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (612, 1170, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (1016.36, 453.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 400.316 CPU sec, 22.426 real sec
[0000] Calling mem_process_seqs.., task: 1442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512600, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 325, 470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1038)
[0000][PE] mean and std.dev: (270.33, 142.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1430, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2862)
[0000][PE] mean and std.dev: (1226.62, 449.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 401.558 CPU sec, 22.532 real sec
[0000] Calling mem_process_seqs.., task: 1443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512775, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 329, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2628)
[0000][PE] mean and std.dev: (501.62, 407.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1346, 1755, 2988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6272)
[0000][PE] mean and std.dev: (1858.40, 1008.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 396.517 CPU sec, 22.234 real sec
[0000] Calling mem_process_seqs.., task: 1444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512713, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 730, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4608)
[0000][PE] mean and std.dev: (842.71, 630.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1547, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3571)
[0000][PE] mean and std.dev: (1502.40, 638.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 396.851 CPU sec, 22.285 real sec
[0000] Calling mem_process_seqs.., task: 1445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513082, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 402.181 CPU sec, 22.543 real sec
[0000] Calling mem_process_seqs.., task: 1446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513073, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 521, 827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1769)
[0000][PE] mean and std.dev: (490.00, 239.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1327, 1351, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (1521.50, 509.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 397.237 CPU sec, 22.309 real sec
[0000] Calling mem_process_seqs.., task: 1447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512859, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 378, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2974)
[0000][PE] mean and std.dev: (633.67, 514.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1572, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4851)
[0000][PE] mean and std.dev: (1585.80, 961.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 394.718 CPU sec, 22.099 real sec
[0000] Calling mem_process_seqs.., task: 1448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 513046, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 864, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2766)
[0000][PE] mean and std.dev: (866.94, 586.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 402.286 CPU sec, 22.608 real sec
[0000] Calling mem_process_seqs.., task: 1449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512919, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 355, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3674)
[0000][PE] mean and std.dev: (955.77, 873.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 398.762 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 1450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 512987, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 364, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (544.58, 518.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 396.392 CPU sec, 22.215 real sec
[0000] Calling mem_process_seqs.., task: 1451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513153, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 970, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (861.73, 554.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.33, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 396.906 CPU sec, 22.249 real sec
[0000] Calling mem_process_seqs.., task: 1452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512838, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 344, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (129, 564)
[0000][PE] mean and std.dev: (323.67, 69.75)
[0000][PE] low and high boundaries for proper pairs: (42, 651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 401.010 CPU sec, 22.507 real sec
[0000] Calling mem_process_seqs.., task: 1453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512878, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 1066, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5057)
[0000][PE] mean and std.dev: (1014.59, 866.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.65, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 397.359 CPU sec, 22.269 real sec
[0000] Calling mem_process_seqs.., task: 1454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512550, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1074, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5477)
[0000][PE] mean and std.dev: (985.15, 724.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1138, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3354)
[0000][PE] mean and std.dev: (1322.60, 855.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 400.498 CPU sec, 22.459 real sec
[0000] Calling mem_process_seqs.., task: 1455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206170
	[0000][ M::kt_pipeline] read 1206170 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513289, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 423, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (599.25, 529.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 395.988 CPU sec, 22.206 real sec
[0000] Calling mem_process_seqs.., task: 1456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512697, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 443, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2797)
[0000][PE] mean and std.dev: (519.91, 359.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (573, 1349, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5598)
[0000][PE] mean and std.dev: (1281.50, 939.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206170 reads in 402.619 CPU sec, 22.575 real sec
[0000] Calling mem_process_seqs.., task: 1457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512618, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 385, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2763)
[0000][PE] mean and std.dev: (707.00, 654.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.60, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 396.051 CPU sec, 22.173 real sec
[0000] Calling mem_process_seqs.., task: 1458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 512462, 1, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1000, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (177, 1977)
[0000][PE] mean and std.dev: (976.33, 346.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2363)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 395.764 CPU sec, 22.167 real sec
[0000] Calling mem_process_seqs.., task: 1459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513020, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 430, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4522)
[0000][PE] mean and std.dev: (874.00, 925.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.45, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 396.057 CPU sec, 22.212 real sec
[0000] Calling mem_process_seqs.., task: 1460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512798, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 368, 829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2067)
[0000][PE] mean and std.dev: (505.41, 445.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1168, 2680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6398)
[0000][PE] mean and std.dev: (1717.00, 1245.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 395.334 CPU sec, 22.157 real sec
[0000] Calling mem_process_seqs.., task: 1461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513026, 4, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 396.209 CPU sec, 22.181 real sec
[0000] Calling mem_process_seqs.., task: 1462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512858, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 736, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (882.69, 687.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.72, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1304, 3141, 4148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9836)
[0000][PE] mean and std.dev: (3177.70, 1943.54)
[0000][PE] low and high boundaries for proper pairs: (1, 12680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 399.443 CPU sec, 22.390 real sec
[0000] Calling mem_process_seqs.., task: 1463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512539, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 397, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (537.80, 389.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 398.746 CPU sec, 22.310 real sec
[0000] Calling mem_process_seqs.., task: 1464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512756, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 1157, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4820)
[0000][PE] mean and std.dev: (982.53, 879.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 398.949 CPU sec, 22.361 real sec
[0000] Calling mem_process_seqs.., task: 1465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 511958, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 468, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5042)
[0000][PE] mean and std.dev: (1010.38, 1088.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1197, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (1162.56, 837.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 406.093 CPU sec, 22.794 real sec
[0000] Calling mem_process_seqs.., task: 1466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513163, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 348, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 989)
[0000][PE] mean and std.dev: (315.75, 154.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1144, 2654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6304)
[0000][PE] mean and std.dev: (1550.82, 933.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 400.027 CPU sec, 22.425 real sec
[0000] Calling mem_process_seqs.., task: 1467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206060
	[0000][ M::kt_pipeline] read 1206060 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512570, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 322, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5601)
[0000][PE] mean and std.dev: (912.92, 1266.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 400.066 CPU sec, 22.418 real sec
[0000] Calling mem_process_seqs.., task: 1468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 512774, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 371, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2393)
[0000][PE] mean and std.dev: (582.77, 558.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206060 reads in 399.356 CPU sec, 22.391 real sec
[0000] Calling mem_process_seqs.., task: 1469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 513265, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 909, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3492)
[0000][PE] mean and std.dev: (831.56, 501.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 396.092 CPU sec, 22.215 real sec
[0000] Calling mem_process_seqs.., task: 1470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512710, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 981, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5322)
[0000][PE] mean and std.dev: (1520.30, 1490.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 398.867 CPU sec, 22.334 real sec
[0000] Calling mem_process_seqs.., task: 1471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513242, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 419, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3610)
[0000][PE] mean and std.dev: (808.35, 824.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 394.522 CPU sec, 22.127 real sec
[0000] Calling mem_process_seqs.., task: 1472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513103, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 343, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (732.07, 829.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 393.185 CPU sec, 22.028 real sec
[0000] Calling mem_process_seqs.., task: 1473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513086, 1, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 384, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2311)
[0000][PE] mean and std.dev: (614.08, 519.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.47, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 408.436 CPU sec, 22.971 real sec
[0000] Calling mem_process_seqs.., task: 1474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513072, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.63, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 401.144 CPU sec, 22.495 real sec
[0000] Calling mem_process_seqs.., task: 1475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512763, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 372, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3890)
[0000][PE] mean and std.dev: (774.08, 800.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 397.788 CPU sec, 22.331 real sec
[0000] Calling mem_process_seqs.., task: 1476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512961, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 801, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5218)
[0000][PE] mean and std.dev: (717.50, 549.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 400.933 CPU sec, 22.474 real sec
[0000] Calling mem_process_seqs.., task: 1477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512554, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 336, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2473)
[0000][PE] mean and std.dev: (611.19, 549.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3207)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (341, 740, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4790)
[0000][PE] mean and std.dev: (986.67, 968.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 398.534 CPU sec, 22.298 real sec
[0000] Calling mem_process_seqs.., task: 1478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513001, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 551, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6590)
[0000][PE] mean and std.dev: (1074.85, 959.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 2173, 3115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7275)
[0000][PE] mean and std.dev: (2130.78, 1404.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 398.883 CPU sec, 22.335 real sec
[0000] Calling mem_process_seqs.., task: 1479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512931, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 333, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (920.31, 891.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 399.388 CPU sec, 22.372 real sec
[0000] Calling mem_process_seqs.., task: 1480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513301, 5, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 397.200 CPU sec, 22.306 real sec
[0000] Calling mem_process_seqs.., task: 1481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512997, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 445, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1483)
[0000][PE] mean and std.dev: (454.00, 306.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.58, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1395, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (1595.20, 1138.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 398.350 CPU sec, 22.324 real sec
[0000] Calling mem_process_seqs.., task: 1482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512725, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 787, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5411)
[0000][PE] mean and std.dev: (1050.17, 937.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 398.521 CPU sec, 22.344 real sec
[0000] Calling mem_process_seqs.., task: 1483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512993, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 398.195 CPU sec, 22.312 real sec
[0000] Calling mem_process_seqs.., task: 1484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513036, 0, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 281, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3415)
[0000][PE] mean and std.dev: (573.56, 637.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.53, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 396.808 CPU sec, 22.273 real sec
[0000] Calling mem_process_seqs.., task: 1485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206106
	[0000][ M::kt_pipeline] read 1206106 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 513086, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 401.085 CPU sec, 22.450 real sec
[0000] Calling mem_process_seqs.., task: 1486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512363, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 371, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (674.12, 586.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206106 reads in 397.736 CPU sec, 22.294 real sec
[0000] Calling mem_process_seqs.., task: 1487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513024, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 673, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (923.08, 686.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1479, 2566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5448)
[0000][PE] mean and std.dev: (1928.62, 1250.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 397.279 CPU sec, 22.246 real sec
[0000] Calling mem_process_seqs.., task: 1488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513037, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1088, 1558, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (1566.18, 1065.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.54, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 395.262 CPU sec, 22.156 real sec
[0000] Calling mem_process_seqs.., task: 1489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512706, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 333, 904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2332)
[0000][PE] mean and std.dev: (607.64, 669.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1960, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4692)
[0000][PE] mean and std.dev: (1593.86, 837.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 399.972 CPU sec, 22.419 real sec
[0000] Calling mem_process_seqs.., task: 1490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512857, 0, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 906, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (1081.40, 817.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 398.100 CPU sec, 22.326 real sec
[0000] Calling mem_process_seqs.., task: 1491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512392, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 396.085 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 1492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512710, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 610, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2649)
[0000][PE] mean and std.dev: (698.67, 698.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 399.399 CPU sec, 22.355 real sec
[0000] Calling mem_process_seqs.., task: 1493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512823, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 273, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1407)
[0000][PE] mean and std.dev: (374.50, 275.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (538, 1217, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (1047.44, 517.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 399.418 CPU sec, 22.387 real sec
[0000] Calling mem_process_seqs.., task: 1494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512755, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 611, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2234)
[0000][PE] mean and std.dev: (550.79, 286.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 398.391 CPU sec, 22.339 real sec
[0000] Calling mem_process_seqs.., task: 1495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512762, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 451, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2995)
[0000][PE] mean and std.dev: (659.53, 602.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 399.235 CPU sec, 22.347 real sec
[0000] Calling mem_process_seqs.., task: 1496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512876, 0, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 398.837 CPU sec, 22.330 real sec
[0000] Calling mem_process_seqs.., task: 1497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512669, 9, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 1064, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2440)
[0000][PE] mean and std.dev: (962.50, 604.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 398.576 CPU sec, 22.310 real sec
[0000] Calling mem_process_seqs.., task: 1498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512796, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 400.814 CPU sec, 22.444 real sec
[0000] Calling mem_process_seqs.., task: 1499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512876, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 848, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4914)
[0000][PE] mean and std.dev: (862.73, 816.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 942, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3488)
[0000][PE] mean and std.dev: (1048.00, 594.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 396.698 CPU sec, 22.195 real sec
[0000] Calling mem_process_seqs.., task: 1500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513267, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 742, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2779)
[0000][PE] mean and std.dev: (932.93, 844.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (709, 1298, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5410)
[0000][PE] mean and std.dev: (1376.07, 961.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 395.450 CPU sec, 22.167 real sec
[0000] Calling mem_process_seqs.., task: 1501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512438, 1, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 397.917 CPU sec, 22.295 real sec
[0000] Calling mem_process_seqs.., task: 1502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513227, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 566, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3367)
[0000][PE] mean and std.dev: (797.45, 599.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1750, 2876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7012)
[0000][PE] mean and std.dev: (1848.33, 1370.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 397.146 CPU sec, 22.262 real sec
[0000] Calling mem_process_seqs.., task: 1503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512877, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 506, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3870)
[0000][PE] mean and std.dev: (784.42, 722.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1221, 2505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5235)
[0000][PE] mean and std.dev: (1795.27, 1056.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 397.925 CPU sec, 22.273 real sec
[0000] Calling mem_process_seqs.., task: 1504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512332, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 471, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4736)
[0000][PE] mean and std.dev: (925.94, 886.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 2215, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6933)
[0000][PE] mean and std.dev: (2024.00, 1663.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 400.039 CPU sec, 22.397 real sec
[0000] Calling mem_process_seqs.., task: 1505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512760, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 304, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4768)
[0000][PE] mean and std.dev: (681.64, 777.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 395.243 CPU sec, 22.158 real sec
[0000] Calling mem_process_seqs.., task: 1506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512984, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 335, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (438.75, 388.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 394.377 CPU sec, 22.087 real sec
[0000] Calling mem_process_seqs.., task: 1507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512728, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1741, 2110, 3102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5824)
[0000][PE] mean and std.dev: (2082.70, 1076.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7185)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 397.711 CPU sec, 22.281 real sec
[0000] Calling mem_process_seqs.., task: 1508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512465, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (855, 1331, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4938)
[0000][PE] mean and std.dev: (1161.29, 737.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 397.715 CPU sec, 22.259 real sec
[0000] Calling mem_process_seqs.., task: 1509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512585, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 543, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (893.46, 785.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 395.532 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 1510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513271, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 364, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3878)
[0000][PE] mean and std.dev: (651.38, 668.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1609, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4619)
[0000][PE] mean and std.dev: (1592.75, 817.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 399.554 CPU sec, 22.375 real sec
[0000] Calling mem_process_seqs.., task: 1511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512835, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 372, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4850)
[0000][PE] mean and std.dev: (986.08, 1255.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1316, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5663)
[0000][PE] mean and std.dev: (1618.31, 988.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 401.076 CPU sec, 22.488 real sec
[0000] Calling mem_process_seqs.., task: 1512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513054, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 449, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2591)
[0000][PE] mean and std.dev: (580.15, 376.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 395.720 CPU sec, 22.186 real sec
[0000] Calling mem_process_seqs.., task: 1513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513099, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 865, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (793.81, 576.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 397.554 CPU sec, 22.253 real sec
[0000] Calling mem_process_seqs.., task: 1514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512620, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 350, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4491)
[0000][PE] mean and std.dev: (844.23, 882.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1297, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (1500.64, 764.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 397.441 CPU sec, 22.280 real sec
[0000] Calling mem_process_seqs.., task: 1515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512719, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 702, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (743.15, 534.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1210, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3303)
[0000][PE] mean and std.dev: (1222.08, 794.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 398.992 CPU sec, 22.359 real sec
[0000] Calling mem_process_seqs.., task: 1516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512760, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 757, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2304)
[0000][PE] mean and std.dev: (645.60, 309.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1647, 3341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8233)
[0000][PE] mean and std.dev: (2209.17, 1745.21)
[0000][PE] low and high boundaries for proper pairs: (1, 10679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 394.513 CPU sec, 22.086 real sec
[0000] Calling mem_process_seqs.., task: 1517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512340, 4, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 957, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (1105.18, 611.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 400.706 CPU sec, 22.442 real sec
[0000] Calling mem_process_seqs.., task: 1518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513122, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 454, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (920.92, 957.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (494, 796, 3909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10739)
[0000][PE] mean and std.dev: (2211.45, 2510.57)
[0000][PE] low and high boundaries for proper pairs: (1, 14154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 400.256 CPU sec, 22.402 real sec
[0000] Calling mem_process_seqs.., task: 1519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512911, 8, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1406, 2115, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (1867.22, 786.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5214)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 404.743 CPU sec, 22.677 real sec
[0000] Calling mem_process_seqs.., task: 1520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512524, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 347, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2873)
[0000][PE] mean and std.dev: (522.92, 532.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 396.946 CPU sec, 22.255 real sec
[0000] Calling mem_process_seqs.., task: 1521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512549, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 855, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (1126.50, 1063.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1280, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3720)
[0000][PE] mean and std.dev: (1313.44, 761.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 396.592 CPU sec, 22.212 real sec
[0000] Calling mem_process_seqs.., task: 1522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206076
	[0000][ M::kt_pipeline] read 1206076 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512691, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 300, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (3, 598)
[0000][PE] mean and std.dev: (261.50, 63.92)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 394.434 CPU sec, 22.090 real sec
[0000] Calling mem_process_seqs.., task: 1523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512701, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 389, 4698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13438)
[0000][PE] mean and std.dev: (2075.77, 2604.61)
[0000][PE] low and high boundaries for proper pairs: (1, 17808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.38, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206076 reads in 398.720 CPU sec, 22.337 real sec
[0000] Calling mem_process_seqs.., task: 1524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513623, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 405, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2164)
[0000][PE] mean and std.dev: (528.67, 307.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.32, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 392.952 CPU sec, 22.018 real sec
[0000] Calling mem_process_seqs.., task: 1525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512241, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 736, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (791.00, 506.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1421, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (1408.17, 513.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 401.359 CPU sec, 22.489 real sec
[0000] Calling mem_process_seqs.., task: 1526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512833, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 845, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5432)
[0000][PE] mean and std.dev: (958.56, 712.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.59, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1165, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (1119.55, 700.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 397.158 CPU sec, 22.274 real sec
[0000] Calling mem_process_seqs.., task: 1527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512488, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 345, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2455)
[0000][PE] mean and std.dev: (577.77, 463.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 403.617 CPU sec, 22.666 real sec
[0000] Calling mem_process_seqs.., task: 1528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512817, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 718, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2957)
[0000][PE] mean and std.dev: (743.54, 440.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 402.634 CPU sec, 22.559 real sec
[0000] Calling mem_process_seqs.., task: 1529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512940, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 355, 442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 902)
[0000][PE] mean and std.dev: (286.33, 105.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 1264, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5273)
[0000][PE] mean and std.dev: (1400.00, 992.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 399.838 CPU sec, 22.383 real sec
[0000] Calling mem_process_seqs.., task: 1530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512844, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 495, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4286)
[0000][PE] mean and std.dev: (967.58, 936.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.56, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 399.329 CPU sec, 22.360 real sec
[0000] Calling mem_process_seqs.., task: 1531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513105, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 412, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2678)
[0000][PE] mean and std.dev: (640.58, 497.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 399.494 CPU sec, 22.348 real sec
[0000] Calling mem_process_seqs.., task: 1532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513304, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 533, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5299)
[0000][PE] mean and std.dev: (916.25, 887.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.53, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 393.605 CPU sec, 22.046 real sec
[0000] Calling mem_process_seqs.., task: 1533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512656, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 320, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3403)
[0000][PE] mean and std.dev: (610.14, 563.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 399.972 CPU sec, 22.409 real sec
[0000] Calling mem_process_seqs.., task: 1534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513201, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 273, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (454.22, 534.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 395.508 CPU sec, 22.151 real sec
[0000] Calling mem_process_seqs.., task: 1535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512868, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 741, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2933)
[0000][PE] mean and std.dev: (663.45, 467.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 399.155 CPU sec, 22.373 real sec
[0000] Calling mem_process_seqs.., task: 1536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206112
	[0000][ M::kt_pipeline] read 1206112 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512612, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 403, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2636)
[0000][PE] mean and std.dev: (554.57, 414.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 400.234 CPU sec, 22.437 real sec
[0000] Calling mem_process_seqs.., task: 1537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512948, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 458, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6050)
[0000][PE] mean and std.dev: (1340.87, 1449.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1337, 4216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10532)
[0000][PE] mean and std.dev: (2533.55, 2515.43)
[0000][PE] low and high boundaries for proper pairs: (1, 13690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206112 reads in 398.415 CPU sec, 22.304 real sec
[0000] Calling mem_process_seqs.., task: 1538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512632, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (960, 1330, 2505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5595)
[0000][PE] mean and std.dev: (1651.81, 1364.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1279, 1632, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (1472.82, 700.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 402.477 CPU sec, 22.562 real sec
[0000] Calling mem_process_seqs.., task: 1539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513041, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (644, 983, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (1049.33, 705.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1327, 3223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7611)
[0000][PE] mean and std.dev: (2092.67, 1809.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 400.643 CPU sec, 22.430 real sec
[0000] Calling mem_process_seqs.., task: 1540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513236, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 389, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (697.50, 609.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (574, 1585, 3715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9997)
[0000][PE] mean and std.dev: (2176.62, 1815.79)
[0000][PE] low and high boundaries for proper pairs: (1, 13138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 398.813 CPU sec, 22.331 real sec
[0000] Calling mem_process_seqs.., task: 1541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512487, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 402, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5152)
[0000][PE] mean and std.dev: (837.38, 918.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1295, 3594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8946)
[0000][PE] mean and std.dev: (2154.50, 2021.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 397.692 CPU sec, 22.271 real sec
[0000] Calling mem_process_seqs.., task: 1542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513218, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 286, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (550.17, 629.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 397.826 CPU sec, 22.285 real sec
[0000] Calling mem_process_seqs.., task: 1543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512956, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 327, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (535.37, 452.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 398.688 CPU sec, 22.367 real sec
[0000] Calling mem_process_seqs.., task: 1544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512851, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 457, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3365)
[0000][PE] mean and std.dev: (561.33, 347.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 395.887 CPU sec, 22.166 real sec
[0000] Calling mem_process_seqs.., task: 1545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206080
	[0000][ M::kt_pipeline] read 1206080 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512644, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 406, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2042)
[0000][PE] mean and std.dev: (508.00, 352.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1559, 2872, 3135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6287)
[0000][PE] mean and std.dev: (2757.90, 1422.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 400.539 CPU sec, 22.430 real sec
[0000] Calling mem_process_seqs.., task: 1546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512957, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206080 reads in 397.738 CPU sec, 22.254 real sec
[0000] Calling mem_process_seqs.., task: 1547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512648, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 761, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (784.58, 488.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 404.290 CPU sec, 22.699 real sec
[0000] Calling mem_process_seqs.., task: 1548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512673, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 463, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2909)
[0000][PE] mean and std.dev: (572.25, 372.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (399, 1172, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6432)
[0000][PE] mean and std.dev: (1660.50, 1637.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 398.733 CPU sec, 22.319 real sec
[0000] Calling mem_process_seqs.., task: 1549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512749, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 545, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1683)
[0000][PE] mean and std.dev: (455.31, 333.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 399.866 CPU sec, 22.442 real sec
[0000] Calling mem_process_seqs.., task: 1550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512800, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 397.551 CPU sec, 22.317 real sec
[0000] Calling mem_process_seqs.., task: 1551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513038, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 1009, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5244)
[0000][PE] mean and std.dev: (1386.73, 1217.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 395.742 CPU sec, 22.138 real sec
[0000] Calling mem_process_seqs.., task: 1552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512575, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 531, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2427)
[0000][PE] mean and std.dev: (553.36, 324.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 399.040 CPU sec, 22.358 real sec
[0000] Calling mem_process_seqs.., task: 1553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512037, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 315, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2309)
[0000][PE] mean and std.dev: (383.73, 275.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 399.709 CPU sec, 22.360 real sec
[0000] Calling mem_process_seqs.., task: 1554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512779, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 1027, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (924.71, 543.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 399.206 CPU sec, 22.365 real sec
[0000] Calling mem_process_seqs.., task: 1555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512488, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 411, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4491)
[0000][PE] mean and std.dev: (837.75, 779.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 400.335 CPU sec, 22.456 real sec
[0000] Calling mem_process_seqs.., task: 1556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512599, 0, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 398.659 CPU sec, 22.294 real sec
[0000] Calling mem_process_seqs.., task: 1557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512995, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 889, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (767.00, 521.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1630, 2772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6462)
[0000][PE] mean and std.dev: (1871.50, 1290.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 398.246 CPU sec, 22.315 real sec
[0000] Calling mem_process_seqs.., task: 1558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512715, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 554, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4758)
[0000][PE] mean and std.dev: (742.67, 614.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 400.240 CPU sec, 22.424 real sec
[0000] Calling mem_process_seqs.., task: 1559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512601, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 367, 3385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9641)
[0000][PE] mean and std.dev: (1565.20, 2307.48)
[0000][PE] low and high boundaries for proper pairs: (1, 12769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (479, 1335, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5930)
[0000][PE] mean and std.dev: (1586.08, 1237.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 398.022 CPU sec, 22.323 real sec
[0000] Calling mem_process_seqs.., task: 1560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206074
	[0000][ M::kt_pipeline] read 1206074 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512403, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 475, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (1006.83, 974.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 398.291 CPU sec, 22.332 real sec
[0000] Calling mem_process_seqs.., task: 1561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512793, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206074 reads in 399.430 CPU sec, 22.397 real sec
[0000] Calling mem_process_seqs.., task: 1562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512369, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 469, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (995.87, 1013.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1334, 1510, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4586)
[0000][PE] mean and std.dev: (1495.29, 724.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 395.420 CPU sec, 22.167 real sec
[0000] Calling mem_process_seqs.., task: 1563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512927, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 438, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (591.15, 491.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 398.590 CPU sec, 22.332 real sec
[0000] Calling mem_process_seqs.., task: 1564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 513194, 6, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 399.057 CPU sec, 22.393 real sec
[0000] Calling mem_process_seqs.., task: 1565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206154
	[0000][ M::kt_pipeline] read 1206154 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512547, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 374, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6439)
[0000][PE] mean and std.dev: (1097.62, 1298.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.62, 113.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 399.724 CPU sec, 22.378 real sec
[0000] Calling mem_process_seqs.., task: 1566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513394, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 675, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (647.63, 497.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1560, 2357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5337)
[0000][PE] mean and std.dev: (1570.55, 989.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206154 reads in 400.543 CPU sec, 22.412 real sec
[0000] Calling mem_process_seqs.., task: 1567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513046, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 915, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (1102.46, 844.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1275, 2661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5935)
[0000][PE] mean and std.dev: (1602.06, 890.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 395.860 CPU sec, 22.169 real sec
[0000] Calling mem_process_seqs.., task: 1568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512638, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 1287, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6800)
[0000][PE] mean and std.dev: (1528.15, 1437.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 400.467 CPU sec, 22.442 real sec
[0000] Calling mem_process_seqs.., task: 1569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512876, 5, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1326, 1417, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3861)
[0000][PE] mean and std.dev: (1744.79, 858.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5178)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 401.654 CPU sec, 22.522 real sec
[0000] Calling mem_process_seqs.., task: 1570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512856, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 351, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4227)
[0000][PE] mean and std.dev: (929.36, 931.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 396.496 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 1571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512454, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 365, 516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1090)
[0000][PE] mean and std.dev: (293.36, 141.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 398.525 CPU sec, 22.305 real sec
[0000] Calling mem_process_seqs.., task: 1572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512665, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 902, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (879.83, 816.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1043, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5774)
[0000][PE] mean and std.dev: (1534.11, 1494.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 399.008 CPU sec, 22.373 real sec
[0000] Calling mem_process_seqs.., task: 1573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512857, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 436, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5744)
[0000][PE] mean and std.dev: (1447.85, 1801.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 397.645 CPU sec, 22.257 real sec
[0000] Calling mem_process_seqs.., task: 1574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512838, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 403, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (867.14, 1014.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.46, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 397.279 CPU sec, 22.291 real sec
[0000] Calling mem_process_seqs.., task: 1575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512960, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 1250, 3378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9190)
[0000][PE] mean and std.dev: (1921.08, 1908.32)
[0000][PE] low and high boundaries for proper pairs: (1, 12096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 399.303 CPU sec, 22.375 real sec
[0000] Calling mem_process_seqs.., task: 1576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512885, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 641, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5538)
[0000][PE] mean and std.dev: (1332.67, 1537.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (683, 1141, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (1282.50, 721.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 400.824 CPU sec, 22.479 real sec
[0000] Calling mem_process_seqs.., task: 1577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512931, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 434, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2044)
[0000][PE] mean and std.dev: (541.36, 361.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 399.389 CPU sec, 22.385 real sec
[0000] Calling mem_process_seqs.., task: 1578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512917, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 323, 447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 887)
[0000][PE] mean and std.dev: (303.07, 116.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1395, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3260)
[0000][PE] mean and std.dev: (1423.36, 617.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 398.229 CPU sec, 22.285 real sec
[0000] Calling mem_process_seqs.., task: 1579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512701, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 479, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4345)
[0000][PE] mean and std.dev: (811.47, 827.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 404.613 CPU sec, 22.652 real sec
[0000] Calling mem_process_seqs.., task: 1580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512839, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1248, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3562)
[0000][PE] mean and std.dev: (1211.70, 914.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1398, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3808)
[0000][PE] mean and std.dev: (1226.20, 627.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 400.749 CPU sec, 22.454 real sec
[0000] Calling mem_process_seqs.., task: 1581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512908, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 836, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (845.22, 705.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1291, 2058, 3660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8398)
[0000][PE] mean and std.dev: (2289.42, 1424.95)
[0000][PE] low and high boundaries for proper pairs: (1, 10767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 397.155 CPU sec, 22.244 real sec
[0000] Calling mem_process_seqs.., task: 1582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512934, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 786, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4158)
[0000][PE] mean and std.dev: (1063.94, 967.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1455, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5627)
[0000][PE] mean and std.dev: (1590.17, 1003.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 395.136 CPU sec, 22.159 real sec
[0000] Calling mem_process_seqs.., task: 1583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512920, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 478, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (781.00, 921.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 397.409 CPU sec, 22.293 real sec
[0000] Calling mem_process_seqs.., task: 1584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512649, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.61, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1049, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (1421.73, 1050.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6544)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 398.534 CPU sec, 22.363 real sec
[0000] Calling mem_process_seqs.., task: 1585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513023, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 1145, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3994)
[0000][PE] mean and std.dev: (1023.50, 596.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.35, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 399.208 CPU sec, 22.360 real sec
[0000] Calling mem_process_seqs.., task: 1586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206116
	[0000][ M::kt_pipeline] read 1206116 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513234, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 728, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3907)
[0000][PE] mean and std.dev: (1052.74, 963.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 397.451 CPU sec, 22.253 real sec
[0000] Calling mem_process_seqs.., task: 1587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512305, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.29, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1451, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (1377.67, 738.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206116 reads in 398.315 CPU sec, 22.336 real sec
[0000] Calling mem_process_seqs.., task: 1588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513408, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 364, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2886)
[0000][PE] mean and std.dev: (558.33, 470.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.46, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 1692, 2997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6481)
[0000][PE] mean and std.dev: (2021.77, 1018.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 396.393 CPU sec, 22.250 real sec
[0000] Calling mem_process_seqs.., task: 1589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513106, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 1134, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3119)
[0000][PE] mean and std.dev: (761.44, 479.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.50, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 400.892 CPU sec, 22.481 real sec
[0000] Calling mem_process_seqs.., task: 1590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512737, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (521, 670, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2465)
[0000][PE] mean and std.dev: (849.64, 550.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 401.179 CPU sec, 22.459 real sec
[0000] Calling mem_process_seqs.., task: 1591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206074
	[0000][ M::kt_pipeline] read 1206074 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512877, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 369, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2411)
[0000][PE] mean and std.dev: (595.22, 608.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1322, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4342)
[0000][PE] mean and std.dev: (1347.75, 753.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 397.186 CPU sec, 22.268 real sec
[0000] Calling mem_process_seqs.., task: 1592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512894, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.64, 113.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1478, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (1401.42, 657.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206074 reads in 400.188 CPU sec, 22.434 real sec
[0000] Calling mem_process_seqs.., task: 1593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512976, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 1062, 2639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7285)
[0000][PE] mean and std.dev: (1565.60, 1737.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 399.792 CPU sec, 22.439 real sec
[0000] Calling mem_process_seqs.., task: 1594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512508, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 353, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2820)
[0000][PE] mean and std.dev: (409.38, 289.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 406.478 CPU sec, 22.835 real sec
[0000] Calling mem_process_seqs.., task: 1595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512638, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 728, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5073)
[0000][PE] mean and std.dev: (1097.40, 984.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 397.655 CPU sec, 22.347 real sec
[0000] Calling mem_process_seqs.., task: 1596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512637, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 408, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5300)
[0000][PE] mean and std.dev: (978.67, 935.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 398.698 CPU sec, 22.326 real sec
[0000] Calling mem_process_seqs.., task: 1597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512556, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (480, 888, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2364)
[0000][PE] mean and std.dev: (823.00, 497.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.65, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 398.766 CPU sec, 22.391 real sec
[0000] Calling mem_process_seqs.., task: 1598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206090
	[0000][ M::kt_pipeline] read 1206090 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512570, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 569, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3223)
[0000][PE] mean and std.dev: (868.64, 833.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.20, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (391, 866, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (971.40, 687.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 400.073 CPU sec, 22.441 real sec
[0000] Calling mem_process_seqs.., task: 1599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512989, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 872, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4977)
[0000][PE] mean and std.dev: (1111.33, 899.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (457, 1182, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4093)
[0000][PE] mean and std.dev: (1250.20, 1017.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206090 reads in 395.809 CPU sec, 22.162 real sec
[0000] Calling mem_process_seqs.., task: 1600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512734, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 305, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (777.46, 802.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 396.346 CPU sec, 22.210 real sec
[0000] Calling mem_process_seqs.., task: 1601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512650, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 486, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2242)
[0000][PE] mean and std.dev: (631.31, 486.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 399.652 CPU sec, 22.390 real sec
[0000] Calling mem_process_seqs.., task: 1602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206122
	[0000][ M::kt_pipeline] read 1206122 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512896, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 386, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (647.47, 578.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1326, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4178)
[0000][PE] mean and std.dev: (1703.79, 1049.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 399.142 CPU sec, 22.432 real sec
[0000] Calling mem_process_seqs.., task: 1603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512641, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 398, 3114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8680)
[0000][PE] mean and std.dev: (1979.85, 2427.80)
[0000][PE] low and high boundaries for proper pairs: (1, 11691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206122 reads in 395.296 CPU sec, 22.129 real sec
[0000] Calling mem_process_seqs.., task: 1604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512234, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 434, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2975)
[0000][PE] mean and std.dev: (616.60, 500.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 400.235 CPU sec, 22.408 real sec
[0000] Calling mem_process_seqs.., task: 1605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512525, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 815, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4378)
[0000][PE] mean and std.dev: (1042.12, 919.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1373, 3643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9399)
[0000][PE] mean and std.dev: (1672.83, 1321.40)
[0000][PE] low and high boundaries for proper pairs: (1, 12277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 398.142 CPU sec, 22.310 real sec
[0000] Calling mem_process_seqs.., task: 1606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512675, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 445, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6214)
[0000][PE] mean and std.dev: (1105.78, 1543.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.63, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 400.206 CPU sec, 22.437 real sec
[0000] Calling mem_process_seqs.., task: 1607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512820, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 450, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2836)
[0000][PE] mean and std.dev: (747.79, 619.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 399.844 CPU sec, 22.417 real sec
[0000] Calling mem_process_seqs.., task: 1608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512392, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 356, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3285)
[0000][PE] mean and std.dev: (683.56, 710.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.62, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1083, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (1106.21, 485.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 397.343 CPU sec, 22.266 real sec
[0000] Calling mem_process_seqs.., task: 1609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206048
	[0000][ M::kt_pipeline] read 1206048 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513040, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 426, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4552)
[0000][PE] mean and std.dev: (981.82, 1012.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.48, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1633, 2370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5140)
[0000][PE] mean and std.dev: (1491.75, 777.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 396.366 CPU sec, 22.190 real sec
[0000] Calling mem_process_seqs.., task: 1610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206098
	[0000][ M::kt_pipeline] read 1206098 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512863, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206048 reads in 399.738 CPU sec, 22.423 real sec
[0000] Calling mem_process_seqs.., task: 1611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512824, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 1000, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3565)
[0000][PE] mean and std.dev: (883.28, 591.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.98, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 1195, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5710)
[0000][PE] mean and std.dev: (1364.13, 966.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206098 reads in 401.396 CPU sec, 22.507 real sec
[0000] Calling mem_process_seqs.., task: 1612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512824, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 242, 705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1875)
[0000][PE] mean and std.dev: (427.62, 470.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 401.335 CPU sec, 22.498 real sec
[0000] Calling mem_process_seqs.., task: 1613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512601, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.63, 113.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 401.427 CPU sec, 22.500 real sec
[0000] Calling mem_process_seqs.., task: 1614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512966, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 261, 347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 701)
[0000][PE] mean and std.dev: (286.13, 131.07)
[0000][PE] low and high boundaries for proper pairs: (1, 878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.59, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1378, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3702)
[0000][PE] mean and std.dev: (1235.90, 511.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 402.827 CPU sec, 22.566 real sec
[0000] Calling mem_process_seqs.., task: 1615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512824, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 658, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2528)
[0000][PE] mean and std.dev: (760.36, 562.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 401.047 CPU sec, 22.488 real sec
[0000] Calling mem_process_seqs.., task: 1616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512725, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 527, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4499)
[0000][PE] mean and std.dev: (962.33, 995.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 398.065 CPU sec, 22.312 real sec
[0000] Calling mem_process_seqs.., task: 1617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512283, 2, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1449, 2303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4851)
[0000][PE] mean and std.dev: (1586.09, 1041.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6125)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 400.440 CPU sec, 22.472 real sec
[0000] Calling mem_process_seqs.., task: 1618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512632, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 940, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5773)
[0000][PE] mean and std.dev: (1327.88, 1433.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 406.118 CPU sec, 22.764 real sec
[0000] Calling mem_process_seqs.., task: 1619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512651, 7, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 1086, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (1085.58, 1074.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.73, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 400.797 CPU sec, 22.532 real sec
[0000] Calling mem_process_seqs.., task: 1620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512959, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 412, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (619.53, 483.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1271, 1665, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (1620.50, 583.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 401.369 CPU sec, 22.463 real sec
[0000] Calling mem_process_seqs.., task: 1621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512739, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 686, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3870)
[0000][PE] mean and std.dev: (848.58, 682.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1393, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (309, 2529)
[0000][PE] mean and std.dev: (1381.55, 258.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 399.705 CPU sec, 22.391 real sec
[0000] Calling mem_process_seqs.., task: 1622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513451, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 427, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2365)
[0000][PE] mean and std.dev: (560.70, 340.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 396.437 CPU sec, 22.189 real sec
[0000] Calling mem_process_seqs.., task: 1623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512860, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 540, 2505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6799)
[0000][PE] mean and std.dev: (1272.60, 1307.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 398.899 CPU sec, 22.389 real sec
[0000] Calling mem_process_seqs.., task: 1624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512374, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 433, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (694.33, 513.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 401.187 CPU sec, 22.484 real sec
[0000] Calling mem_process_seqs.., task: 1625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512741, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 392, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2925)
[0000][PE] mean and std.dev: (683.10, 585.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.02, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1624, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5101)
[0000][PE] mean and std.dev: (1689.10, 1027.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 399.204 CPU sec, 22.375 real sec
[0000] Calling mem_process_seqs.., task: 1626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513257, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 753, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2539)
[0000][PE] mean and std.dev: (596.50, 390.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.64, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 398.136 CPU sec, 22.326 real sec
[0000] Calling mem_process_seqs.., task: 1627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512823, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 681, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2304)
[0000][PE] mean and std.dev: (588.42, 369.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1221, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4078)
[0000][PE] mean and std.dev: (1281.60, 628.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 399.656 CPU sec, 22.382 real sec
[0000] Calling mem_process_seqs.., task: 1628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513185, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 1197, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (1106.35, 905.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 400.187 CPU sec, 22.444 real sec
[0000] Calling mem_process_seqs.., task: 1629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513135, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 815, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5292)
[0000][PE] mean and std.dev: (1137.12, 1049.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 397.905 CPU sec, 22.301 real sec
[0000] Calling mem_process_seqs.., task: 1630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512895, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 704, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (993.14, 915.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 394.779 CPU sec, 22.148 real sec
[0000] Calling mem_process_seqs.., task: 1631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512626, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 400, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1531)
[0000][PE] mean and std.dev: (386.50, 167.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 402.677 CPU sec, 22.599 real sec
[0000] Calling mem_process_seqs.., task: 1632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512933, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 360, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2649)
[0000][PE] mean and std.dev: (607.60, 696.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 400.172 CPU sec, 22.476 real sec
[0000] Calling mem_process_seqs.., task: 1633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513520, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 339, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2388)
[0000][PE] mean and std.dev: (381.55, 252.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 397.189 CPU sec, 22.269 real sec
[0000] Calling mem_process_seqs.., task: 1634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512857, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 270, 354)
[0000][PE] low and high boundaries for computing mean and std.dev: (33, 568)
[0000][PE] mean and std.dev: (279.75, 53.35)
[0000][PE] low and high boundaries for proper pairs: (1, 675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 1220, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (896.17, 559.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 401.757 CPU sec, 22.507 real sec
[0000] Calling mem_process_seqs.., task: 1635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512882, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 327, 491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 923)
[0000][PE] mean and std.dev: (394.30, 170.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 397.633 CPU sec, 22.283 real sec
[0000] Calling mem_process_seqs.., task: 1636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512782, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.32, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (637, 882, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3061)
[0000][PE] mean and std.dev: (954.89, 626.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3869)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 398.939 CPU sec, 22.339 real sec
[0000] Calling mem_process_seqs.., task: 1637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512936, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 459, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2494)
[0000][PE] mean and std.dev: (657.00, 514.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.68, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 2135, 3956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9678)
[0000][PE] mean and std.dev: (2609.00, 1773.34)
[0000][PE] low and high boundaries for proper pairs: (1, 12539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 396.488 CPU sec, 22.220 real sec
[0000] Calling mem_process_seqs.., task: 1638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512850, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 717, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2692)
[0000][PE] mean and std.dev: (628.91, 550.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 400.836 CPU sec, 22.459 real sec
[0000] Calling mem_process_seqs.., task: 1639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206048
	[0000][ M::kt_pipeline] read 1206048 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513010, 2, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 397.449 CPU sec, 22.251 real sec
[0000] Calling mem_process_seqs.., task: 1640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512792, 3, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206048 reads in 399.170 CPU sec, 22.425 real sec
[0000] Calling mem_process_seqs.., task: 1641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512481, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 406, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (826.93, 705.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 399.875 CPU sec, 22.428 real sec
[0000] Calling mem_process_seqs.., task: 1642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513108, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 344, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3078)
[0000][PE] mean and std.dev: (548.56, 407.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 397.586 CPU sec, 22.281 real sec
[0000] Calling mem_process_seqs.., task: 1643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512648, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 527, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4046)
[0000][PE] mean and std.dev: (618.08, 557.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1162, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3578)
[0000][PE] mean and std.dev: (1455.45, 743.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 397.409 CPU sec, 22.241 real sec
[0000] Calling mem_process_seqs.., task: 1644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512483, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 379, 649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1563)
[0000][PE] mean and std.dev: (420.35, 320.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1280, 2636, 3274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7262)
[0000][PE] mean and std.dev: (2228.60, 1013.14)
[0000][PE] low and high boundaries for proper pairs: (1, 9256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 404.451 CPU sec, 22.674 real sec
[0000] Calling mem_process_seqs.., task: 1645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512153, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 389, 747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1615)
[0000][PE] mean and std.dev: (443.90, 295.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 400.014 CPU sec, 22.396 real sec
[0000] Calling mem_process_seqs.., task: 1646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512742, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 391, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5030)
[0000][PE] mean and std.dev: (632.32, 661.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 401.977 CPU sec, 22.494 real sec
[0000] Calling mem_process_seqs.., task: 1647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512595, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 307, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1957)
[0000][PE] mean and std.dev: (459.50, 375.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (329, 1065, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4310)
[0000][PE] mean and std.dev: (971.08, 666.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 401.319 CPU sec, 22.481 real sec
[0000] Calling mem_process_seqs.., task: 1648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512957, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 746, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3879)
[0000][PE] mean and std.dev: (793.00, 606.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.37, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 398.128 CPU sec, 22.287 real sec
[0000] Calling mem_process_seqs.., task: 1649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512513, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 674, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4502)
[0000][PE] mean and std.dev: (968.21, 798.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.31, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 397.742 CPU sec, 22.275 real sec
[0000] Calling mem_process_seqs.., task: 1650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513367, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 720, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3765)
[0000][PE] mean and std.dev: (680.50, 487.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 399.979 CPU sec, 22.393 real sec
[0000] Calling mem_process_seqs.., task: 1651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513002, 5, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 644, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4377)
[0000][PE] mean and std.dev: (963.82, 863.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 398.154 CPU sec, 22.291 real sec
[0000] Calling mem_process_seqs.., task: 1652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512777, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 863, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4725)
[0000][PE] mean and std.dev: (827.33, 629.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 399.741 CPU sec, 22.437 real sec
[0000] Calling mem_process_seqs.., task: 1653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513160, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 644, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3866)
[0000][PE] mean and std.dev: (936.08, 978.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 394.247 CPU sec, 22.099 real sec
[0000] Calling mem_process_seqs.., task: 1654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513060, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 345, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1217)
[0000][PE] mean and std.dev: (427.83, 349.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.54, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1475, 3605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8673)
[0000][PE] mean and std.dev: (2228.91, 1837.24)
[0000][PE] low and high boundaries for proper pairs: (1, 11207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 398.908 CPU sec, 22.356 real sec
[0000] Calling mem_process_seqs.., task: 1655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512949, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 671, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5745)
[0000][PE] mean and std.dev: (1468.57, 1688.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.01, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 399.584 CPU sec, 22.391 real sec
[0000] Calling mem_process_seqs.., task: 1656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512512, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 358, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5182)
[0000][PE] mean and std.dev: (959.86, 961.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 399.980 CPU sec, 22.409 real sec
[0000] Calling mem_process_seqs.., task: 1657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513173, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 561, 949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2085)
[0000][PE] mean and std.dev: (484.25, 223.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.67, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 396.224 CPU sec, 22.193 real sec
[0000] Calling mem_process_seqs.., task: 1658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512346, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 585, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3881)
[0000][PE] mean and std.dev: (865.00, 613.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 399.719 CPU sec, 22.406 real sec
[0000] Calling mem_process_seqs.., task: 1659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 513144, 0, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 398.280 CPU sec, 22.360 real sec
[0000] Calling mem_process_seqs.., task: 1660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512870, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.40, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 394.132 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 1661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512563, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 1207, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5875)
[0000][PE] mean and std.dev: (1358.93, 1255.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1241, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (1233.77, 445.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 397.159 CPU sec, 22.245 real sec
[0000] Calling mem_process_seqs.., task: 1662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512441, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 898, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (877.73, 685.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1096, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2407)
[0000][PE] mean and std.dev: (1041.25, 304.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 396.823 CPU sec, 22.272 real sec
[0000] Calling mem_process_seqs.., task: 1663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512375, 5, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 401.433 CPU sec, 22.499 real sec
[0000] Calling mem_process_seqs.., task: 1664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512441, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 359, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1665)
[0000][PE] mean and std.dev: (366.33, 351.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.35, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 401.317 CPU sec, 22.516 real sec
[0000] Calling mem_process_seqs.., task: 1665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512779, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 450, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (777.33, 521.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.62, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 398.141 CPU sec, 22.330 real sec
[0000] Calling mem_process_seqs.., task: 1666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512913, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (479, 1311, 2811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7475)
[0000][PE] mean and std.dev: (1306.87, 1008.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 397.713 CPU sec, 22.320 real sec
[0000] Calling mem_process_seqs.., task: 1667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512560, 1, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 398.291 CPU sec, 22.317 real sec
[0000] Calling mem_process_seqs.., task: 1668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512478, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 878, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4625)
[0000][PE] mean and std.dev: (908.05, 646.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1351, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (1166.55, 679.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 397.456 CPU sec, 22.251 real sec
[0000] Calling mem_process_seqs.., task: 1669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513234, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (868, 1252, 2329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5251)
[0000][PE] mean and std.dev: (1626.12, 1216.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 399.994 CPU sec, 22.399 real sec
[0000] Calling mem_process_seqs.., task: 1670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512928, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 410, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2188)
[0000][PE] mean and std.dev: (666.21, 622.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.47, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 396.816 CPU sec, 22.249 real sec
[0000] Calling mem_process_seqs.., task: 1671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512588, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 380, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (651.50, 511.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.53, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 398.597 CPU sec, 22.339 real sec
[0000] Calling mem_process_seqs.., task: 1672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512732, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 1039, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (981.42, 706.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 395.265 CPU sec, 22.146 real sec
[0000] Calling mem_process_seqs.., task: 1673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206070
	[0000][ M::kt_pipeline] read 1206070 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512451, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 389, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3357)
[0000][PE] mean and std.dev: (646.35, 579.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 399.300 CPU sec, 22.365 real sec
[0000] Calling mem_process_seqs.., task: 1674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512979, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 385, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2161)
[0000][PE] mean and std.dev: (427.50, 288.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1618, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5990)
[0000][PE] mean and std.dev: (1735.75, 900.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206070 reads in 398.832 CPU sec, 22.320 real sec
[0000] Calling mem_process_seqs.., task: 1675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512773, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 642, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3352)
[0000][PE] mean and std.dev: (786.80, 523.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.54, 113.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1256, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3229)
[0000][PE] mean and std.dev: (1277.40, 591.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 399.187 CPU sec, 22.382 real sec
[0000] Calling mem_process_seqs.., task: 1676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206076
	[0000][ M::kt_pipeline] read 1206076 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512853, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 351, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (687.14, 605.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1634, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (1528.50, 599.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 395.384 CPU sec, 22.200 real sec
[0000] Calling mem_process_seqs.., task: 1677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512723, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (492, 773, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6324)
[0000][PE] mean and std.dev: (1212.00, 1317.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206076 reads in 399.388 CPU sec, 22.389 real sec
[0000] Calling mem_process_seqs.., task: 1678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512853, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 396.915 CPU sec, 22.250 real sec
[0000] Calling mem_process_seqs.., task: 1679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512234, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 404, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (699.00, 596.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 400.912 CPU sec, 22.463 real sec
[0000] Calling mem_process_seqs.., task: 1680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513038, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1300, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (1210.56, 419.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3910)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 396.279 CPU sec, 22.200 real sec
[0000] Calling mem_process_seqs.., task: 1681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512763, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 440, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2791)
[0000][PE] mean and std.dev: (678.42, 596.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 403.695 CPU sec, 22.672 real sec
[0000] Calling mem_process_seqs.., task: 1682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512724, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 523, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3244)
[0000][PE] mean and std.dev: (752.00, 658.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1400, 2863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6591)
[0000][PE] mean and std.dev: (1956.91, 1685.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 399.011 CPU sec, 22.347 real sec
[0000] Calling mem_process_seqs.., task: 1683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512661, 2, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 544, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4155)
[0000][PE] mean and std.dev: (538.00, 380.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 400.291 CPU sec, 22.481 real sec
[0000] Calling mem_process_seqs.., task: 1684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512787, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 441, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (858.92, 1015.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 404.475 CPU sec, 22.684 real sec
[0000] Calling mem_process_seqs.., task: 1685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512501, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 407, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2238)
[0000][PE] mean and std.dev: (596.58, 528.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1313, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3233)
[0000][PE] mean and std.dev: (1168.44, 423.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 399.215 CPU sec, 22.332 real sec
[0000] Calling mem_process_seqs.., task: 1686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206048
	[0000][ M::kt_pipeline] read 1206048 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512357, 1, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1264, 3003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7207)
[0000][PE] mean and std.dev: (2041.80, 1406.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9309)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 398.942 CPU sec, 22.336 real sec
[0000] Calling mem_process_seqs.., task: 1687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512677, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 261, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 866)
[0000][PE] mean and std.dev: (228.22, 88.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.67, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 608, 4729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13537)
[0000][PE] mean and std.dev: (2357.75, 3051.43)
[0000][PE] low and high boundaries for proper pairs: (1, 17941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206048 reads in 398.026 CPU sec, 22.331 real sec
[0000] Calling mem_process_seqs.., task: 1688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512801, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.51, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1473, 1686, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (701, 2631)
[0000][PE] mean and std.dev: (1533.11, 385.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3077)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 399.084 CPU sec, 22.346 real sec
[0000] Calling mem_process_seqs.., task: 1689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513059, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 398, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (721.84, 655.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.90, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 398.187 CPU sec, 22.373 real sec
[0000] Calling mem_process_seqs.., task: 1690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513225, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 398.174 CPU sec, 22.330 real sec
[0000] Calling mem_process_seqs.., task: 1691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206146
	[0000][ M::kt_pipeline] read 1206146 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512803, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 918, 2785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7509)
[0000][PE] mean and std.dev: (1403.55, 1264.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (514, 1254, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3337)
[0000][PE] mean and std.dev: (1177.93, 693.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 399.635 CPU sec, 22.394 real sec
[0000] Calling mem_process_seqs.., task: 1692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512481, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 525, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (910.91, 778.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1238, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (215, 2410)
[0000][PE] mean and std.dev: (1249.60, 369.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206146 reads in 400.360 CPU sec, 22.464 real sec
[0000] Calling mem_process_seqs.., task: 1693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513052, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 367, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2079)
[0000][PE] mean and std.dev: (563.07, 481.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 399.777 CPU sec, 22.400 real sec
[0000] Calling mem_process_seqs.., task: 1694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513055, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 311, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1846)
[0000][PE] mean and std.dev: (425.00, 376.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 397.727 CPU sec, 22.248 real sec
[0000] Calling mem_process_seqs.., task: 1695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512730, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 370, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2436)
[0000][PE] mean and std.dev: (634.18, 519.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 402.472 CPU sec, 22.502 real sec
[0000] Calling mem_process_seqs.., task: 1696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512876, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 1865, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6054)
[0000][PE] mean and std.dev: (1533.70, 1486.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.25, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 396.594 CPU sec, 22.252 real sec
[0000] Calling mem_process_seqs.., task: 1697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512848, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 693, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4064)
[0000][PE] mean and std.dev: (840.73, 701.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 396.927 CPU sec, 22.232 real sec
[0000] Calling mem_process_seqs.., task: 1698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512998, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 356, 530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1246)
[0000][PE] mean and std.dev: (304.33, 206.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 399.215 CPU sec, 22.378 real sec
[0000] Calling mem_process_seqs.., task: 1699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513176, 3, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 315, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1652)
[0000][PE] mean and std.dev: (481.00, 394.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 399.014 CPU sec, 22.355 real sec
[0000] Calling mem_process_seqs.., task: 1700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512601, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 385, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1188)
[0000][PE] mean and std.dev: (411.56, 259.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.49, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (578, 977, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (943.50, 554.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 399.756 CPU sec, 22.409 real sec
[0000] Calling mem_process_seqs.., task: 1701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512897, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 488, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2735)
[0000][PE] mean and std.dev: (633.08, 467.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 401.440 CPU sec, 22.499 real sec
[0000] Calling mem_process_seqs.., task: 1702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513028, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 602, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1303)
[0000][PE] mean and std.dev: (480.62, 146.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1369, 1722, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (625, 2485)
[0000][PE] mean and std.dev: (1522.14, 285.13)
[0000][PE] low and high boundaries for proper pairs: (253, 2857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 406.414 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 1703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513078, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 832, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4708)
[0000][PE] mean and std.dev: (1236.23, 1059.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 397.743 CPU sec, 22.294 real sec
[0000] Calling mem_process_seqs.., task: 1704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512558, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 451, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6894)
[0000][PE] mean and std.dev: (1135.92, 1367.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.91, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 402.140 CPU sec, 22.541 real sec
[0000] Calling mem_process_seqs.., task: 1705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512364, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 459, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2085)
[0000][PE] mean and std.dev: (618.45, 518.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1220, 1338, 3174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7082)
[0000][PE] mean and std.dev: (2066.58, 1764.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 399.967 CPU sec, 22.400 real sec
[0000] Calling mem_process_seqs.., task: 1706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512928, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 884, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (995.35, 631.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1429, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (1798.64, 1208.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 398.485 CPU sec, 22.360 real sec
[0000] Calling mem_process_seqs.., task: 1707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512789, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 313, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2248)
[0000][PE] mean and std.dev: (564.79, 525.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 399.767 CPU sec, 22.416 real sec
[0000] Calling mem_process_seqs.., task: 1708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512509, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 733, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4780)
[0000][PE] mean and std.dev: (1189.18, 1106.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1379, 7118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19286)
[0000][PE] mean and std.dev: (3481.00, 3305.70)
[0000][PE] low and high boundaries for proper pairs: (1, 25370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 399.042 CPU sec, 22.343 real sec
[0000] Calling mem_process_seqs.., task: 1709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512794, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 338, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3114)
[0000][PE] mean and std.dev: (521.18, 493.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 401.657 CPU sec, 22.486 real sec
[0000] Calling mem_process_seqs.., task: 1710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513177, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (798, 1109, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5922)
[0000][PE] mean and std.dev: (1469.14, 1225.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 400.241 CPU sec, 22.451 real sec
[0000] Calling mem_process_seqs.., task: 1711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513179, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 385, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2693)
[0000][PE] mean and std.dev: (554.38, 413.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.53, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 397.518 CPU sec, 22.276 real sec
[0000] Calling mem_process_seqs.., task: 1712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513200, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 348, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2758)
[0000][PE] mean and std.dev: (618.50, 517.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1548, 2572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5998)
[0000][PE] mean and std.dev: (1798.18, 1339.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 397.173 CPU sec, 22.294 real sec
[0000] Calling mem_process_seqs.., task: 1713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513333, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (470, 1017, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6209)
[0000][PE] mean and std.dev: (1514.31, 1452.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 396.324 CPU sec, 22.232 real sec
[0000] Calling mem_process_seqs.., task: 1714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512647, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1601, 2745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5807)
[0000][PE] mean and std.dev: (1872.91, 1100.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7338)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 399.057 CPU sec, 22.343 real sec
[0000] Calling mem_process_seqs.., task: 1715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512648, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 400.120 CPU sec, 22.435 real sec
[0000] Calling mem_process_seqs.., task: 1716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512475, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 448, 594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1454)
[0000][PE] mean and std.dev: (393.09, 357.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 400.697 CPU sec, 22.485 real sec
[0000] Calling mem_process_seqs.., task: 1717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206054
	[0000][ M::kt_pipeline] read 1206054 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512889, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 931, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4845)
[0000][PE] mean and std.dev: (1035.69, 696.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.99, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1171, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (1415.17, 668.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 399.389 CPU sec, 22.410 real sec
[0000] Calling mem_process_seqs.., task: 1718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512672, 0, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 535, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (539.45, 348.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206054 reads in 399.920 CPU sec, 22.384 real sec
[0000] Calling mem_process_seqs.., task: 1719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513192, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 320, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (753.70, 763.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 397.945 CPU sec, 22.282 real sec
[0000] Calling mem_process_seqs.., task: 1720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513214, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 1135, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (1082.00, 1062.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 396.175 CPU sec, 22.182 real sec
[0000] Calling mem_process_seqs.., task: 1721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512810, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 565, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (888.69, 784.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 398.828 CPU sec, 22.313 real sec
[0000] Calling mem_process_seqs.., task: 1722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512725, 2, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (537, 746, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (877.08, 531.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.26, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 396.704 CPU sec, 22.198 real sec
[0000] Calling mem_process_seqs.., task: 1723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512875, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 466, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2145)
[0000][PE] mean and std.dev: (616.83, 554.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 404.334 CPU sec, 22.634 real sec
[0000] Calling mem_process_seqs.., task: 1724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512362, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 576, 3079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8605)
[0000][PE] mean and std.dev: (1297.69, 1335.74)
[0000][PE] low and high boundaries for proper pairs: (1, 11368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1405, 3345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8193)
[0000][PE] mean and std.dev: (2157.27, 1647.49)
[0000][PE] low and high boundaries for proper pairs: (1, 10617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 401.664 CPU sec, 22.505 real sec
[0000] Calling mem_process_seqs.., task: 1725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513012, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (710, 1239, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5798)
[0000][PE] mean and std.dev: (1430.87, 1023.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 397.874 CPU sec, 22.281 real sec
[0000] Calling mem_process_seqs.., task: 1726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512938, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 344, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2836)
[0000][PE] mean and std.dev: (611.75, 585.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1002, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3042)
[0000][PE] mean and std.dev: (1019.79, 417.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 397.132 CPU sec, 22.255 real sec
[0000] Calling mem_process_seqs.., task: 1727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512663, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 356, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6020)
[0000][PE] mean and std.dev: (1334.64, 1401.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.45, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 401.297 CPU sec, 22.456 real sec
[0000] Calling mem_process_seqs.., task: 1728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512584, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 902, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4760)
[0000][PE] mean and std.dev: (1280.72, 1049.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1505, 3106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7408)
[0000][PE] mean and std.dev: (1924.69, 1423.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 396.921 CPU sec, 22.227 real sec
[0000] Calling mem_process_seqs.., task: 1729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512501, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 468, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5846)
[0000][PE] mean and std.dev: (1198.31, 1402.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1453, 1596, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (1711.00, 579.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 397.638 CPU sec, 22.282 real sec
[0000] Calling mem_process_seqs.., task: 1730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512994, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 374, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2854)
[0000][PE] mean and std.dev: (603.50, 636.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (524, 837, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2906)
[0000][PE] mean and std.dev: (886.58, 492.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 397.950 CPU sec, 22.281 real sec
[0000] Calling mem_process_seqs.., task: 1731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513062, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 1030, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4912)
[0000][PE] mean and std.dev: (1054.09, 686.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.31, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 398.924 CPU sec, 22.396 real sec
[0000] Calling mem_process_seqs.., task: 1732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512705, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1402, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6179)
[0000][PE] mean and std.dev: (1361.40, 1182.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 408.541 CPU sec, 22.872 real sec
[0000] Calling mem_process_seqs.., task: 1733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512978, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 447, 709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1455)
[0000][PE] mean and std.dev: (548.92, 356.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 398.145 CPU sec, 22.285 real sec
[0000] Calling mem_process_seqs.., task: 1734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512678, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 352, 714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1500)
[0000][PE] mean and std.dev: (498.06, 351.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.67, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1225, 1995, 3028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6634)
[0000][PE] mean and std.dev: (1787.60, 974.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 399.218 CPU sec, 22.385 real sec
[0000] Calling mem_process_seqs.., task: 1735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512571, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 446, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4797)
[0000][PE] mean and std.dev: (933.38, 878.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 397.774 CPU sec, 22.308 real sec
[0000] Calling mem_process_seqs.., task: 1736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512930, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 486, 644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1452)
[0000][PE] mean and std.dev: (406.50, 205.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 406.011 CPU sec, 22.753 real sec
[0000] Calling mem_process_seqs.., task: 1737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512337, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 529, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5101)
[0000][PE] mean and std.dev: (798.92, 898.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 394.462 CPU sec, 22.119 real sec
[0000] Calling mem_process_seqs.., task: 1738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512550, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 491, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (855.00, 856.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.70, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 398.198 CPU sec, 22.312 real sec
[0000] Calling mem_process_seqs.., task: 1739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513214, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 1063, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (990.83, 888.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 1657, 6580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18340)
[0000][PE] mean and std.dev: (2682.75, 2649.19)
[0000][PE] low and high boundaries for proper pairs: (1, 24220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 405.345 CPU sec, 22.701 real sec
[0000] Calling mem_process_seqs.., task: 1740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512385, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 753, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (849.38, 835.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (385, 2490, 2892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7906)
[0000][PE] mean and std.dev: (1827.00, 1145.99)
[0000][PE] low and high boundaries for proper pairs: (1, 10413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 397.501 CPU sec, 22.264 real sec
[0000] Calling mem_process_seqs.., task: 1741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513120, 4, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 393.183 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 1742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206040
	[0000][ M::kt_pipeline] read 1206040 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513090, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 1360, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6586)
[0000][PE] mean and std.dev: (1369.56, 1183.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1119, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2387)
[0000][PE] mean and std.dev: (1091.60, 542.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 398.162 CPU sec, 22.308 real sec
[0000] Calling mem_process_seqs.., task: 1743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512544, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 352, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4062)
[0000][PE] mean and std.dev: (653.31, 887.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206040 reads in 398.927 CPU sec, 22.334 real sec
[0000] Calling mem_process_seqs.., task: 1744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513152, 10, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 329, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1957)
[0000][PE] mean and std.dev: (566.07, 501.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (88, 1716, 4348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12868)
[0000][PE] mean and std.dev: (1985.70, 2238.28)
[0000][PE] low and high boundaries for proper pairs: (1, 17128)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 404.422 CPU sec, 22.643 real sec
[0000] Calling mem_process_seqs.., task: 1745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513157, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 564, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (885.29, 748.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 396.643 CPU sec, 22.236 real sec
[0000] Calling mem_process_seqs.., task: 1746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512596, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (589, 1397, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5527)
[0000][PE] mean and std.dev: (1634.71, 1345.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1571, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (1523.40, 906.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 400.979 CPU sec, 22.518 real sec
[0000] Calling mem_process_seqs.., task: 1747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512855, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 474, 2770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7470)
[0000][PE] mean and std.dev: (1841.30, 2190.44)
[0000][PE] low and high boundaries for proper pairs: (1, 10603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1392, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3811)
[0000][PE] mean and std.dev: (1327.50, 766.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 397.667 CPU sec, 22.269 real sec
[0000] Calling mem_process_seqs.., task: 1748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512781, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 429, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4192)
[0000][PE] mean and std.dev: (653.73, 724.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 399.056 CPU sec, 22.372 real sec
[0000] Calling mem_process_seqs.., task: 1749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512947, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 286, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (679.17, 774.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.98, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 397.324 CPU sec, 22.281 real sec
[0000] Calling mem_process_seqs.., task: 1750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512950, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 505, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2480)
[0000][PE] mean and std.dev: (604.82, 373.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.63, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1280, 1612, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (270, 2795)
[0000][PE] mean and std.dev: (1507.33, 394.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 398.533 CPU sec, 22.337 real sec
[0000] Calling mem_process_seqs.., task: 1751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512179, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 1212, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5650)
[0000][PE] mean and std.dev: (1455.94, 1393.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 400.443 CPU sec, 22.471 real sec
[0000] Calling mem_process_seqs.., task: 1752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206062
	[0000][ M::kt_pipeline] read 1206062 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513255, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 923, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5855)
[0000][PE] mean and std.dev: (1250.50, 1117.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 399.799 CPU sec, 22.410 real sec
[0000] Calling mem_process_seqs.., task: 1753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512876, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206062 reads in 396.916 CPU sec, 22.285 real sec
[0000] Calling mem_process_seqs.., task: 1754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512796, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 445, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1834)
[0000][PE] mean and std.dev: (517.77, 277.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 397.950 CPU sec, 22.290 real sec
[0000] Calling mem_process_seqs.., task: 1755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512870, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 422, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2709)
[0000][PE] mean and std.dev: (635.25, 718.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.56, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (614, 927, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (1017.75, 765.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 399.314 CPU sec, 22.354 real sec
[0000] Calling mem_process_seqs.., task: 1756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512279, 4, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 400.002 CPU sec, 22.422 real sec
[0000] Calling mem_process_seqs.., task: 1757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 513029, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1520, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (1373.18, 699.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5060)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 396.722 CPU sec, 22.232 real sec
[0000] Calling mem_process_seqs.., task: 1758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513532, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 430, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2961)
[0000][PE] mean and std.dev: (736.33, 664.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.37, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 397.751 CPU sec, 22.280 real sec
[0000] Calling mem_process_seqs.., task: 1759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512992, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 471, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6694)
[0000][PE] mean and std.dev: (1365.55, 1824.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.70, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1001, 2664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6268)
[0000][PE] mean and std.dev: (1625.64, 1158.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 394.947 CPU sec, 22.163 real sec
[0000] Calling mem_process_seqs.., task: 1760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513035, 2, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1334, 2629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5953)
[0000][PE] mean and std.dev: (1790.54, 1242.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7615)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 396.299 CPU sec, 22.209 real sec
[0000] Calling mem_process_seqs.., task: 1761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512913, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 336, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1628)
[0000][PE] mean and std.dev: (454.40, 335.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (410, 1497, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6704)
[0000][PE] mean and std.dev: (1343.80, 930.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 397.397 CPU sec, 22.275 real sec
[0000] Calling mem_process_seqs.., task: 1762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512918, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 406, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2544)
[0000][PE] mean and std.dev: (563.73, 524.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 394.420 CPU sec, 22.074 real sec
[0000] Calling mem_process_seqs.., task: 1763
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512781, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 511, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (575.08, 473.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000296 bp)...
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 397.011 CPU sec, 22.258 real sec
[0000] Calling mem_process_seqs.., task: 1764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512802, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 861, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (1018.55, 854.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1405, 1731, 3110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6520)
[0000][PE] mean and std.dev: (2300.90, 1368.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 393.870 CPU sec, 22.039 real sec
[0000] Calling mem_process_seqs.., task: 1765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512882, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 331, 960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2278)
[0000][PE] mean and std.dev: (552.92, 424.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.99, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1685, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (1677.46, 1116.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 392.903 CPU sec, 21.992 real sec
[0000] Calling mem_process_seqs.., task: 1766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512818, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 480, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3720)
[0000][PE] mean and std.dev: (874.08, 751.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 393.148 CPU sec, 22.022 real sec
[0000] Calling mem_process_seqs.., task: 1767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513436, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 925, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (649.50, 486.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 393.820 CPU sec, 22.048 real sec
[0000] Calling mem_process_seqs.., task: 1768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513005, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (836, 1644, 2288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5192)
[0000][PE] mean and std.dev: (1608.67, 975.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 391.850 CPU sec, 21.965 real sec
[0000] Calling mem_process_seqs.., task: 1769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512985, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 1009, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5905)
[0000][PE] mean and std.dev: (1183.31, 1100.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.40, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1848, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5191)
[0000][PE] mean and std.dev: (1780.50, 772.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 401.022 CPU sec, 22.477 real sec
[0000] Calling mem_process_seqs.., task: 1770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512308, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 284, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3050)
[0000][PE] mean and std.dev: (657.64, 556.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1530, 1673, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1212, 2007)
[0000][PE] mean and std.dev: (1622.38, 121.27)
[0000][PE] low and high boundaries for proper pairs: (1053, 2166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 395.422 CPU sec, 22.145 real sec
[0000] Calling mem_process_seqs.., task: 1771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512979, 7, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 886, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (890.86, 715.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 403.876 CPU sec, 22.663 real sec
[0000] Calling mem_process_seqs.., task: 1772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513000, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 423, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2600)
[0000][PE] mean and std.dev: (473.47, 341.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 392.850 CPU sec, 22.017 real sec
[0000] Calling mem_process_seqs.., task: 1773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512808, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 515, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5588)
[0000][PE] mean and std.dev: (1206.42, 1447.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 403.852 CPU sec, 22.669 real sec
[0000] Calling mem_process_seqs.., task: 1774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512149, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1993, 2829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6337)
[0000][PE] mean and std.dev: (1733.78, 842.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8091)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 394.082 CPU sec, 22.071 real sec
[0000] Calling mem_process_seqs.., task: 1775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 513094, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 524, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3878)
[0000][PE] mean and std.dev: (1039.59, 1013.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 398.507 CPU sec, 22.354 real sec
[0000] Calling mem_process_seqs.., task: 1776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512377, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 281, 479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1057)
[0000][PE] mean and std.dev: (302.50, 153.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (665, 1717, 2408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5894)
[0000][PE] mean and std.dev: (1748.50, 1130.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 396.779 CPU sec, 22.250 real sec
[0000] Calling mem_process_seqs.., task: 1777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512590, 2, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1510, 2957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6979)
[0000][PE] mean and std.dev: (1896.57, 1588.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8990)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 400.774 CPU sec, 22.452 real sec
[0000] Calling mem_process_seqs.., task: 1778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512664, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 432, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2923)
[0000][PE] mean and std.dev: (653.60, 603.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 392.081 CPU sec, 21.975 real sec
[0000] Calling mem_process_seqs.., task: 1779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512797, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (870, 1118, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5649)
[0000][PE] mean and std.dev: (1336.09, 1010.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 396.145 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 1780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513049, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 1044, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (1220.62, 816.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 392.339 CPU sec, 22.006 real sec
[0000] Calling mem_process_seqs.., task: 1781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512740, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 1167, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6289)
[0000][PE] mean and std.dev: (1119.55, 1048.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 398.646 CPU sec, 22.415 real sec
[0000] Calling mem_process_seqs.., task: 1782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513157, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 275, 349)
[0000][PE] low and high boundaries for computing mean and std.dev: (4, 579)
[0000][PE] mean and std.dev: (253.50, 73.76)
[0000][PE] low and high boundaries for proper pairs: (1, 694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 392.802 CPU sec, 22.028 real sec
[0000] Calling mem_process_seqs.., task: 1783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512863, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 839, 3526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10072)
[0000][PE] mean and std.dev: (1715.00, 2046.06)
[0000][PE] low and high boundaries for proper pairs: (1, 13345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 401.132 CPU sec, 22.514 real sec
[0000] Calling mem_process_seqs.., task: 1784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206092
	[0000][ M::kt_pipeline] read 1206092 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512721, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 586, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (577.78, 477.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 395.043 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512459, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1045, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5404)
[0000][PE] mean and std.dev: (1300.00, 1140.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206092 reads in 402.895 CPU sec, 22.599 real sec
[0000] Calling mem_process_seqs.., task: 1786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513149, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 698, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4113)
[0000][PE] mean and std.dev: (1065.36, 975.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 390.039 CPU sec, 21.857 real sec
[0000] Calling mem_process_seqs.., task: 1787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512560, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (457, 754, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4825)
[0000][PE] mean and std.dev: (1108.18, 837.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.97, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1788, 3834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9328)
[0000][PE] mean and std.dev: (2180.42, 1421.45)
[0000][PE] low and high boundaries for proper pairs: (1, 12075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 402.973 CPU sec, 22.600 real sec
[0000] Calling mem_process_seqs.., task: 1788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512588, 2, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 396.826 CPU sec, 22.253 real sec
[0000] Calling mem_process_seqs.., task: 1789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512783, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 1316, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6187)
[0000][PE] mean and std.dev: (1296.80, 1008.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 397.993 CPU sec, 22.390 real sec
[0000] Calling mem_process_seqs.., task: 1790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 513325, 3, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 393.300 CPU sec, 22.045 real sec
[0000] Calling mem_process_seqs.., task: 1791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512881, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 1772, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6769)
[0000][PE] mean and std.dev: (1564.00, 1345.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.91, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (645, 1567, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5226)
[0000][PE] mean and std.dev: (1399.18, 809.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 400.313 CPU sec, 22.419 real sec
[0000] Calling mem_process_seqs.., task: 1792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512796, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 613, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2583)
[0000][PE] mean and std.dev: (702.08, 565.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 398.161 CPU sec, 22.397 real sec
[0000] Calling mem_process_seqs.., task: 1793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512613, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 545, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3433)
[0000][PE] mean and std.dev: (745.90, 650.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 400.618 CPU sec, 22.529 real sec
[0000] Calling mem_process_seqs.., task: 1794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512721, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 1381, 3031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8451)
[0000][PE] mean and std.dev: (1321.25, 1143.38)
[0000][PE] low and high boundaries for proper pairs: (1, 11161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 402.616 CPU sec, 22.604 real sec
[0000] Calling mem_process_seqs.., task: 1795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206006
	[0000][ M::kt_pipeline] read 1206006 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512828, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 813, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (644.30, 467.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 394.730 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512503, 3, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 1089, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (1096.80, 943.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.33, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206006 reads in 401.961 CPU sec, 22.521 real sec
[0000] Calling mem_process_seqs.., task: 1797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513140, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 380, 775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1921)
[0000][PE] mean and std.dev: (432.90, 370.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 394.370 CPU sec, 22.109 real sec
[0000] Calling mem_process_seqs.., task: 1798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512957, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 769, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (616.40, 421.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 397.236 CPU sec, 22.284 real sec
[0000] Calling mem_process_seqs.., task: 1799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513056, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 307, 494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1040)
[0000][PE] mean and std.dev: (287.33, 135.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 394.920 CPU sec, 22.149 real sec
[0000] Calling mem_process_seqs.., task: 1800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512519, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (732, 1703, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6297)
[0000][PE] mean and std.dev: (1553.50, 994.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1304, 2903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6681)
[0000][PE] mean and std.dev: (1602.40, 977.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 403.146 CPU sec, 22.612 real sec
[0000] Calling mem_process_seqs.., task: 1801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206078
	[0000][ M::kt_pipeline] read 1206078 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512987, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 353, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5787)
[0000][PE] mean and std.dev: (817.42, 811.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.63, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (513, 1663, 4312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11910)
[0000][PE] mean and std.dev: (2022.58, 1983.21)
[0000][PE] low and high boundaries for proper pairs: (1, 15709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 395.231 CPU sec, 22.192 real sec
[0000] Calling mem_process_seqs.., task: 1802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512588, 2, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206078 reads in 402.323 CPU sec, 22.541 real sec
[0000] Calling mem_process_seqs.., task: 1803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513203, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 415, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2345)
[0000][PE] mean and std.dev: (645.29, 537.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1346, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (102, 2877)
[0000][PE] mean and std.dev: (1513.45, 493.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3489)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 392.378 CPU sec, 22.044 real sec
[0000] Calling mem_process_seqs.., task: 1804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 512192, 1, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 403.617 CPU sec, 22.615 real sec
[0000] Calling mem_process_seqs.., task: 1805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512602, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 1132, 3077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8341)
[0000][PE] mean and std.dev: (1534.27, 1247.95)
[0000][PE] low and high boundaries for proper pairs: (1, 10973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 398.913 CPU sec, 22.372 real sec
[0000] Calling mem_process_seqs.., task: 1806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512452, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 406, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2155)
[0000][PE] mean and std.dev: (458.00, 221.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1263, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4806)
[0000][PE] mean and std.dev: (1581.31, 995.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 401.425 CPU sec, 22.526 real sec
[0000] Calling mem_process_seqs.., task: 1807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512884, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 311, 835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1927)
[0000][PE] mean and std.dev: (499.55, 388.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 400.018 CPU sec, 22.406 real sec
[0000] Calling mem_process_seqs.., task: 1808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512805, 3, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 398.417 CPU sec, 22.328 real sec
[0000] Calling mem_process_seqs.., task: 1809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512907, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 361, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (638.14, 579.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 398.230 CPU sec, 22.361 real sec
[0000] Calling mem_process_seqs.., task: 1810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512933, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 1159, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3900)
[0000][PE] mean and std.dev: (939.46, 714.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 395.693 CPU sec, 22.182 real sec
[0000] Calling mem_process_seqs.., task: 1811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512237, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 701, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (688.93, 557.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 399.478 CPU sec, 22.403 real sec
[0000] Calling mem_process_seqs.., task: 1812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512686, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 873, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4384)
[0000][PE] mean and std.dev: (966.29, 796.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 399.088 CPU sec, 22.392 real sec
[0000] Calling mem_process_seqs.., task: 1813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512581, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (543, 761, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2523)
[0000][PE] mean and std.dev: (764.58, 472.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 996, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (417, 1587)
[0000][PE] mean and std.dev: (955.20, 213.75)
[0000][PE] low and high boundaries for proper pairs: (100, 1821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 397.033 CPU sec, 22.348 real sec
[0000] Calling mem_process_seqs.., task: 1814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512223, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 1094, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5647)
[0000][PE] mean and std.dev: (1198.67, 1250.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 396.885 CPU sec, 22.248 real sec
[0000] Calling mem_process_seqs.., task: 1815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512839, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 840, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2228)
[0000][PE] mean and std.dev: (737.22, 491.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (380, 717, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2693)
[0000][PE] mean and std.dev: (739.89, 452.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 395.698 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 1816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206096
	[0000][ M::kt_pipeline] read 1206096 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512618, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 396.286 CPU sec, 22.243 real sec
[0000] Calling mem_process_seqs.., task: 1817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206086
	[0000][ M::kt_pipeline] read 1206086 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513514, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 564, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4598)
[0000][PE] mean and std.dev: (844.50, 696.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206096 reads in 396.270 CPU sec, 22.191 real sec
[0000] Calling mem_process_seqs.., task: 1818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513342, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 1691, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6581)
[0000][PE] mean and std.dev: (1545.45, 1060.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.32, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206086 reads in 395.120 CPU sec, 22.156 real sec
[0000] Calling mem_process_seqs.., task: 1819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513176, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 756, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6510)
[0000][PE] mean and std.dev: (1234.15, 1108.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 394.677 CPU sec, 22.091 real sec
[0000] Calling mem_process_seqs.., task: 1820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206132
	[0000][ M::kt_pipeline] read 1206132 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513013, 10, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 355, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5157)
[0000][PE] mean and std.dev: (951.45, 865.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (914, 1155, 3231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7865)
[0000][PE] mean and std.dev: (2022.30, 1833.62)
[0000][PE] low and high boundaries for proper pairs: (1, 10182)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1344, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1420.33, 895.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 396.086 CPU sec, 22.192 real sec
[0000] Calling mem_process_seqs.., task: 1821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512381, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 577, 2957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8327)
[0000][PE] mean and std.dev: (1384.62, 1531.17)
[0000][PE] low and high boundaries for proper pairs: (1, 11012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.48, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206132 reads in 396.139 CPU sec, 22.223 real sec
[0000] Calling mem_process_seqs.., task: 1822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512784, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 1035, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2718)
[0000][PE] mean and std.dev: (752.92, 595.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 396.633 CPU sec, 22.219 real sec
[0000] Calling mem_process_seqs.., task: 1823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512570, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 700, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5108)
[0000][PE] mean and std.dev: (1030.06, 848.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (688, 1161, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (1254.85, 833.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 396.269 CPU sec, 22.234 real sec
[0000] Calling mem_process_seqs.., task: 1824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512887, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 798, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (789.83, 671.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 395.549 CPU sec, 22.144 real sec
[0000] Calling mem_process_seqs.., task: 1825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512796, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 1199, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6201)
[0000][PE] mean and std.dev: (1536.21, 1540.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 401.880 CPU sec, 22.513 real sec
[0000] Calling mem_process_seqs.., task: 1826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513208, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 401, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5584)
[0000][PE] mean and std.dev: (1068.06, 1165.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1251, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4998)
[0000][PE] mean and std.dev: (1461.08, 653.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 393.406 CPU sec, 22.049 real sec
[0000] Calling mem_process_seqs.., task: 1827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512763, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 297, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4812)
[0000][PE] mean and std.dev: (666.82, 691.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 399.230 CPU sec, 22.359 real sec
[0000] Calling mem_process_seqs.., task: 1828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512874, 0, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 316, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2440)
[0000][PE] mean and std.dev: (494.25, 475.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 399.271 CPU sec, 22.391 real sec
[0000] Calling mem_process_seqs.., task: 1829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512669, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 589, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4483)
[0000][PE] mean and std.dev: (903.94, 829.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1437, 2773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6497)
[0000][PE] mean and std.dev: (1915.58, 1546.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 401.308 CPU sec, 22.516 real sec
[0000] Calling mem_process_seqs.., task: 1830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512842, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 1385, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6006)
[0000][PE] mean and std.dev: (1265.06, 1409.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 397.921 CPU sec, 22.283 real sec
[0000] Calling mem_process_seqs.., task: 1831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512573, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (811, 1178, 2869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6985)
[0000][PE] mean and std.dev: (1618.23, 1146.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.34, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1367, 1830, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4802)
[0000][PE] mean and std.dev: (1827.42, 1083.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 398.318 CPU sec, 22.383 real sec
[0000] Calling mem_process_seqs.., task: 1832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512404, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 982, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (1120.25, 1120.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 396.970 CPU sec, 22.231 real sec
[0000] Calling mem_process_seqs.., task: 1833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513017, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 419, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (564.90, 607.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.37, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 396.637 CPU sec, 22.227 real sec
[0000] Calling mem_process_seqs.., task: 1834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512647, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 292, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4796)
[0000][PE] mean and std.dev: (1009.65, 1184.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 398.653 CPU sec, 22.378 real sec
[0000] Calling mem_process_seqs.., task: 1835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512860, 0, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 397, 810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1946)
[0000][PE] mean and std.dev: (422.75, 224.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 395.924 CPU sec, 22.178 real sec
[0000] Calling mem_process_seqs.., task: 1836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513289, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 1015, 2916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7918)
[0000][PE] mean and std.dev: (1293.40, 1115.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 390.610 CPU sec, 21.857 real sec
[0000] Calling mem_process_seqs.., task: 1837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512903, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 1029, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (823.86, 718.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.50, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 404.528 CPU sec, 22.671 real sec
[0000] Calling mem_process_seqs.., task: 1838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512468, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 343, 798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2026)
[0000][PE] mean and std.dev: (468.63, 426.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 400.340 CPU sec, 22.447 real sec
[0000] Calling mem_process_seqs.., task: 1839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512368, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 443, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1733)
[0000][PE] mean and std.dev: (498.40, 334.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 396.867 CPU sec, 22.207 real sec
[0000] Calling mem_process_seqs.., task: 1840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512689, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 512, 3333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9345)
[0000][PE] mean and std.dev: (2013.00, 2530.78)
[0000][PE] low and high boundaries for proper pairs: (1, 12351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.36, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 395.133 CPU sec, 22.157 real sec
[0000] Calling mem_process_seqs.., task: 1841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206108
	[0000][ M::kt_pipeline] read 1206108 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513013, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 797, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6522)
[0000][PE] mean and std.dev: (1200.38, 938.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (426, 784, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2856)
[0000][PE] mean and std.dev: (745.80, 423.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 399.407 CPU sec, 22.409 real sec
[0000] Calling mem_process_seqs.., task: 1842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512770, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 497, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3436)
[0000][PE] mean and std.dev: (662.36, 554.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.75, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1203, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2205)
[0000][PE] mean and std.dev: (1019.85, 394.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206108 reads in 398.786 CPU sec, 22.344 real sec
[0000] Calling mem_process_seqs.., task: 1843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512944, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 685, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (986.36, 1031.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 395.561 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 1844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512801, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 844, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3282)
[0000][PE] mean and std.dev: (765.33, 538.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1134, 2118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4764)
[0000][PE] mean and std.dev: (1381.27, 905.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 396.168 CPU sec, 22.232 real sec
[0000] Calling mem_process_seqs.., task: 1845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513028, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 854, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4160)
[0000][PE] mean and std.dev: (956.33, 785.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1257, 2152, 2726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5664)
[0000][PE] mean and std.dev: (1785.22, 1084.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 396.926 CPU sec, 22.264 real sec
[0000] Calling mem_process_seqs.., task: 1846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512511, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 1193, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4922)
[0000][PE] mean and std.dev: (1125.23, 846.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.51, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 394.725 CPU sec, 22.121 real sec
[0000] Calling mem_process_seqs.., task: 1847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205922
	[0000][ M::kt_pipeline] read 1205922 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512604, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 431, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (649.62, 484.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.21, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 395.005 CPU sec, 22.131 real sec
[0000] Calling mem_process_seqs.., task: 1848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512876, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 667, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (847.19, 840.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205922 reads in 392.917 CPU sec, 22.006 real sec
[0000] Calling mem_process_seqs.., task: 1849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512858, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 445, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (860.62, 720.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 395.337 CPU sec, 22.231 real sec
[0000] Calling mem_process_seqs.., task: 1850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512910, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 511, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6031)
[0000][PE] mean and std.dev: (1078.38, 1109.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.21, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1560, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (1406.70, 667.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 395.241 CPU sec, 22.169 real sec
[0000] Calling mem_process_seqs.., task: 1851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513066, 11, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 1396, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5663)
[0000][PE] mean and std.dev: (1184.80, 957.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (829, 918, 4867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12943)
[0000][PE] mean and std.dev: (2535.09, 2876.50)
[0000][PE] low and high boundaries for proper pairs: (1, 16981)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 396.674 CPU sec, 22.249 real sec
[0000] Calling mem_process_seqs.., task: 1852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206078
	[0000][ M::kt_pipeline] read 1206078 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513316, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 309, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (677.40, 682.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 405.366 CPU sec, 22.703 real sec
[0000] Calling mem_process_seqs.., task: 1853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512960, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 510, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3500)
[0000][PE] mean and std.dev: (907.33, 869.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206078 reads in 395.403 CPU sec, 22.146 real sec
[0000] Calling mem_process_seqs.., task: 1854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512812, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 406, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5734)
[0000][PE] mean and std.dev: (771.92, 761.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.58, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1779, 2850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6478)
[0000][PE] mean and std.dev: (1814.90, 1241.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 395.920 CPU sec, 22.145 real sec
[0000] Calling mem_process_seqs.., task: 1855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512473, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 670, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3649)
[0000][PE] mean and std.dev: (822.80, 813.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1047, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (1224.90, 656.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 398.850 CPU sec, 22.352 real sec
[0000] Calling mem_process_seqs.., task: 1856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512626, 8, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 350, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2784)
[0000][PE] mean and std.dev: (497.00, 502.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 398.721 CPU sec, 22.384 real sec
[0000] Calling mem_process_seqs.., task: 1857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512765, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 396, 2983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8411)
[0000][PE] mean and std.dev: (1655.23, 2029.97)
[0000][PE] low and high boundaries for proper pairs: (1, 11125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 396.061 CPU sec, 22.209 real sec
[0000] Calling mem_process_seqs.., task: 1858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206048
	[0000][ M::kt_pipeline] read 1206048 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512762, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 300, 599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1327)
[0000][PE] mean and std.dev: (272.73, 140.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 398.256 CPU sec, 22.319 real sec
[0000] Calling mem_process_seqs.., task: 1859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512838, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 678, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (938.83, 838.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (572, 1292, 3358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8930)
[0000][PE] mean and std.dev: (1912.23, 1604.23)
[0000][PE] low and high boundaries for proper pairs: (1, 11716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206048 reads in 398.719 CPU sec, 22.326 real sec
[0000] Calling mem_process_seqs.., task: 1860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512484, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 552, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (729.00, 801.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1288, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5376)
[0000][PE] mean and std.dev: (1669.00, 1060.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 397.606 CPU sec, 22.302 real sec
[0000] Calling mem_process_seqs.., task: 1861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512349, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 338, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (692.33, 693.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 398.979 CPU sec, 22.324 real sec
[0000] Calling mem_process_seqs.., task: 1862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512798, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 764, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (1042.11, 890.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.69, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1635, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5201)
[0000][PE] mean and std.dev: (1780.40, 1051.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 403.273 CPU sec, 22.584 real sec
[0000] Calling mem_process_seqs.., task: 1863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513531, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (980, 1543, 3202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7646)
[0000][PE] mean and std.dev: (2146.91, 1697.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.75, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 396.526 CPU sec, 22.222 real sec
[0000] Calling mem_process_seqs.., task: 1864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512412, 5, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 399.622 CPU sec, 22.393 real sec
[0000] Calling mem_process_seqs.., task: 1865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512513, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 415, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2672)
[0000][PE] mean and std.dev: (625.69, 532.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.39, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (471, 1105, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3798)
[0000][PE] mean and std.dev: (1074.60, 624.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 397.791 CPU sec, 22.259 real sec
[0000] Calling mem_process_seqs.., task: 1866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512915, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 415, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4979)
[0000][PE] mean and std.dev: (897.40, 892.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 395.978 CPU sec, 22.201 real sec
[0000] Calling mem_process_seqs.., task: 1867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512513, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 394, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1293)
[0000][PE] mean and std.dev: (362.92, 153.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 395.450 CPU sec, 22.151 real sec
[0000] Calling mem_process_seqs.., task: 1868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513098, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 298, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (842.31, 1143.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 395.443 CPU sec, 22.157 real sec
[0000] Calling mem_process_seqs.., task: 1869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513120, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 793, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (601.33, 401.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.94, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 396.356 CPU sec, 22.252 real sec
[0000] Calling mem_process_seqs.., task: 1870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512779, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 547, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4153)
[0000][PE] mean and std.dev: (642.55, 495.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 396.062 CPU sec, 22.209 real sec
[0000] Calling mem_process_seqs.., task: 1871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512473, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 431, 3576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10332)
[0000][PE] mean and std.dev: (1500.44, 1827.47)
[0000][PE] low and high boundaries for proper pairs: (1, 13710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 394.846 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 1872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512664, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 555, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (716.27, 488.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 397.976 CPU sec, 22.290 real sec
[0000] Calling mem_process_seqs.., task: 1873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513252, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 1015, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3870)
[0000][PE] mean and std.dev: (942.82, 632.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.67, 113.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 396.064 CPU sec, 22.256 real sec
[0000] Calling mem_process_seqs.., task: 1874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512702, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 289, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3442)
[0000][PE] mean and std.dev: (752.20, 810.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.54, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 396.104 CPU sec, 22.223 real sec
[0000] Calling mem_process_seqs.., task: 1875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512760, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1065, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4130)
[0000][PE] mean and std.dev: (1071.80, 1011.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.40, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1806, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6651)
[0000][PE] mean and std.dev: (1592.38, 962.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8620)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 397.125 CPU sec, 22.299 real sec
[0000] Calling mem_process_seqs.., task: 1876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513031, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 387, 801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1795)
[0000][PE] mean and std.dev: (447.33, 266.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1441, 1574, 2956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5986)
[0000][PE] mean and std.dev: (2127.82, 1382.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 394.783 CPU sec, 22.162 real sec
[0000] Calling mem_process_seqs.., task: 1877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512835, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 319, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3894)
[0000][PE] mean and std.dev: (854.77, 1060.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.47, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 395.162 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 1878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206060
	[0000][ M::kt_pipeline] read 1206060 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512965, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 358, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (565.73, 425.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1222, 2807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6991)
[0000][PE] mean and std.dev: (1376.45, 1050.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 396.423 CPU sec, 22.225 real sec
[0000] Calling mem_process_seqs.., task: 1879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512392, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 435, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2508)
[0000][PE] mean and std.dev: (553.07, 366.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1372, 3134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7432)
[0000][PE] mean and std.dev: (1971.73, 1580.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206060 reads in 396.428 CPU sec, 22.207 real sec
[0000] Calling mem_process_seqs.., task: 1880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513074, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 339, 477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1117)
[0000][PE] mean and std.dev: (325.62, 234.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1261, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2805)
[0000][PE] mean and std.dev: (1231.10, 423.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 397.144 CPU sec, 22.252 real sec
[0000] Calling mem_process_seqs.., task: 1881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512470, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 604, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (713.20, 573.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.33, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 394.235 CPU sec, 22.096 real sec
[0000] Calling mem_process_seqs.., task: 1882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513002, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 832, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (865.93, 702.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.44, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 399.132 CPU sec, 22.382 real sec
[0000] Calling mem_process_seqs.., task: 1883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512908, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 361, 719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1767)
[0000][PE] mean and std.dev: (447.35, 324.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1387, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (313, 2318)
[0000][PE] mean and std.dev: (1237.88, 388.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 393.943 CPU sec, 22.065 real sec
[0000] Calling mem_process_seqs.., task: 1884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512911, 1, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 346, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (429.86, 431.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 398.322 CPU sec, 22.310 real sec
[0000] Calling mem_process_seqs.., task: 1885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512753, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 1285, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5373)
[0000][PE] mean and std.dev: (932.78, 822.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.46, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1423, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (1221.80, 692.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 395.648 CPU sec, 22.185 real sec
[0000] Calling mem_process_seqs.., task: 1886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512786, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 430, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2932)
[0000][PE] mean and std.dev: (749.00, 612.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 395.010 CPU sec, 22.153 real sec
[0000] Calling mem_process_seqs.., task: 1887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512863, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 428, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2728)
[0000][PE] mean and std.dev: (690.60, 551.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (650, 909, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7430)
[0000][PE] mean and std.dev: (1559.93, 1269.74)
[0000][PE] low and high boundaries for proper pairs: (1, 9690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 390.611 CPU sec, 21.870 real sec
[0000] Calling mem_process_seqs.., task: 1888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512871, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 377, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3488)
[0000][PE] mean and std.dev: (831.60, 786.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 396.086 CPU sec, 22.203 real sec
[0000] Calling mem_process_seqs.., task: 1889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513128, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (551, 1053, 2532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6494)
[0000][PE] mean and std.dev: (1189.92, 846.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 392.073 CPU sec, 21.961 real sec
[0000] Calling mem_process_seqs.., task: 1890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512971, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1243, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (1337.18, 771.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5045)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 396.075 CPU sec, 22.176 real sec
[0000] Calling mem_process_seqs.., task: 1891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513140, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 509, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4584)
[0000][PE] mean and std.dev: (1047.07, 1076.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1778, 4718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12436)
[0000][PE] mean and std.dev: (2844.00, 3015.72)
[0000][PE] low and high boundaries for proper pairs: (1, 16295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 392.396 CPU sec, 21.974 real sec
[0000] Calling mem_process_seqs.., task: 1892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512920, 5, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 601, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2167)
[0000][PE] mean and std.dev: (623.08, 476.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.25, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 400.589 CPU sec, 22.475 real sec
[0000] Calling mem_process_seqs.., task: 1893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512973, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 535, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2178)
[0000][PE] mean and std.dev: (636.85, 440.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 398.700 CPU sec, 22.350 real sec
[0000] Calling mem_process_seqs.., task: 1894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512901, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 352, 686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1540)
[0000][PE] mean and std.dev: (443.06, 267.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.64, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1171, 1439, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (1447.00, 649.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 399.101 CPU sec, 22.415 real sec
[0000] Calling mem_process_seqs.., task: 1895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512923, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 622, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2655)
[0000][PE] mean and std.dev: (698.30, 526.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 394.732 CPU sec, 22.099 real sec
[0000] Calling mem_process_seqs.., task: 1896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205918
	[0000][ M::kt_pipeline] read 1205918 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513149, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 393.520 CPU sec, 22.023 real sec
[0000] Calling mem_process_seqs.., task: 1897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512781, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 410, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2529)
[0000][PE] mean and std.dev: (633.33, 638.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205918 reads in 394.268 CPU sec, 22.112 real sec
[0000] Calling mem_process_seqs.., task: 1898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512776, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 589, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2744)
[0000][PE] mean and std.dev: (619.55, 331.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1214, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5377)
[0000][PE] mean and std.dev: (1495.17, 918.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 396.995 CPU sec, 22.288 real sec
[0000] Calling mem_process_seqs.., task: 1899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512887, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 393.162 CPU sec, 22.040 real sec
[0000] Calling mem_process_seqs.., task: 1900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512851, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 441, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (878.00, 927.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1093, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3171)
[0000][PE] mean and std.dev: (940.80, 302.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 397.061 CPU sec, 22.243 real sec
[0000] Calling mem_process_seqs.., task: 1901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513016, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 899, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3608)
[0000][PE] mean and std.dev: (927.83, 783.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.40, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 398.418 CPU sec, 22.392 real sec
[0000] Calling mem_process_seqs.., task: 1902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512738, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 316, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 829)
[0000][PE] mean and std.dev: (277.67, 126.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.59, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1324, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2721)
[0000][PE] mean and std.dev: (1218.47, 555.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 396.329 CPU sec, 22.206 real sec
[0000] Calling mem_process_seqs.., task: 1903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513087, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 555, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4317)
[0000][PE] mean and std.dev: (959.07, 1006.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.10, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 399.534 CPU sec, 22.399 real sec
[0000] Calling mem_process_seqs.., task: 1904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512503, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.65, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 394.496 CPU sec, 22.118 real sec
[0000] Calling mem_process_seqs.., task: 1905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512893, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 409, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (804.73, 778.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 393.992 CPU sec, 22.087 real sec
[0000] Calling mem_process_seqs.., task: 1906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513274, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 318, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2246)
[0000][PE] mean and std.dev: (606.33, 520.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 394.376 CPU sec, 22.101 real sec
[0000] Calling mem_process_seqs.., task: 1907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512373, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 362, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4421)
[0000][PE] mean and std.dev: (935.27, 776.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1212, 2591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5961)
[0000][PE] mean and std.dev: (1538.77, 825.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 397.675 CPU sec, 22.272 real sec
[0000] Calling mem_process_seqs.., task: 1908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513249, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 425, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3674)
[0000][PE] mean and std.dev: (858.93, 745.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1226, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (1264.07, 564.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 393.469 CPU sec, 22.031 real sec
[0000] Calling mem_process_seqs.., task: 1909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512390, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 432, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2814)
[0000][PE] mean and std.dev: (668.20, 481.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.73, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1754, 2564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6034)
[0000][PE] mean and std.dev: (1852.40, 1391.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 398.512 CPU sec, 22.375 real sec
[0000] Calling mem_process_seqs.., task: 1910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512731, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 641, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3638)
[0000][PE] mean and std.dev: (892.07, 874.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.30, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 395.379 CPU sec, 22.165 real sec
[0000] Calling mem_process_seqs.., task: 1911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512671, 5, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 396.124 CPU sec, 22.160 real sec
[0000] Calling mem_process_seqs.., task: 1912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512834, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 622, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5316)
[0000][PE] mean and std.dev: (1103.64, 1077.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 397.715 CPU sec, 22.279 real sec
[0000] Calling mem_process_seqs.., task: 1913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512931, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 589, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (599.73, 382.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 396.405 CPU sec, 22.207 real sec
[0000] Calling mem_process_seqs.., task: 1914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512601, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1088, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (829.50, 613.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.37, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 395.654 CPU sec, 22.176 real sec
[0000] Calling mem_process_seqs.., task: 1915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512303, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 744, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4239)
[0000][PE] mean and std.dev: (920.76, 751.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 397.338 CPU sec, 22.295 real sec
[0000] Calling mem_process_seqs.., task: 1916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512773, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 442, 3018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8384)
[0000][PE] mean and std.dev: (1559.85, 1627.46)
[0000][PE] low and high boundaries for proper pairs: (1, 11067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1157, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1251.77, 936.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 397.906 CPU sec, 22.327 real sec
[0000] Calling mem_process_seqs.., task: 1917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512515, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 583, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3808)
[0000][PE] mean and std.dev: (824.47, 673.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 395.803 CPU sec, 22.185 real sec
[0000] Calling mem_process_seqs.., task: 1918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512678, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 505, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4213)
[0000][PE] mean and std.dev: (724.84, 556.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 392.758 CPU sec, 22.013 real sec
[0000] Calling mem_process_seqs.., task: 1919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513130, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 738, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2828)
[0000][PE] mean and std.dev: (784.27, 548.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.39, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 394.857 CPU sec, 22.141 real sec
[0000] Calling mem_process_seqs.., task: 1920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206080
	[0000][ M::kt_pipeline] read 1206080 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512831, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 1283, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (1067.40, 704.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 398.366 CPU sec, 22.361 real sec
[0000] Calling mem_process_seqs.., task: 1921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513136, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 418, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2051)
[0000][PE] mean and std.dev: (562.00, 414.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206080 reads in 393.588 CPU sec, 22.044 real sec
[0000] Calling mem_process_seqs.., task: 1922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512342, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 580, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6418)
[0000][PE] mean and std.dev: (1256.45, 1210.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 988, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2515)
[0000][PE] mean and std.dev: (1045.31, 386.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 399.237 CPU sec, 22.369 real sec
[0000] Calling mem_process_seqs.., task: 1923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512702, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 1097, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4974)
[0000][PE] mean and std.dev: (919.09, 648.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.44, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 394.363 CPU sec, 22.062 real sec
[0000] Calling mem_process_seqs.., task: 1924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 513317, 5, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 392.721 CPU sec, 22.014 real sec
[0000] Calling mem_process_seqs.., task: 1925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512648, 2, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 1004, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (1002.82, 645.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 398.362 CPU sec, 22.338 real sec
[0000] Calling mem_process_seqs.., task: 1926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513067, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 659, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2388)
[0000][PE] mean and std.dev: (747.44, 428.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1368, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5114)
[0000][PE] mean and std.dev: (1535.69, 1208.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 405.182 CPU sec, 22.685 real sec
[0000] Calling mem_process_seqs.., task: 1927
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513035, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 384, 766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1870)
[0000][PE] mean and std.dev: (502.50, 440.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.47, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (562, 1148, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3199)
[0000][PE] mean and std.dev: (962.56, 441.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 394.206 CPU sec, 22.121 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000274 bp)...
[0000] Calling mem_process_seqs.., task: 1928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513246, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 460, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (805.62, 799.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 391.678 CPU sec, 22.004 real sec
[0000] Calling mem_process_seqs.., task: 1929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512345, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 342, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2171)
[0000][PE] mean and std.dev: (612.67, 471.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1386, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 2598)
[0000][PE] mean and std.dev: (1303.25, 328.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 395.004 CPU sec, 22.134 real sec
[0000] Calling mem_process_seqs.., task: 1930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513156, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 430, 2626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7556)
[0000][PE] mean and std.dev: (1171.21, 1449.11)
[0000][PE] low and high boundaries for proper pairs: (1, 10021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 391.779 CPU sec, 21.950 real sec
[0000] Calling mem_process_seqs.., task: 1931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512688, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 400, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7155)
[0000][PE] mean and std.dev: (1079.75, 1220.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 400.066 CPU sec, 22.463 real sec
[0000] Calling mem_process_seqs.., task: 1932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512432, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 414, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2673)
[0000][PE] mean and std.dev: (534.65, 451.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 394.958 CPU sec, 22.134 real sec
[0000] Calling mem_process_seqs.., task: 1933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512637, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 338, 752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1698)
[0000][PE] mean and std.dev: (381.77, 215.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.53, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 393.610 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 1934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512827, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 328, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2215)
[0000][PE] mean and std.dev: (511.60, 453.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1242, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5930)
[0000][PE] mean and std.dev: (1527.17, 987.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 390.688 CPU sec, 21.914 real sec
[0000] Calling mem_process_seqs.., task: 1935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513008, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 356, 2681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7437)
[0000][PE] mean and std.dev: (1050.90, 1099.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1142, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (1174.45, 573.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 390.452 CPU sec, 21.925 real sec
[0000] Calling mem_process_seqs.., task: 1936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206160
	[0000][ M::kt_pipeline] read 1206160 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513335, 5, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 335, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2377)
[0000][PE] mean and std.dev: (628.18, 549.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 399.444 CPU sec, 22.385 real sec
[0000] Calling mem_process_seqs.., task: 1937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512546, 9, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 1177, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (1169.17, 997.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.59, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206160 reads in 397.988 CPU sec, 22.335 real sec
[0000] Calling mem_process_seqs.., task: 1938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512146, 5, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 396.102 CPU sec, 22.189 real sec
[0000] Calling mem_process_seqs.., task: 1939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206092
	[0000][ M::kt_pipeline] read 1206092 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512692, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 490, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2650)
[0000][PE] mean and std.dev: (588.25, 502.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.52, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1156, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (304, 2334)
[0000][PE] mean and std.dev: (1288.82, 392.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 394.817 CPU sec, 22.113 real sec
[0000] Calling mem_process_seqs.., task: 1940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512905, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 574, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2871)
[0000][PE] mean and std.dev: (879.39, 710.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206092 reads in 391.709 CPU sec, 21.934 real sec
[0000] Calling mem_process_seqs.., task: 1941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512815, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 1143, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4228)
[0000][PE] mean and std.dev: (880.64, 667.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (362, 949, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (930.43, 648.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 399.194 CPU sec, 22.385 real sec
[0000] Calling mem_process_seqs.., task: 1942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205954
	[0000][ M::kt_pipeline] read 1205954 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512217, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 551, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (820.00, 602.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (496, 1090, 2403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6217)
[0000][PE] mean and std.dev: (1379.80, 1019.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 392.425 CPU sec, 21.997 real sec
[0000] Calling mem_process_seqs.., task: 1943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513103, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 421, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3623)
[0000][PE] mean and std.dev: (458.08, 336.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1418, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4152)
[0000][PE] mean and std.dev: (1305.75, 697.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205954 reads in 395.362 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 1944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512803, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 412, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (750.33, 723.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.54, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1162, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2830)
[0000][PE] mean and std.dev: (1127.00, 409.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 392.273 CPU sec, 21.956 real sec
[0000] Calling mem_process_seqs.., task: 1945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512244, 4, 1)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 400, 708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1606)
[0000][PE] mean and std.dev: (468.62, 341.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.69, 113.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 393.750 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 1946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512208, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 445, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4264)
[0000][PE] mean and std.dev: (678.77, 606.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1234, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3616)
[0000][PE] mean and std.dev: (1249.08, 810.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 392.234 CPU sec, 21.979 real sec
[0000] Calling mem_process_seqs.., task: 1947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512641, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 1349, 2909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7823)
[0000][PE] mean and std.dev: (1446.59, 1108.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.22, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 395.070 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 1948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512734, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 968, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6595)
[0000][PE] mean and std.dev: (1318.43, 1248.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 2022, 2657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5441)
[0000][PE] mean and std.dev: (1856.90, 923.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 392.076 CPU sec, 21.995 real sec
[0000] Calling mem_process_seqs.., task: 1949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512507, 5, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 398.880 CPU sec, 22.353 real sec
[0000] Calling mem_process_seqs.., task: 1950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512902, 1, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 1036, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5154)
[0000][PE] mean and std.dev: (716.50, 565.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.39, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 392.332 CPU sec, 22.005 real sec
[0000] Calling mem_process_seqs.., task: 1951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513115, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 466, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (849.20, 652.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 393.374 CPU sec, 22.037 real sec
[0000] Calling mem_process_seqs.., task: 1952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206084
	[0000][ M::kt_pipeline] read 1206084 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512701, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 367, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3102)
[0000][PE] mean and std.dev: (517.64, 573.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 395.847 CPU sec, 22.202 real sec
[0000] Calling mem_process_seqs.., task: 1953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513146, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 397, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3460)
[0000][PE] mean and std.dev: (732.67, 784.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1190, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4713)
[0000][PE] mean and std.dev: (1353.75, 719.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206084 reads in 398.067 CPU sec, 22.314 real sec
[0000] Calling mem_process_seqs.., task: 1954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206136
	[0000][ M::kt_pipeline] read 1206136 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513294, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 1112, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4795)
[0000][PE] mean and std.dev: (1009.40, 671.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1650, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3191)
[0000][PE] mean and std.dev: (1498.20, 541.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 386.136 CPU sec, 21.638 real sec
[0000] Calling mem_process_seqs.., task: 1955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512340, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 1964, 2650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7364)
[0000][PE] mean and std.dev: (1728.40, 1639.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206136 reads in 394.298 CPU sec, 22.106 real sec
[0000] Calling mem_process_seqs.., task: 1956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512865, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 293, 2749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7889)
[0000][PE] mean and std.dev: (1185.23, 1425.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.94, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (528, 1119, 3082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8190)
[0000][PE] mean and std.dev: (1606.54, 1282.45)
[0000][PE] low and high boundaries for proper pairs: (1, 10744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 392.233 CPU sec, 22.003 real sec
[0000] Calling mem_process_seqs.., task: 1957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512379, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 255, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2948)
[0000][PE] mean and std.dev: (499.69, 551.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 395.927 CPU sec, 22.187 real sec
[0000] Calling mem_process_seqs.., task: 1958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206096
	[0000][ M::kt_pipeline] read 1206096 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513060, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 483, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3600)
[0000][PE] mean and std.dev: (735.13, 627.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.36, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1462, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3478)
[0000][PE] mean and std.dev: (1554.10, 872.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 392.211 CPU sec, 21.988 real sec
[0000] Calling mem_process_seqs.., task: 1959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205962
	[0000][ M::kt_pipeline] read 1205962 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513019, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 934, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (1004.08, 788.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206096 reads in 393.323 CPU sec, 22.020 real sec
[0000] Calling mem_process_seqs.., task: 1960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512501, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 425, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5250)
[0000][PE] mean and std.dev: (957.55, 1176.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1505, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1381.46, 762.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205962 reads in 395.623 CPU sec, 22.139 real sec
[0000] Calling mem_process_seqs.., task: 1961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512589, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 667, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4936)
[0000][PE] mean and std.dev: (908.30, 759.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 393.404 CPU sec, 22.053 real sec
[0000] Calling mem_process_seqs.., task: 1962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512791, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 305, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 683)
[0000][PE] mean and std.dev: (272.73, 76.24)
[0000][PE] low and high boundaries for proper pairs: (1, 839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.48, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 390.135 CPU sec, 21.934 real sec
[0000] Calling mem_process_seqs.., task: 1963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205896
	[0000][ M::kt_pipeline] read 1205896 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513069, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 342, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1988)
[0000][PE] mean and std.dev: (501.80, 392.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 392.918 CPU sec, 21.992 real sec
[0000] Calling mem_process_seqs.., task: 1964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512832, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 948, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2861)
[0000][PE] mean and std.dev: (870.10, 497.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205896 reads in 393.537 CPU sec, 22.026 real sec
[0000] Calling mem_process_seqs.., task: 1965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512607, 3, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 1096, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3715)
[0000][PE] mean and std.dev: (1091.75, 656.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 392.340 CPU sec, 22.008 real sec
[0000] Calling mem_process_seqs.., task: 1966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513044, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 503, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (932.93, 1023.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1246, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (1260.09, 910.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 390.614 CPU sec, 21.924 real sec
[0000] Calling mem_process_seqs.., task: 1967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512316, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 1129, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3990)
[0000][PE] mean and std.dev: (867.06, 620.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 394.615 CPU sec, 22.123 real sec
[0000] Calling mem_process_seqs.., task: 1968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512920, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 388, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5169)
[0000][PE] mean and std.dev: (920.21, 989.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.17, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1625, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (1618.50, 722.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 390.409 CPU sec, 21.859 real sec
[0000] Calling mem_process_seqs.., task: 1969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206034
	[0000][ M::kt_pipeline] read 1206034 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512685, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 438, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2483)
[0000][PE] mean and std.dev: (685.71, 572.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1397, 2188, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6161)
[0000][PE] mean and std.dev: (2264.80, 1213.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 389.640 CPU sec, 21.844 real sec
[0000] Calling mem_process_seqs.., task: 1970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205998
	[0000][ M::kt_pipeline] read 1205998 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512654, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 1306, 4450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12594)
[0000][PE] mean and std.dev: (1995.73, 2077.37)
[0000][PE] low and high boundaries for proper pairs: (1, 16666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (563, 1118, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (983.91, 534.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206034 reads in 398.552 CPU sec, 22.363 real sec
[0000] Calling mem_process_seqs.., task: 1971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206114
	[0000][ M::kt_pipeline] read 1206114 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512433, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 932, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6670)
[0000][PE] mean and std.dev: (1556.27, 1624.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.53, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205998 reads in 392.249 CPU sec, 21.964 real sec
[0000] Calling mem_process_seqs.., task: 1972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512191, 5, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.52, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 937, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2428)
[0000][PE] mean and std.dev: (984.00, 503.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3021)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206114 reads in 394.696 CPU sec, 22.160 real sec
[0000] Calling mem_process_seqs.., task: 1973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512623, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 1128, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (940.50, 569.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.71, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1513, 1807, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5254)
[0000][PE] mean and std.dev: (1646.44, 641.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 397.519 CPU sec, 22.266 real sec
[0000] Calling mem_process_seqs.., task: 1974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512657, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 979, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (787.69, 558.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 395.671 CPU sec, 22.168 real sec
[0000] Calling mem_process_seqs.., task: 1975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513012, 2, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 391.947 CPU sec, 21.968 real sec
[0000] Calling mem_process_seqs.., task: 1976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513203, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 751, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (995.67, 724.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 393.489 CPU sec, 22.069 real sec
[0000] Calling mem_process_seqs.., task: 1977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 513241, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 401, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2343)
[0000][PE] mean and std.dev: (602.82, 512.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 392.896 CPU sec, 22.025 real sec
[0000] Calling mem_process_seqs.., task: 1978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512748, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 390, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7230)
[0000][PE] mean and std.dev: (832.50, 969.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.62, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 393.255 CPU sec, 22.019 real sec
[0000] Calling mem_process_seqs.., task: 1979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206074
	[0000][ M::kt_pipeline] read 1206074 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512849, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 254, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (588.33, 732.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 391.643 CPU sec, 21.933 real sec
[0000] Calling mem_process_seqs.., task: 1980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512619, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 421, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6667)
[0000][PE] mean and std.dev: (1138.85, 1278.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206074 reads in 400.895 CPU sec, 22.510 real sec
[0000] Calling mem_process_seqs.., task: 1981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512737, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 598, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2353)
[0000][PE] mean and std.dev: (692.31, 402.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1420, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4712)
[0000][PE] mean and std.dev: (1447.55, 725.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 394.655 CPU sec, 22.121 real sec
[0000] Calling mem_process_seqs.., task: 1982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512539, 6, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1258, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (1152.00, 490.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4678)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 394.239 CPU sec, 22.089 real sec
[0000] Calling mem_process_seqs.., task: 1983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512314, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 705, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (930.59, 1005.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 395.623 CPU sec, 22.178 real sec
[0000] Calling mem_process_seqs.., task: 1984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512846, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 553, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2420)
[0000][PE] mean and std.dev: (718.64, 540.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 392.633 CPU sec, 22.014 real sec
[0000] Calling mem_process_seqs.., task: 1985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512897, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 610, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4416)
[0000][PE] mean and std.dev: (821.92, 702.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 392.882 CPU sec, 22.038 real sec
[0000] Calling mem_process_seqs.., task: 1986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206018
	[0000][ M::kt_pipeline] read 1206018 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512508, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 420, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3091)
[0000][PE] mean and std.dev: (595.08, 666.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 396.719 CPU sec, 22.211 real sec
[0000] Calling mem_process_seqs.., task: 1987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 512723, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 505, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (679.00, 498.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.53, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206018 reads in 395.148 CPU sec, 22.171 real sec
[0000] Calling mem_process_seqs.., task: 1988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513125, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1077, 1354, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3186)
[0000][PE] mean and std.dev: (1218.53, 715.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.02, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1339, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (295, 2220)
[0000][PE] mean and std.dev: (1141.00, 287.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 393.418 CPU sec, 22.033 real sec
[0000] Calling mem_process_seqs.., task: 1989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512889, 8, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 372, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3101)
[0000][PE] mean and std.dev: (616.67, 460.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.87, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 394.079 CPU sec, 22.087 real sec
[0000] Calling mem_process_seqs.., task: 1990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512723, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 436, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2109)
[0000][PE] mean and std.dev: (554.08, 344.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.80, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 399.350 CPU sec, 22.375 real sec
[0000] Calling mem_process_seqs.., task: 1991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513055, 7, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 398.256 CPU sec, 22.348 real sec
[0000] Calling mem_process_seqs.., task: 1992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512930, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 1028, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5277)
[0000][PE] mean and std.dev: (1352.00, 1219.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6937)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 394.673 CPU sec, 22.138 real sec
[0000] Calling mem_process_seqs.., task: 1993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513005, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 538, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4595)
[0000][PE] mean and std.dev: (918.80, 839.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 402.845 CPU sec, 22.603 real sec
[0000] Calling mem_process_seqs.., task: 1994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206046
	[0000][ M::kt_pipeline] read 1206046 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512396, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 1030, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5392)
[0000][PE] mean and std.dev: (1096.58, 851.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.62, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 395.834 CPU sec, 22.210 real sec
[0000] Calling mem_process_seqs.., task: 1995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513079, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 663, 4645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13363)
[0000][PE] mean and std.dev: (1974.00, 2265.08)
[0000][PE] low and high boundaries for proper pairs: (1, 17722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206046 reads in 402.003 CPU sec, 22.588 real sec
[0000] Calling mem_process_seqs.., task: 1996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512923, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 304, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1193)
[0000][PE] mean and std.dev: (328.89, 168.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.45, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1029, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2676)
[0000][PE] mean and std.dev: (948.40, 417.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 396.868 CPU sec, 22.261 real sec
[0000] Calling mem_process_seqs.., task: 1997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206050
	[0000][ M::kt_pipeline] read 1206050 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512939, 3, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 416, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2128)
[0000][PE] mean and std.dev: (517.00, 368.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 400.612 CPU sec, 22.497 real sec
[0000] Calling mem_process_seqs.., task: 1998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512524, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 543, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (590.55, 481.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1243, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3365)
[0000][PE] mean and std.dev: (1050.27, 371.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206050 reads in 398.701 CPU sec, 22.381 real sec
[0000] Calling mem_process_seqs.., task: 1999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512801, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 720, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2794)
[0000][PE] mean and std.dev: (661.00, 412.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 401.545 CPU sec, 22.538 real sec
[0000] Calling mem_process_seqs.., task: 2000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512196, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (441, 508, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7263)
[0000][PE] mean and std.dev: (1725.80, 1785.98)
[0000][PE] low and high boundaries for proper pairs: (1, 9537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.52, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 401.330 CPU sec, 22.586 real sec
[0000] Calling mem_process_seqs.., task: 2001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512456, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 359, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2292)
[0000][PE] mean and std.dev: (433.67, 299.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 402.527 CPU sec, 22.568 real sec
[0000] Calling mem_process_seqs.., task: 2002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206082
	[0000][ M::kt_pipeline] read 1206082 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513165, 0, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 396, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4389)
[0000][PE] mean and std.dev: (977.00, 1154.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 399.471 CPU sec, 22.404 real sec
[0000] Calling mem_process_seqs.., task: 2003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512910, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 364, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4514)
[0000][PE] mean and std.dev: (870.06, 890.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206082 reads in 403.627 CPU sec, 22.651 real sec
[0000] Calling mem_process_seqs.., task: 2004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512691, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 732, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2141)
[0000][PE] mean and std.dev: (657.17, 397.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.04, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1723, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4822)
[0000][PE] mean and std.dev: (1761.36, 938.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 402.514 CPU sec, 22.597 real sec
[0000] Calling mem_process_seqs.., task: 2005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206008
	[0000][ M::kt_pipeline] read 1206008 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513141, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 788, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2498)
[0000][PE] mean and std.dev: (702.58, 461.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 401.274 CPU sec, 22.495 real sec
[0000] Calling mem_process_seqs.., task: 2006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 512668, 2, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.22, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206008 reads in 402.747 CPU sec, 22.577 real sec
[0000] Calling mem_process_seqs.., task: 2007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512875, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 331, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4605)
[0000][PE] mean and std.dev: (738.11, 870.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 404.216 CPU sec, 22.610 real sec
[0000] Calling mem_process_seqs.., task: 2008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512242, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1154, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (1115.57, 1016.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 401.957 CPU sec, 22.531 real sec
[0000] Calling mem_process_seqs.., task: 2009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512650, 6, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1230, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4461)
[0000][PE] mean and std.dev: (1110.70, 981.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.79, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 401.581 CPU sec, 22.543 real sec
[0000] Calling mem_process_seqs.., task: 2010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512790, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 475, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2463)
[0000][PE] mean and std.dev: (622.73, 568.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.50, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1003, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1363.09, 898.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 400.491 CPU sec, 22.437 real sec
[0000] Calling mem_process_seqs.., task: 2011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512638, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 388, 3096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8920)
[0000][PE] mean and std.dev: (1519.27, 1777.94)
[0000][PE] low and high boundaries for proper pairs: (1, 11832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 403.097 CPU sec, 22.564 real sec
[0000] Calling mem_process_seqs.., task: 2012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512857, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 486, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (779.33, 718.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (567, 1433, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5379)
[0000][PE] mean and std.dev: (1314.91, 954.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 401.683 CPU sec, 22.521 real sec
[0000] Calling mem_process_seqs.., task: 2013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512964, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 417, 3658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10506)
[0000][PE] mean and std.dev: (1812.59, 2658.01)
[0000][PE] low and high boundaries for proper pairs: (1, 13930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 403.965 CPU sec, 22.647 real sec
[0000] Calling mem_process_seqs.., task: 2014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512782, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 798, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (1031.30, 965.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 1040, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2940)
[0000][PE] mean and std.dev: (908.11, 396.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 400.061 CPU sec, 22.393 real sec
[0000] Calling mem_process_seqs.., task: 2015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512358, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1305, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (1259.20, 440.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 403.527 CPU sec, 22.619 real sec
[0000] Calling mem_process_seqs.., task: 2016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205936
	[0000][ M::kt_pipeline] read 1205936 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512668, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 431, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1722)
[0000][PE] mean and std.dev: (605.55, 341.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 401.181 CPU sec, 22.479 real sec
[0000] Calling mem_process_seqs.., task: 2017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512472, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 1114, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4095)
[0000][PE] mean and std.dev: (1020.69, 799.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205936 reads in 403.774 CPU sec, 22.587 real sec
[0000] Calling mem_process_seqs.., task: 2018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206094
	[0000][ M::kt_pipeline] read 1206094 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512906, 2, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1386, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (1416.08, 542.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4533)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 399.390 CPU sec, 22.350 real sec
[0000] Calling mem_process_seqs.., task: 2019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512605, 4, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.33, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 1199, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6494)
[0000][PE] mean and std.dev: (1379.15, 1125.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8444)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206094 reads in 405.904 CPU sec, 22.721 real sec
[0000] Calling mem_process_seqs.., task: 2020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512751, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 362, 768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1820)
[0000][PE] mean and std.dev: (399.08, 282.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 403.647 CPU sec, 22.656 real sec
[0000] Calling mem_process_seqs.., task: 2021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 513130, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 867, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (817.94, 543.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.08, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1597, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (1302.31, 610.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 400.330 CPU sec, 22.406 real sec
[0000] Calling mem_process_seqs.., task: 2022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512823, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 396, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2392)
[0000][PE] mean and std.dev: (586.87, 535.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.44, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1727, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4369)
[0000][PE] mean and std.dev: (1576.29, 806.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 400.798 CPU sec, 22.484 real sec
[0000] Calling mem_process_seqs.., task: 2023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512387, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 367, 799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1837)
[0000][PE] mean and std.dev: (449.57, 306.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 399.287 CPU sec, 22.363 real sec
[0000] Calling mem_process_seqs.., task: 2024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512697, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 919, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5140)
[0000][PE] mean and std.dev: (1096.27, 758.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.54, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 403.786 CPU sec, 22.634 real sec
[0000] Calling mem_process_seqs.., task: 2025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512959, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 752, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3156)
[0000][PE] mean and std.dev: (645.10, 513.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 400.656 CPU sec, 22.435 real sec
[0000] Calling mem_process_seqs.., task: 2026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512814, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 1001, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5637)
[0000][PE] mean and std.dev: (1126.85, 854.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.96, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (466, 1313, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6100)
[0000][PE] mean and std.dev: (1822.64, 1732.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 400.640 CPU sec, 22.460 real sec
[0000] Calling mem_process_seqs.., task: 2027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513127, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 657, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2760)
[0000][PE] mean and std.dev: (556.50, 412.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 1215, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (1041.20, 539.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 399.613 CPU sec, 22.400 real sec
[0000] Calling mem_process_seqs.., task: 2028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512211, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 1286, 3018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8278)
[0000][PE] mean and std.dev: (1485.67, 1750.04)
[0000][PE] low and high boundaries for proper pairs: (1, 10908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 403.939 CPU sec, 22.617 real sec
[0000] Calling mem_process_seqs.., task: 2029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512827, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 603, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2339)
[0000][PE] mean and std.dev: (659.67, 410.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 399.438 CPU sec, 22.374 real sec
[0000] Calling mem_process_seqs.., task: 2030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512881, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 346, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2166)
[0000][PE] mean and std.dev: (563.31, 526.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.63, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 400.207 CPU sec, 22.419 real sec
[0000] Calling mem_process_seqs.., task: 2031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512524, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 274, 831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2065)
[0000][PE] mean and std.dev: (497.00, 448.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 401.994 CPU sec, 22.493 real sec
[0000] Calling mem_process_seqs.., task: 2032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512967, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 427, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3282)
[0000][PE] mean and std.dev: (717.50, 675.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 400.918 CPU sec, 22.508 real sec
[0000] Calling mem_process_seqs.., task: 2033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513435, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 374, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (617.30, 478.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1220, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5981)
[0000][PE] mean and std.dev: (1901.70, 1172.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 398.952 CPU sec, 22.331 real sec
[0000] Calling mem_process_seqs.., task: 2034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512330, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 1015, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4356)
[0000][PE] mean and std.dev: (1027.16, 1038.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.67, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1162, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4843)
[0000][PE] mean and std.dev: (1337.78, 1123.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 401.324 CPU sec, 22.466 real sec
[0000] Calling mem_process_seqs.., task: 2035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512930, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 347, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (724.25, 781.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.32, 113.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1215, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (1130.85, 524.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 402.772 CPU sec, 22.638 real sec
[0000] Calling mem_process_seqs.., task: 2036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512583, 3, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 403.755 CPU sec, 22.699 real sec
[0000] Calling mem_process_seqs.., task: 2037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512974, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 740, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2513)
[0000][PE] mean and std.dev: (716.38, 453.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 402.143 CPU sec, 22.547 real sec
[0000] Calling mem_process_seqs.., task: 2038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512626, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 304, 449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 881)
[0000][PE] mean and std.dev: (351.75, 231.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.51, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 401.442 CPU sec, 22.506 real sec
[0000] Calling mem_process_seqs.., task: 2039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512695, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 402.890 CPU sec, 22.617 real sec
[0000] Calling mem_process_seqs.., task: 2040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512820, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 465, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3996)
[0000][PE] mean and std.dev: (750.71, 614.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.52, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1424, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (1298.60, 595.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 401.579 CPU sec, 22.548 real sec
[0000] Calling mem_process_seqs.., task: 2041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513045, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 413, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (1014.47, 1089.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1164, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7417)
[0000][PE] mean and std.dev: (1568.92, 1191.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 399.514 CPU sec, 22.453 real sec
[0000] Calling mem_process_seqs.., task: 2042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512919, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 399, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2166)
[0000][PE] mean and std.dev: (516.81, 335.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.47, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 400.257 CPU sec, 22.473 real sec
[0000] Calling mem_process_seqs.., task: 2043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205874
	[0000][ M::kt_pipeline] read 1205874 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512829, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 719, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (1056.75, 1000.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 400.786 CPU sec, 22.481 real sec
[0000] Calling mem_process_seqs.., task: 2044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513228, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 245, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (543.62, 597.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1426, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (150, 2920)
[0000][PE] mean and std.dev: (1446.27, 424.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205874 reads in 398.782 CPU sec, 22.321 real sec
[0000] Calling mem_process_seqs.., task: 2045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512913, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 388, 502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 920)
[0000][PE] mean and std.dev: (360.91, 122.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.42, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 400.572 CPU sec, 22.436 real sec
[0000] Calling mem_process_seqs.., task: 2046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512593, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 636, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2684)
[0000][PE] mean and std.dev: (660.10, 410.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.94, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 401.192 CPU sec, 22.494 real sec
[0000] Calling mem_process_seqs.., task: 2047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513302, 2, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 400.141 CPU sec, 22.453 real sec
[0000] Calling mem_process_seqs.., task: 2048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513049, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 915, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5209)
[0000][PE] mean and std.dev: (1151.54, 1175.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.71, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 401.482 CPU sec, 22.539 real sec
[0000] Calling mem_process_seqs.., task: 2049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 513036, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 832, 2535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7019)
[0000][PE] mean and std.dev: (1514.72, 1600.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (400, 1722, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5095)
[0000][PE] mean and std.dev: (1762.00, 1546.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 401.911 CPU sec, 22.528 real sec
[0000] Calling mem_process_seqs.., task: 2050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206020
	[0000][ M::kt_pipeline] read 1206020 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512890, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 341, 626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1300)
[0000][PE] mean and std.dev: (484.83, 298.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 402.286 CPU sec, 22.534 real sec
[0000] Calling mem_process_seqs.., task: 2051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512711, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 381, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2443)
[0000][PE] mean and std.dev: (651.10, 583.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206020 reads in 402.817 CPU sec, 22.614 real sec
[0000] Calling mem_process_seqs.., task: 2052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512665, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 558, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4625)
[0000][PE] mean and std.dev: (922.76, 816.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.82, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 399.439 CPU sec, 22.385 real sec
[0000] Calling mem_process_seqs.., task: 2053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512594, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 405, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (751.09, 600.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1556, 5383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13881)
[0000][PE] mean and std.dev: (2923.00, 2796.20)
[0000][PE] low and high boundaries for proper pairs: (1, 18130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 401.063 CPU sec, 22.496 real sec
[0000] Calling mem_process_seqs.., task: 2054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512976, 7, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.59, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 940, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (1007.40, 387.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3924)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 399.713 CPU sec, 22.394 real sec
[0000] Calling mem_process_seqs.., task: 2055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512631, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 530, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (851.94, 723.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 398.373 CPU sec, 22.336 real sec
[0000] Calling mem_process_seqs.., task: 2056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512753, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 686, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5736)
[0000][PE] mean and std.dev: (1233.54, 1067.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (356, 1050, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5210)
[0000][PE] mean and std.dev: (1184.70, 849.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 402.027 CPU sec, 22.506 real sec
[0000] Calling mem_process_seqs.., task: 2057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512695, 11, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 786, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (798.77, 508.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.12, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (318, 783, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (856.10, 794.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5834)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 398.473 CPU sec, 22.331 real sec
[0000] Calling mem_process_seqs.., task: 2058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513013, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 425, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4456)
[0000][PE] mean and std.dev: (895.55, 849.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1422, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (1701.83, 812.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 398.393 CPU sec, 22.353 real sec
[0000] Calling mem_process_seqs.., task: 2059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512408, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 795, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4392)
[0000][PE] mean and std.dev: (851.27, 712.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.91, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 400.758 CPU sec, 22.428 real sec
[0000] Calling mem_process_seqs.., task: 2060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512820, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 402, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (539.64, 547.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.97, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 402.413 CPU sec, 22.535 real sec
[0000] Calling mem_process_seqs.., task: 2061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512888, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 1078, 3748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10514)
[0000][PE] mean and std.dev: (1846.53, 2260.61)
[0000][PE] low and high boundaries for proper pairs: (1, 13897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.57, 113.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1947, 2812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6316)
[0000][PE] mean and std.dev: (1804.75, 1066.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 399.476 CPU sec, 22.382 real sec
[0000] Calling mem_process_seqs.., task: 2062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513445, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 636, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5268)
[0000][PE] mean and std.dev: (1170.36, 1087.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.54, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1376, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (1110.46, 510.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 396.073 CPU sec, 22.166 real sec
[0000] Calling mem_process_seqs.., task: 2063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513093, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 894, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (1065.46, 776.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 399.210 CPU sec, 22.380 real sec
[0000] Calling mem_process_seqs.., task: 2064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512445, 5, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 401.115 CPU sec, 22.486 real sec
[0000] Calling mem_process_seqs.., task: 2065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512618, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 397, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (813.20, 874.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 399.082 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 2066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206004
	[0000][ M::kt_pipeline] read 1206004 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512482, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (559, 1098, 3254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8644)
[0000][PE] mean and std.dev: (1681.31, 1521.18)
[0000][PE] low and high boundaries for proper pairs: (1, 11339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 399.678 CPU sec, 22.384 real sec
[0000] Calling mem_process_seqs.., task: 2067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513094, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 408, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (781.06, 764.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1165, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 2089)
[0000][PE] mean and std.dev: (1110.56, 368.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206004 reads in 399.757 CPU sec, 22.409 real sec
[0000] Calling mem_process_seqs.., task: 2068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513053, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 372, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1958)
[0000][PE] mean and std.dev: (415.23, 344.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 399.671 CPU sec, 22.422 real sec
[0000] Calling mem_process_seqs.., task: 2069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513017, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 1372, 2684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7336)
[0000][PE] mean and std.dev: (1489.80, 1184.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 399.451 CPU sec, 22.366 real sec
[0000] Calling mem_process_seqs.., task: 2070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 513378, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 437, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3443)
[0000][PE] mean and std.dev: (824.70, 839.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.88, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 400.458 CPU sec, 22.453 real sec
[0000] Calling mem_process_seqs.., task: 2071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512535, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 678, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3516)
[0000][PE] mean and std.dev: (1027.40, 974.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 400.422 CPU sec, 22.392 real sec
[0000] Calling mem_process_seqs.., task: 2072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512802, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 869, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3614)
[0000][PE] mean and std.dev: (932.92, 631.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 399.745 CPU sec, 22.406 real sec
[0000] Calling mem_process_seqs.., task: 2073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206036
	[0000][ M::kt_pipeline] read 1206036 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513037, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 341, 420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 728)
[0000][PE] mean and std.dev: (298.71, 80.24)
[0000][PE] low and high boundaries for proper pairs: (1, 882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.32, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 399.377 CPU sec, 22.385 real sec
[0000] Calling mem_process_seqs.., task: 2074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512857, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 216, 607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1543)
[0000][PE] mean and std.dev: (367.25, 374.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.68, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1364, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (299, 2284)
[0000][PE] mean and std.dev: (1327.70, 366.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206036 reads in 403.349 CPU sec, 22.609 real sec
[0000] Calling mem_process_seqs.., task: 2075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513254, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 612, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (794.38, 655.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 396.821 CPU sec, 22.220 real sec
[0000] Calling mem_process_seqs.., task: 2076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512426, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 448, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4048)
[0000][PE] mean and std.dev: (676.50, 583.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.43, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1437, 2673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6113)
[0000][PE] mean and std.dev: (1494.45, 742.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 405.174 CPU sec, 22.792 real sec
[0000] Calling mem_process_seqs.., task: 2077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512789, 6, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 987, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4942)
[0000][PE] mean and std.dev: (1290.85, 752.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6344)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 400.756 CPU sec, 22.485 real sec
[0000] Calling mem_process_seqs.., task: 2078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512567, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 616, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4150)
[0000][PE] mean and std.dev: (1110.53, 1057.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 399.886 CPU sec, 22.449 real sec
[0000] Calling mem_process_seqs.., task: 2079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205966
	[0000][ M::kt_pipeline] read 1205966 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512521, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 1067, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4782)
[0000][PE] mean and std.dev: (1048.83, 708.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.54, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 403.155 CPU sec, 22.617 real sec
[0000] Calling mem_process_seqs.., task: 2080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512753, 0, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 359, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1332)
[0000][PE] mean and std.dev: (360.44, 170.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205966 reads in 400.645 CPU sec, 22.495 real sec
[0000] Calling mem_process_seqs.., task: 2081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206070
	[0000][ M::kt_pipeline] read 1206070 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 512644, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 407, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2686)
[0000][PE] mean and std.dev: (625.68, 501.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.79, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 403.692 CPU sec, 22.633 real sec
[0000] Calling mem_process_seqs.., task: 2082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512595, 1, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206070 reads in 402.337 CPU sec, 22.572 real sec
[0000] Calling mem_process_seqs.., task: 2083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205946
	[0000][ M::kt_pipeline] read 1205946 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512940, 6, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1272, 2075, 3992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9432)
[0000][PE] mean and std.dev: (2792.91, 2184.91)
[0000][PE] low and high boundaries for proper pairs: (1, 12152)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 403.081 CPU sec, 22.588 real sec
[0000] Calling mem_process_seqs.., task: 2084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513279, 1, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 288, 691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1585)
[0000][PE] mean and std.dev: (315.00, 178.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205946 reads in 400.608 CPU sec, 22.498 real sec
[0000] Calling mem_process_seqs.., task: 2085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512638, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 594, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2287)
[0000][PE] mean and std.dev: (671.67, 513.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 403.825 CPU sec, 22.640 real sec
[0000] Calling mem_process_seqs.., task: 2086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206016
	[0000][ M::kt_pipeline] read 1206016 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512830, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 868, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3989)
[0000][PE] mean and std.dev: (1085.29, 1151.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.58, 113.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 402.048 CPU sec, 22.526 real sec
[0000] Calling mem_process_seqs.., task: 2087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206000
	[0000][ M::kt_pipeline] read 1206000 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 513365, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 351, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (722.90, 732.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.86, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206016 reads in 399.030 CPU sec, 22.362 real sec
[0000] Calling mem_process_seqs.., task: 2088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205920
	[0000][ M::kt_pipeline] read 1205920 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512454, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 912, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3611)
[0000][PE] mean and std.dev: (988.27, 735.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.03, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206000 reads in 405.901 CPU sec, 22.764 real sec
[0000] Calling mem_process_seqs.., task: 2089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 512765, 3, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205920 reads in 403.933 CPU sec, 22.682 real sec
[0000] Calling mem_process_seqs.., task: 2090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512838, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 339, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2763)
[0000][PE] mean and std.dev: (602.86, 592.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.69, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 404.268 CPU sec, 22.702 real sec
[0000] Calling mem_process_seqs.., task: 2091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512499, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 788, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4246)
[0000][PE] mean and std.dev: (1168.72, 944.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 402.390 CPU sec, 22.609 real sec
[0000] Calling mem_process_seqs.., task: 2092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512617, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 437, 714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1564)
[0000][PE] mean and std.dev: (457.17, 203.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.38, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 402.087 CPU sec, 22.539 real sec
[0000] Calling mem_process_seqs.., task: 2093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512697, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 788, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4313)
[0000][PE] mean and std.dev: (881.70, 774.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1356, 1616, 3775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8613)
[0000][PE] mean and std.dev: (2757.55, 2364.96)
[0000][PE] low and high boundaries for proper pairs: (1, 12217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 402.291 CPU sec, 22.590 real sec
[0000] Calling mem_process_seqs.., task: 2094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206014
	[0000][ M::kt_pipeline] read 1206014 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512454, 6, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 406, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4878)
[0000][PE] mean and std.dev: (974.57, 973.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 403.228 CPU sec, 22.616 real sec
[0000] Calling mem_process_seqs.., task: 2095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513564, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 518, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2379)
[0000][PE] mean and std.dev: (757.29, 566.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206014 reads in 401.305 CPU sec, 22.495 real sec
[0000] Calling mem_process_seqs.., task: 2096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512838, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 449, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2714)
[0000][PE] mean and std.dev: (545.55, 406.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1193, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (52, 2612)
[0000][PE] mean and std.dev: (1281.73, 564.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 399.357 CPU sec, 22.405 real sec
[0000] Calling mem_process_seqs.., task: 2097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512858, 3, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.41, 113.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 401.866 CPU sec, 22.559 real sec
[0000] Calling mem_process_seqs.., task: 2098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512238, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 287, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2682)
[0000][PE] mean and std.dev: (535.41, 576.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 404.725 CPU sec, 22.660 real sec
[0000] Calling mem_process_seqs.., task: 2099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513220, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 380, 567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1303)
[0000][PE] mean and std.dev: (299.62, 140.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.62, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1370, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (199, 2599)
[0000][PE] mean and std.dev: (1206.89, 547.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 399.980 CPU sec, 22.406 real sec
[0000] Calling mem_process_seqs.., task: 2100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205916
	[0000][ M::kt_pipeline] read 1205916 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512713, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 362, 447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 949)
[0000][PE] mean and std.dev: (274.12, 114.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 401.996 CPU sec, 22.535 real sec
[0000] Calling mem_process_seqs.., task: 2101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513281, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 634, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (913.07, 762.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205916 reads in 399.414 CPU sec, 22.426 real sec
[0000] Calling mem_process_seqs.., task: 2102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 513308, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 910, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (1154.74, 1017.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.48, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 399.342 CPU sec, 22.425 real sec
[0000] Calling mem_process_seqs.., task: 2103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206028
	[0000][ M::kt_pipeline] read 1206028 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512882, 3, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.68, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1476, 1848, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3741)
[0000][PE] mean and std.dev: (1694.93, 892.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5265)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 401.857 CPU sec, 22.514 real sec
[0000] Calling mem_process_seqs.., task: 2104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512754, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 782, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (955.91, 811.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206028 reads in 399.432 CPU sec, 22.444 real sec
[0000] Calling mem_process_seqs.., task: 2105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512865, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 575, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1847)
[0000][PE] mean and std.dev: (404.38, 230.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.91, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1071, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (1244.73, 639.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 400.404 CPU sec, 22.433 real sec
[0000] Calling mem_process_seqs.., task: 2106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 513161, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 1023, 2179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5683)
[0000][PE] mean and std.dev: (1212.55, 1198.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 400.576 CPU sec, 22.462 real sec
[0000] Calling mem_process_seqs.., task: 2107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512610, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 863, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4491)
[0000][PE] mean and std.dev: (957.69, 745.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 400.053 CPU sec, 22.406 real sec
[0000] Calling mem_process_seqs.., task: 2108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512677, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 335, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4474)
[0000][PE] mean and std.dev: (685.62, 611.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 397.723 CPU sec, 22.277 real sec
[0000] Calling mem_process_seqs.., task: 2109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206084
	[0000][ M::kt_pipeline] read 1206084 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512789, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (756, 956, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5241)
[0000][PE] mean and std.dev: (1531.09, 1318.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 398.907 CPU sec, 22.329 real sec
[0000] Calling mem_process_seqs.., task: 2110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512470, 0, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.77, 113.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206084 reads in 399.051 CPU sec, 22.359 real sec
[0000] Calling mem_process_seqs.., task: 2111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512438, 6, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 395.899 CPU sec, 22.184 real sec
[0000] Calling mem_process_seqs.., task: 2112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512883, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 1187, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4605)
[0000][PE] mean and std.dev: (1381.83, 1300.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.58, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 397.718 CPU sec, 22.284 real sec
[0000] Calling mem_process_seqs.., task: 2113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513110, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 1094, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3976)
[0000][PE] mean and std.dev: (1000.60, 631.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.50, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (555, 1185, 2838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7404)
[0000][PE] mean and std.dev: (1300.75, 1021.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 397.877 CPU sec, 22.283 real sec
[0000] Calling mem_process_seqs.., task: 2114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512339, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (741, 1267, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4764)
[0000][PE] mean and std.dev: (1234.17, 805.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1204, 1752, 5963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15481)
[0000][PE] mean and std.dev: (2640.23, 2222.75)
[0000][PE] low and high boundaries for proper pairs: (1, 20240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 398.356 CPU sec, 22.304 real sec
[0000] Calling mem_process_seqs.., task: 2115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513202, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 959, 2553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6903)
[0000][PE] mean and std.dev: (1388.46, 1240.63)
[0000][PE] low and high boundaries for proper pairs: (1, 9078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 940, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2756)
[0000][PE] mean and std.dev: (1005.10, 608.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 397.801 CPU sec, 22.246 real sec
[0000] Calling mem_process_seqs.., task: 2116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512935, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 379, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (898.67, 881.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 394.965 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 2117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512528, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 955, 2601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7235)
[0000][PE] mean and std.dev: (1352.47, 1325.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.45, 113.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1233, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3302)
[0000][PE] mean and std.dev: (1159.75, 584.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 399.183 CPU sec, 22.344 real sec
[0000] Calling mem_process_seqs.., task: 2118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513340, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.51, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 395.866 CPU sec, 22.189 real sec
[0000] Calling mem_process_seqs.., task: 2119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513026, 2, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 396.419 CPU sec, 22.203 real sec
[0000] Calling mem_process_seqs.., task: 2120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512928, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 481, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3507)
[0000][PE] mean and std.dev: (694.75, 570.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 399.114 CPU sec, 22.361 real sec
[0000] Calling mem_process_seqs.., task: 2121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512796, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 430, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (796.64, 632.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 396.047 CPU sec, 22.171 real sec
[0000] Calling mem_process_seqs.., task: 2122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206042
	[0000][ M::kt_pipeline] read 1206042 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513218, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 353, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3921)
[0000][PE] mean and std.dev: (776.57, 767.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 395.749 CPU sec, 22.134 real sec
[0000] Calling mem_process_seqs.., task: 2123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 513339, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 781, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4655)
[0000][PE] mean and std.dev: (853.75, 740.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206042 reads in 396.303 CPU sec, 22.156 real sec
[0000] Calling mem_process_seqs.., task: 2124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513001, 1, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (585, 1390, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (1244.78, 816.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5969)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 394.479 CPU sec, 22.063 real sec
[0000] Calling mem_process_seqs.., task: 2125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205858
	[0000][ M::kt_pipeline] read 1205858 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512818, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 411, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (631.67, 573.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 395.844 CPU sec, 22.179 real sec
[0000] Calling mem_process_seqs.., task: 2126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512847, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 776, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (661.83, 614.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.66, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1121, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1700.60, 1275.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205858 reads in 395.595 CPU sec, 22.138 real sec
[0000] Calling mem_process_seqs.., task: 2127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512832, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 410, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2909)
[0000][PE] mean and std.dev: (596.06, 503.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.57, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 395.541 CPU sec, 22.155 real sec
[0000] Calling mem_process_seqs.., task: 2128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205958
	[0000][ M::kt_pipeline] read 1205958 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 512984, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 382, 629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1305)
[0000][PE] mean and std.dev: (378.12, 184.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 396.883 CPU sec, 22.203 real sec
[0000] Calling mem_process_seqs.., task: 2129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206098
	[0000][ M::kt_pipeline] read 1206098 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512727, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 432, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3563)
[0000][PE] mean and std.dev: (470.00, 387.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205958 reads in 397.968 CPU sec, 22.316 real sec
[0000] Calling mem_process_seqs.., task: 2130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205992
	[0000][ M::kt_pipeline] read 1205992 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512731, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 449, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (835.40, 868.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (479, 1289, 4742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13268)
[0000][PE] mean and std.dev: (2463.90, 2406.12)
[0000][PE] low and high boundaries for proper pairs: (1, 17531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206098 reads in 394.187 CPU sec, 22.075 real sec
[0000] Calling mem_process_seqs.., task: 2131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513008, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (449, 1206, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5585)
[0000][PE] mean and std.dev: (1593.50, 1460.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.53, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205992 reads in 398.885 CPU sec, 22.331 real sec
[0000] Calling mem_process_seqs.., task: 2132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206056
	[0000][ M::kt_pipeline] read 1206056 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512613, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 366, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2719)
[0000][PE] mean and std.dev: (487.13, 351.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1462, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (25, 2915)
[0000][PE] mean and std.dev: (1439.00, 569.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 396.433 CPU sec, 22.201 real sec
[0000] Calling mem_process_seqs.., task: 2133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512610, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 339, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2540)
[0000][PE] mean and std.dev: (527.12, 412.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 1335, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4297)
[0000][PE] mean and std.dev: (1160.45, 842.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206056 reads in 397.697 CPU sec, 22.277 real sec
[0000] Calling mem_process_seqs.., task: 2134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205908
	[0000][ M::kt_pipeline] read 1205908 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512903, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 698, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5872)
[0000][PE] mean and std.dev: (1038.12, 1075.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.66, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 396.924 CPU sec, 22.275 real sec
[0000] Calling mem_process_seqs.., task: 2135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205908
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512442, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 367, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2359)
[0000][PE] mean and std.dev: (644.39, 584.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.80, 113.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1428, 1743, 2288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (1643.80, 509.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205908 reads in 394.526 CPU sec, 22.092 real sec
[0000] Calling mem_process_seqs.., task: 2136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205990
	[0000][ M::kt_pipeline] read 1205990 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513148, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 655, 3358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9462)
[0000][PE] mean and std.dev: (1508.73, 1533.08)
[0000][PE] low and high boundaries for proper pairs: (1, 12514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 397.100 CPU sec, 22.252 real sec
[0000] Calling mem_process_seqs.., task: 2137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512844, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 656, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2097)
[0000][PE] mean and std.dev: (692.31, 563.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205990 reads in 397.713 CPU sec, 22.278 real sec
[0000] Calling mem_process_seqs.., task: 2138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206044
	[0000][ M::kt_pipeline] read 1206044 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513127, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 389, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (779.42, 745.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.51, 113.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1654, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (1525.60, 606.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 396.342 CPU sec, 22.201 real sec
[0000] Calling mem_process_seqs.., task: 2139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512581, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 398, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (548.09, 458.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.89, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206044 reads in 398.592 CPU sec, 22.339 real sec
[0000] Calling mem_process_seqs.., task: 2140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206010
	[0000][ M::kt_pipeline] read 1206010 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512600, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (565, 1581, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (1071.67, 690.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (482.05, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1326, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (1235.42, 433.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 399.694 CPU sec, 22.415 real sec
[0000] Calling mem_process_seqs.., task: 2141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205964
	[0000][ M::kt_pipeline] read 1205964 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512727, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 1140, 2535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6825)
[0000][PE] mean and std.dev: (1345.85, 1116.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.85, 113.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (598, 1023, 2661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6787)
[0000][PE] mean and std.dev: (1588.23, 1653.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206010 reads in 398.639 CPU sec, 22.336 real sec
[0000] Calling mem_process_seqs.., task: 2142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 513329, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 904, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4742)
[0000][PE] mean and std.dev: (1093.10, 926.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205964 reads in 397.732 CPU sec, 22.270 real sec
[0000] Calling mem_process_seqs.., task: 2143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205940
	[0000][ M::kt_pipeline] read 1205940 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512589, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 476, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (799.24, 760.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 399.378 CPU sec, 22.361 real sec
[0000] Calling mem_process_seqs.., task: 2144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512212, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 442, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4163)
[0000][PE] mean and std.dev: (900.13, 903.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1233, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (1500.45, 682.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205940 reads in 405.226 CPU sec, 22.770 real sec
[0000] Calling mem_process_seqs.., task: 2145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206032
	[0000][ M::kt_pipeline] read 1206032 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512747, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (507, 708, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2427)
[0000][PE] mean and std.dev: (607.89, 358.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.62, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1455, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4471)
[0000][PE] mean and std.dev: (1490.64, 661.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 397.016 CPU sec, 22.243 real sec
[0000] Calling mem_process_seqs.., task: 2146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205972
	[0000][ M::kt_pipeline] read 1205972 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512692, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 933, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6831)
[0000][PE] mean and std.dev: (1445.24, 1379.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1409, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (1160.91, 574.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206032 reads in 400.766 CPU sec, 22.455 real sec
[0000] Calling mem_process_seqs.., task: 2147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205904
	[0000][ M::kt_pipeline] read 1205904 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512457, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 343, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2750)
[0000][PE] mean and std.dev: (554.27, 490.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (486, 1121, 2439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6345)
[0000][PE] mean and std.dev: (1292.44, 977.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205972 reads in 400.340 CPU sec, 22.438 real sec
[0000] Calling mem_process_seqs.., task: 2148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512794, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 554, 2324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6558)
[0000][PE] mean and std.dev: (980.62, 905.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.45, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205904 reads in 400.753 CPU sec, 22.482 real sec
[0000] Calling mem_process_seqs.., task: 2149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512606, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 441, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3731)
[0000][PE] mean and std.dev: (811.53, 670.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1967, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5012)
[0000][PE] mean and std.dev: (1785.85, 866.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 400.346 CPU sec, 22.462 real sec
[0000] Calling mem_process_seqs.., task: 2150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205902
	[0000][ M::kt_pipeline] read 1205902 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 513055, 4, 8)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 395.648 CPU sec, 22.158 real sec
[0000] Calling mem_process_seqs.., task: 2151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512577, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 781, 3984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11134)
[0000][PE] mean and std.dev: (1851.27, 2144.27)
[0000][PE] low and high boundaries for proper pairs: (1, 14709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.91, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 2000, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5907)
[0000][PE] mean and std.dev: (1774.00, 965.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205902 reads in 397.079 CPU sec, 22.244 real sec
[0000] Calling mem_process_seqs.., task: 2152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205978
	[0000][ M::kt_pipeline] read 1205978 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512759, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 334, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5109)
[0000][PE] mean and std.dev: (781.31, 848.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1269, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (1537.17, 982.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 397.764 CPU sec, 22.292 real sec
[0000] Calling mem_process_seqs.., task: 2153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205974
	[0000][ M::kt_pipeline] read 1205974 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512582, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 430, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3345)
[0000][PE] mean and std.dev: (677.82, 475.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.55, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205978 reads in 398.901 CPU sec, 22.330 real sec
[0000] Calling mem_process_seqs.., task: 2154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205960
	[0000][ M::kt_pipeline] read 1205960 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512939, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.46, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1501, 1537, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (319, 3274)
[0000][PE] mean and std.dev: (1384.89, 473.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3865)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205974 reads in 398.582 CPU sec, 22.340 real sec
[0000] Calling mem_process_seqs.., task: 2155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513018, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 1236, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5236)
[0000][PE] mean and std.dev: (1498.86, 1426.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.61, 113.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1379, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (1722.30, 925.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205960 reads in 396.661 CPU sec, 22.226 real sec
[0000] Calling mem_process_seqs.., task: 2156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205952
	[0000][ M::kt_pipeline] read 1205952 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512798, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 1054, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5423)
[0000][PE] mean and std.dev: (1282.08, 999.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1591, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4047)
[0000][PE] mean and std.dev: (1225.64, 652.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5108)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 397.771 CPU sec, 22.270 real sec
[0000] Calling mem_process_seqs.., task: 2157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205934
	[0000][ M::kt_pipeline] read 1205934 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512931, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 341, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5281)
[0000][PE] mean and std.dev: (985.00, 1002.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.48, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205952 reads in 398.014 CPU sec, 22.260 real sec
[0000] Calling mem_process_seqs.., task: 2158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512955, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 353, 616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1424)
[0000][PE] mean and std.dev: (360.70, 231.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205934 reads in 401.906 CPU sec, 22.526 real sec
[0000] Calling mem_process_seqs.., task: 2159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512042, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 317, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3753)
[0000][PE] mean and std.dev: (810.41, 980.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 401.594 CPU sec, 22.492 real sec
[0000] Calling mem_process_seqs.., task: 2160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513185, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 634, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6732)
[0000][PE] mean and std.dev: (1100.08, 1138.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1672, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4793)
[0000][PE] mean and std.dev: (1761.10, 739.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 398.063 CPU sec, 22.291 real sec
[0000] Calling mem_process_seqs.., task: 2161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205950
	[0000][ M::kt_pipeline] read 1205950 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 512928, 2, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.63, 113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1372, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4346)
[0000][PE] mean and std.dev: (1529.20, 586.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5457)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 399.074 CPU sec, 22.350 real sec
[0000] Calling mem_process_seqs.., task: 2162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512838, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (111, 380, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1773)
[0000][PE] mean and std.dev: (269.50, 220.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.38, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1919, 3493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8613)
[0000][PE] mean and std.dev: (2250.40, 1581.38)
[0000][PE] low and high boundaries for proper pairs: (1, 11173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205950 reads in 396.904 CPU sec, 22.236 real sec
[0000] Calling mem_process_seqs.., task: 2163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206022
	[0000][ M::kt_pipeline] read 1206022 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512570, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 546, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4454)
[0000][PE] mean and std.dev: (748.12, 674.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.48, 113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 398.387 CPU sec, 22.320 real sec
[0000] Calling mem_process_seqs.., task: 2164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512301, 6, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.59, 113.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206022 reads in 401.219 CPU sec, 22.468 real sec
[0000] Calling mem_process_seqs.., task: 2165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512865, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 437, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4033)
[0000][PE] mean and std.dev: (481.00, 407.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1628, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (1412.82, 606.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 399.841 CPU sec, 22.399 real sec
[0000] Calling mem_process_seqs.., task: 2166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205976
	[0000][ M::kt_pipeline] read 1205976 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513041, 8, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 664, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4450)
[0000][PE] mean and std.dev: (747.19, 659.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.74, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 397.666 CPU sec, 22.288 real sec
[0000] Calling mem_process_seqs.., task: 2167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206024
	[0000][ M::kt_pipeline] read 1206024 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 513125, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 322, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6972)
[0000][PE] mean and std.dev: (1079.69, 1239.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.40, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205976 reads in 397.339 CPU sec, 22.230 real sec
[0000] Calling mem_process_seqs.., task: 2168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206026
	[0000][ M::kt_pipeline] read 1206026 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512113, 4, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 537, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (881.64, 712.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.93, 113.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206024 reads in 401.253 CPU sec, 22.478 real sec
[0000] Calling mem_process_seqs.., task: 2169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 512447, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 399, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (706.85, 581.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.36, 113.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206026 reads in 398.880 CPU sec, 22.341 real sec
[0000] Calling mem_process_seqs.., task: 2170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205938
	[0000][ M::kt_pipeline] read 1205938 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512963, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 363, 727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1597)
[0000][PE] mean and std.dev: (554.90, 446.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 398.765 CPU sec, 22.325 real sec
[0000] Calling mem_process_seqs.., task: 2171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206052
	[0000][ M::kt_pipeline] read 1206052 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 512650, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 600, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5333)
[0000][PE] mean and std.dev: (947.44, 902.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.34, 113.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1228, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4334)
[0000][PE] mean and std.dev: (1574.00, 755.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205938 reads in 398.226 CPU sec, 22.288 real sec
[0000] Calling mem_process_seqs.., task: 2172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205984
	[0000][ M::kt_pipeline] read 1205984 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512531, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 373, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1922)
[0000][PE] mean and std.dev: (536.50, 418.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 986, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (414, 1719)
[0000][PE] mean and std.dev: (1008.80, 216.97)
[0000][PE] low and high boundaries for proper pairs: (141, 1980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206052 reads in 397.195 CPU sec, 22.240 real sec
[0000] Calling mem_process_seqs.., task: 2173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205894
	[0000][ M::kt_pipeline] read 1205894 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513045, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (498, 999, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6681)
[0000][PE] mean and std.dev: (1239.64, 1088.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.73, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (529, 1474, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (1067.00, 703.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205984 reads in 395.731 CPU sec, 22.191 real sec
[0000] Calling mem_process_seqs.., task: 2174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205912
	[0000][ M::kt_pipeline] read 1205912 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512730, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 400, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4427)
[0000][PE] mean and std.dev: (796.33, 736.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.64, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205894 reads in 397.514 CPU sec, 22.266 real sec
[0000] Calling mem_process_seqs.., task: 2175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205870
	[0000][ M::kt_pipeline] read 1205870 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 512890, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 1202, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4357)
[0000][PE] mean and std.dev: (1019.00, 774.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.83, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205912 reads in 399.414 CPU sec, 22.380 real sec
[0000] Calling mem_process_seqs.., task: 2176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 513357, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 561, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (827.75, 657.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.64, 113.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1329, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3341)
[0000][PE] mean and std.dev: (1420.09, 825.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205870 reads in 395.888 CPU sec, 22.180 real sec
[0000] Calling mem_process_seqs.., task: 2177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512732, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 857, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5512)
[0000][PE] mean and std.dev: (1284.21, 1317.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.54, 113.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 400.610 CPU sec, 22.466 real sec
[0000] Calling mem_process_seqs.., task: 2178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206084
	[0000][ M::kt_pipeline] read 1206084 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512503, 4, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 645, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (685.50, 465.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.61, 113.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 394.264 CPU sec, 22.086 real sec
[0000] Calling mem_process_seqs.., task: 2179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512853, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 533, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2612)
[0000][PE] mean and std.dev: (673.17, 471.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.29, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206084 reads in 396.531 CPU sec, 22.199 real sec
[0000] Calling mem_process_seqs.., task: 2180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512924, 3, 2)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 591, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5376)
[0000][PE] mean and std.dev: (1061.40, 1080.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 398.269 CPU sec, 22.310 real sec
[0000] Calling mem_process_seqs.., task: 2181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206084
	[0000][ M::kt_pipeline] read 1206084 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512216, 4, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 400.327 CPU sec, 22.429 real sec
[0000] Calling mem_process_seqs.., task: 2182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 512336, 3, 10)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1667, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (1500.30, 881.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5024)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206084 reads in 399.139 CPU sec, 22.337 real sec
[0000] Calling mem_process_seqs.., task: 2183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206104
	[0000][ M::kt_pipeline] read 1206104 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512284, 6, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 402, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2385)
[0000][PE] mean and std.dev: (537.42, 330.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.74, 113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 403.842 CPU sec, 22.634 real sec
[0000] Calling mem_process_seqs.., task: 2184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512641, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 367, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5277)
[0000][PE] mean and std.dev: (1035.62, 1010.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6974)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.59, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1408, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5051)
[0000][PE] mean and std.dev: (1741.47, 1091.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206104 reads in 396.914 CPU sec, 22.235 real sec
[0000] Calling mem_process_seqs.., task: 2185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512625, 4, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.55, 113.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 404.955 CPU sec, 22.713 real sec
[0000] Calling mem_process_seqs.., task: 2186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206038
	[0000][ M::kt_pipeline] read 1206038 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 512541, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 555, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5460)
[0000][PE] mean and std.dev: (1015.30, 1021.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.59, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1832, 4062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10318)
[0000][PE] mean and std.dev: (2515.45, 2110.22)
[0000][PE] low and high boundaries for proper pairs: (1, 13446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 398.539 CPU sec, 22.304 real sec
[0000] Calling mem_process_seqs.., task: 2187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205876
	[0000][ M::kt_pipeline] read 1205876 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512950, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 720, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (779.08, 544.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.56, 113.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1428, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4798)
[0000][PE] mean and std.dev: (1490.70, 838.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206038 reads in 401.765 CPU sec, 22.507 real sec
[0000] Calling mem_process_seqs.., task: 2188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 513627, 1, 9)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205876 reads in 395.139 CPU sec, 22.143 real sec
[0000] Calling mem_process_seqs.., task: 2189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512652, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 372, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2397)
[0000][PE] mean and std.dev: (552.08, 531.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.75, 113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1256, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2606)
[0000][PE] mean and std.dev: (1119.18, 494.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 393.867 CPU sec, 22.064 real sec
[0000] Calling mem_process_seqs.., task: 2190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205888
	[0000][ M::kt_pipeline] read 1205888 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512774, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 468, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2969)
[0000][PE] mean and std.dev: (543.80, 453.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 397.638 CPU sec, 22.296 real sec
[0000] Calling mem_process_seqs.., task: 2191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512706, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 442, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3196)
[0000][PE] mean and std.dev: (896.93, 753.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205888 reads in 401.938 CPU sec, 22.529 real sec
[0000] Calling mem_process_seqs.., task: 2192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206058
	[0000][ M::kt_pipeline] read 1206058 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512169, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 382, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4579)
[0000][PE] mean and std.dev: (980.00, 1131.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.76, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 400.411 CPU sec, 22.414 real sec
[0000] Calling mem_process_seqs.., task: 2193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512719, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 438, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2059)
[0000][PE] mean and std.dev: (470.10, 300.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.73, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206058 reads in 403.933 CPU sec, 22.648 real sec
[0000] Calling mem_process_seqs.., task: 2194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512725, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 509, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (627.23, 443.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.72, 113.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 395.580 CPU sec, 22.155 real sec
[0000] Calling mem_process_seqs.., task: 2195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512947, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 251, 4296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12476)
[0000][PE] mean and std.dev: (1917.09, 2951.81)
[0000][PE] low and high boundaries for proper pairs: (1, 16566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.47, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 404.139 CPU sec, 22.636 real sec
[0000] Calling mem_process_seqs.., task: 2196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205996
	[0000][ M::kt_pipeline] read 1205996 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512768, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 253, 506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1086)
[0000][PE] mean and std.dev: (333.17, 234.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.59, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1528, 2907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6349)
[0000][PE] mean and std.dev: (1626.00, 698.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 395.024 CPU sec, 22.099 real sec
[0000] Calling mem_process_seqs.., task: 2197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512411, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 825, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (949.83, 657.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.50, 113.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205996 reads in 399.538 CPU sec, 22.385 real sec
[0000] Calling mem_process_seqs.., task: 2198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205986
	[0000][ M::kt_pipeline] read 1205986 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512804, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 355, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 701)
[0000][PE] mean and std.dev: (315.27, 121.89)
[0000][PE] low and high boundaries for proper pairs: (1, 848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.70, 113.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 395.881 CPU sec, 22.159 real sec
[0000] Calling mem_process_seqs.., task: 2199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206002
	[0000][ M::kt_pipeline] read 1206002 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512548, 4, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.62, 113.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205986 reads in 397.772 CPU sec, 22.240 real sec
[0000] Calling mem_process_seqs.., task: 2200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 512510, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 418, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3779)
[0000][PE] mean and std.dev: (857.71, 754.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.76, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1545, 2583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5841)
[0000][PE] mean and std.dev: (1510.75, 811.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206002 reads in 397.341 CPU sec, 22.256 real sec
[0000] Calling mem_process_seqs.., task: 2201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205924
	[0000][ M::kt_pipeline] read 1205924 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512815, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 365, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1720)
[0000][PE] mean and std.dev: (421.10, 248.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.81, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 398.748 CPU sec, 22.306 real sec
[0000] Calling mem_process_seqs.., task: 2202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205868
	[0000][ M::kt_pipeline] read 1205868 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 513209, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 467, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1642)
[0000][PE] mean and std.dev: (468.07, 277.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.92, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205924 reads in 395.325 CPU sec, 22.159 real sec
[0000] Calling mem_process_seqs.., task: 2203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205868
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512821, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 994, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6674)
[0000][PE] mean and std.dev: (1431.07, 1314.85)
[0000][PE] low and high boundaries for proper pairs: (1, 8798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.37, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205868 reads in 394.410 CPU sec, 22.084 real sec
[0000] Calling mem_process_seqs.., task: 2204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205852
	[0000][ M::kt_pipeline] read 1205852 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512553, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 820, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (878.25, 725.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 406.234 CPU sec, 22.729 real sec
[0000] Calling mem_process_seqs.., task: 2205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205944
	[0000][ M::kt_pipeline] read 1205944 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512726, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 460, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (737.73, 624.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.68, 113.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1340, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5547)
[0000][PE] mean and std.dev: (1422.91, 922.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7145)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205852 reads in 394.695 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 2206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205968
	[0000][ M::kt_pipeline] read 1205968 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513062, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 442, 809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1733)
[0000][PE] mean and std.dev: (439.83, 246.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.56, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1299, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (1194.56, 490.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205944 reads in 395.108 CPU sec, 22.117 real sec
[0000] Calling mem_process_seqs.., task: 2207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 513433, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 396, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (764.24, 721.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205968 reads in 395.689 CPU sec, 22.174 real sec
[0000] Calling mem_process_seqs.., task: 2208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205932
	[0000][ M::kt_pipeline] read 1205932 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 512594, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 993, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3095)
[0000][PE] mean and std.dev: (937.93, 768.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.48, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1409, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5088)
[0000][PE] mean and std.dev: (1340.77, 729.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 401.374 CPU sec, 22.475 real sec
[0000] Calling mem_process_seqs.., task: 2209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205956
	[0000][ M::kt_pipeline] read 1205956 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 513354, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 317, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4121)
[0000][PE] mean and std.dev: (713.76, 834.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.40, 113.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (437, 1659, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6017)
[0000][PE] mean and std.dev: (1638.00, 1144.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205932 reads in 395.826 CPU sec, 22.148 real sec
[0000] Calling mem_process_seqs.., task: 2210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205930
	[0000][ M::kt_pipeline] read 1205930 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513039, 6, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 446, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3240)
[0000][PE] mean and std.dev: (687.00, 461.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205956 reads in 399.307 CPU sec, 22.351 real sec
[0000] Calling mem_process_seqs.., task: 2211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205988
	[0000][ M::kt_pipeline] read 1205988 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 512334, 0, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 308, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2028)
[0000][PE] mean and std.dev: (430.95, 335.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.22, 113.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205930 reads in 399.119 CPU sec, 22.355 real sec
[0000] Calling mem_process_seqs.., task: 2212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 513229, 8, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.78, 113.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205988 reads in 395.363 CPU sec, 22.152 real sec
[0000] Calling mem_process_seqs.., task: 2213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206084
	[0000][ M::kt_pipeline] read 1206084 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512770, 2, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 421, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4263)
[0000][PE] mean and std.dev: (684.54, 573.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.66, 113.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 396.373 CPU sec, 22.179 real sec
[0000] Calling mem_process_seqs.., task: 2214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205994
	[0000][ M::kt_pipeline] read 1205994 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512582, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 394, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (725.73, 650.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.69, 113.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206084 reads in 400.136 CPU sec, 22.429 real sec
[0000] Calling mem_process_seqs.., task: 2215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 513138, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 836, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (800.18, 544.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.42, 113.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205994 reads in 395.079 CPU sec, 22.115 real sec
[0000] Calling mem_process_seqs.., task: 2216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206012
	[0000][ M::kt_pipeline] read 1206012 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 513403, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 302, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (668.64, 598.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 473, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.60, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 984, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2386)
[0000][PE] mean and std.dev: (1092.70, 433.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 394.397 CPU sec, 22.068 real sec
[0000] Calling mem_process_seqs.., task: 2217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205948
	[0000][ M::kt_pipeline] read 1205948 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512960, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 461, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4362)
[0000][PE] mean and std.dev: (977.92, 947.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206012 reads in 396.409 CPU sec, 22.176 real sec
[0000] Calling mem_process_seqs.., task: 2218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206030
	[0000][ M::kt_pipeline] read 1206030 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 512796, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 717, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2962)
[0000][PE] mean and std.dev: (665.07, 402.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.60, 113.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205948 reads in 402.458 CPU sec, 22.552 real sec
[0000] Calling mem_process_seqs.., task: 2219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205970
	[0000][ M::kt_pipeline] read 1205970 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 513143, 8, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (847, 1329, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (1211.27, 760.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 473, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (103, 853)
[0000][PE] mean and std.dev: (481.28, 113.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206030 reads in 399.771 CPU sec, 22.435 real sec
[0000] Calling mem_process_seqs.., task: 2220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205942
	[0000][ M::kt_pipeline] read 1205942 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 512843, 3, 7)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.71, 113.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205970 reads in 398.974 CPU sec, 22.337 real sec
[0000] Calling mem_process_seqs.., task: 2221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 512770, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1008, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4824)
[0000][PE] mean and std.dev: (928.45, 729.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.65, 113.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205942 reads in 400.720 CPU sec, 22.446 real sec
[0000] Calling mem_process_seqs.., task: 2222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205982
	[0000][ M::kt_pipeline] read 1205982 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 512437, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 428, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3004)
[0000][PE] mean and std.dev: (602.69, 428.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 398.774 CPU sec, 22.360 real sec
[0000] Calling mem_process_seqs.., task: 2223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 512449, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 375, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2948)
[0000][PE] mean and std.dev: (613.71, 424.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.49, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205982 reads in 401.838 CPU sec, 22.576 real sec
[0000] Calling mem_process_seqs.., task: 2224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 512820, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 385, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3162)
[0000][PE] mean and std.dev: (603.30, 574.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (106, 851)
[0000][PE] mean and std.dev: (481.53, 113.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1000)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 395.916 CPU sec, 22.148 real sec
[0000] Calling mem_process_seqs.., task: 2225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206096
	[0000][ M::kt_pipeline] read 1206096 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 513118, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 432, 606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1172)
[0000][PE] mean and std.dev: (400.67, 199.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.84, 113.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 394.931 CPU sec, 22.113 real sec
[0000] Calling mem_process_seqs.., task: 2226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 117714666, nseq: 788678
	[0000][ M::kt_pipeline] read 788678 sequences (117714666 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 512707, 3, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (404, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (104, 854)
[0000][PE] mean and std.dev: (481.67, 113.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206096 reads in 403.686 CPU sec, 22.663 real sec
[0000] Calling mem_process_seqs.., task: 2227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 788678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 335261, 3, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 367, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (431.44, 382.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (403, 474, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (101, 856)
[0000][PE] mean and std.dev: (481.57, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1007)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 788678 reads in 256.020 CPU sec, 14.386 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.155478 MHz
Runtime profile:

	Time taken for main_mem function: 49423.02 sec

	IO times (sec) :
	Reading IO time (reads) avg: 2376.62, (2376.62, 2376.62)
	Writing IO time (SAM) avg: 3802.46, (3802.46, 3802.46)
	Reading IO time (Reference Genome) avg: 6.61, (6.61, 6.61)
	Index read time avg: 12.35, (12.35, 12.35)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 49404.00
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 49354.87, (49354.87, 49354.87)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 19814.31, (19814.31, 19814.31)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 29338.00, (29338.00, 29338.00)
		SMEM compute avg: 9876.31, (9989.95, 9820.90)
		SAL compute avg: 3779.49, (3799.64, 3735.50)
				MEM_SA avg: 1704.61, (1707.83, 1697.88)

		BSW time, avg: 11630.92, (11634.17, 11622.96)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
