Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000286 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000206 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518940, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 698, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (897.33, 720.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.41, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1285, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (1217.05, 634.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 447.410 CPU sec, 113.751 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204874
	[0000][ M::kt_pipeline] read 1204874 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519014, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 572, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3293)
[0000][PE] mean and std.dev: (854.68, 797.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.33, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1224, 1386, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (1577.23, 861.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 438.851 CPU sec, 45.360 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204874
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518902, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 336, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (677.84, 815.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1344, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3639)
[0000][PE] mean and std.dev: (1571.93, 952.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204874 reads in 412.537 CPU sec, 38.470 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1204940
	[0000][ M::kt_pipeline] read 1204940 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519717, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 530, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2084)
[0000][PE] mean and std.dev: (512.43, 385.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.20, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1884, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (1449.90, 458.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 414.809 CPU sec, 44.629 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1204914
	[0000][ M::kt_pipeline] read 1204914 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519181, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 440, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (779.92, 796.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1425, 3038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7164)
[0000][PE] mean and std.dev: (1711.82, 1267.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204940 reads in 408.755 CPU sec, 42.203 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519355, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 579, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (604.19, 426.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 2101, 2640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6632)
[0000][PE] mean and std.dev: (1686.30, 1066.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204914 reads in 415.988 CPU sec, 46.372 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519753, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 370, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (852.29, 838.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.33, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1590, 1889, 2594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (1953.27, 958.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 409.477 CPU sec, 39.775 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519002, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 511, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2095)
[0000][PE] mean and std.dev: (511.46, 304.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.73, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1226, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4929)
[0000][PE] mean and std.dev: (1558.33, 1106.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 408.937 CPU sec, 36.941 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519732, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 1067, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (910.39, 685.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.27, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1189, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3750)
[0000][PE] mean and std.dev: (1115.00, 332.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 411.448 CPU sec, 50.826 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518729, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 1255, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (947.36, 661.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.31, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1389, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (1614.60, 909.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 416.575 CPU sec, 45.489 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519346, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 394, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2946)
[0000][PE] mean and std.dev: (524.80, 541.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.72, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1374, 4159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10629)
[0000][PE] mean and std.dev: (1953.62, 1598.70)
[0000][PE] low and high boundaries for proper pairs: (1, 13864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 407.801 CPU sec, 42.321 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204828
	[0000][ M::kt_pipeline] read 1204828 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519364, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 336, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2576)
[0000][PE] mean and std.dev: (580.46, 577.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.57, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 406.161 CPU sec, 35.970 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518882, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 673, 2759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7689)
[0000][PE] mean and std.dev: (1430.03, 1544.83)
[0000][PE] low and high boundaries for proper pairs: (1, 10154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.77, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1389, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (1234.13, 746.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204828 reads in 404.076 CPU sec, 45.909 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519169, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 393, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2570)
[0000][PE] mean and std.dev: (496.88, 400.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.36, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (515, 1165, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (1078.57, 581.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 410.041 CPU sec, 46.860 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518942, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 428, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3036)
[0000][PE] mean and std.dev: (672.68, 623.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.80, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1684, 2239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4821)
[0000][PE] mean and std.dev: (1811.57, 1131.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 402.409 CPU sec, 44.011 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204928
	[0000][ M::kt_pipeline] read 1204928 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518690, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 570, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (903.89, 894.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 407.519 CPU sec, 57.820 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519566, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 771, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4104)
[0000][PE] mean and std.dev: (909.30, 738.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.25, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204928 reads in 404.711 CPU sec, 43.564 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519837, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 451, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3987)
[0000][PE] mean and std.dev: (779.58, 785.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1280, 1386, 3146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6878)
[0000][PE] mean and std.dev: (2015.17, 1426.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 398.575 CPU sec, 44.557 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204960
	[0000][ M::kt_pipeline] read 1204960 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519122, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 415, 965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2367)
[0000][PE] mean and std.dev: (536.12, 413.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.52, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 411.176 CPU sec, 64.719 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519285, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 428, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2162)
[0000][PE] mean and std.dev: (639.54, 491.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.58, 117.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1962, 4603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11881)
[0000][PE] mean and std.dev: (2658.82, 2524.80)
[0000][PE] low and high boundaries for proper pairs: (1, 15520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204960 reads in 411.530 CPU sec, 48.140 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519577, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 688, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (794.97, 547.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.79, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1165, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2506)
[0000][PE] mean and std.dev: (1145.76, 485.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 400.178 CPU sec, 39.124 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518939, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 487, 765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1867)
[0000][PE] mean and std.dev: (395.11, 252.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1247, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3080)
[0000][PE] mean and std.dev: (1103.58, 345.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 406.006 CPU sec, 44.362 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519531, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 422, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2307)
[0000][PE] mean and std.dev: (556.50, 518.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.47, 117.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1706, 2578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6056)
[0000][PE] mean and std.dev: (2004.90, 1673.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 404.540 CPU sec, 42.937 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1204952
	[0000][ M::kt_pipeline] read 1204952 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519354, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 377, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2140)
[0000][PE] mean and std.dev: (489.94, 347.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.44, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1281, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (1172.68, 629.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 398.156 CPU sec, 41.359 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519090, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 442, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2601)
[0000][PE] mean and std.dev: (677.07, 564.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1298, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (1207.18, 548.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204952 reads in 409.148 CPU sec, 66.391 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519457, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 480, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2940)
[0000][PE] mean and std.dev: (757.35, 682.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.22, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1305, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5336)
[0000][PE] mean and std.dev: (1393.90, 729.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 406.890 CPU sec, 72.268 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519372, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 627, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3725)
[0000][PE] mean and std.dev: (770.55, 727.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.53, 117.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 407.333 CPU sec, 60.185 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518987, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 770, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3712)
[0000][PE] mean and std.dev: (1092.14, 1024.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.38, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1628, 4004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9610)
[0000][PE] mean and std.dev: (2450.94, 2028.25)
[0000][PE] low and high boundaries for proper pairs: (1, 12413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 401.116 CPU sec, 53.298 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519141, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 588, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (735.04, 599.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.32, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1430, 2224, 3398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7334)
[0000][PE] mean and std.dev: (2301.53, 1657.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 411.084 CPU sec, 58.014 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1204974
	[0000][ M::kt_pipeline] read 1204974 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519135, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 630, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4822)
[0000][PE] mean and std.dev: (969.95, 928.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.21, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 401.004 CPU sec, 56.842 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519479, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 482, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3129)
[0000][PE] mean and std.dev: (761.64, 663.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.53, 117.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1227, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (1178.08, 411.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204974 reads in 401.397 CPU sec, 54.960 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204950
	[0000][ M::kt_pipeline] read 1204950 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519234, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 474, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4100)
[0000][PE] mean and std.dev: (907.78, 833.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.57, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1225, 1790, 4868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12154)
[0000][PE] mean and std.dev: (2673.41, 2362.48)
[0000][PE] low and high boundaries for proper pairs: (1, 15797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 418.857 CPU sec, 63.553 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1204958
	[0000][ M::kt_pipeline] read 1204958 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519203, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 588, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2437)
[0000][PE] mean and std.dev: (634.46, 444.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.50, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1568, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (1456.86, 481.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204950 reads in 418.870 CPU sec, 62.235 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518862, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 447, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2140)
[0000][PE] mean and std.dev: (682.26, 538.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.66, 118.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1009, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4448)
[0000][PE] mean and std.dev: (1131.00, 661.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204958 reads in 428.980 CPU sec, 65.221 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519088, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 902, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (772.30, 483.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.88, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 999, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2234)
[0000][PE] mean and std.dev: (874.25, 297.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 407.314 CPU sec, 66.823 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519525, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 468, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (768.04, 829.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.15, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 2039, 3221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7735)
[0000][PE] mean and std.dev: (2072.56, 1551.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 420.566 CPU sec, 53.160 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519208, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 576, 809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1833)
[0000][PE] mean and std.dev: (579.15, 393.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.75, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1424, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3180)
[0000][PE] mean and std.dev: (1342.00, 537.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 409.205 CPU sec, 51.463 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204984
	[0000][ M::kt_pipeline] read 1204984 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519094, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 388, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2311)
[0000][PE] mean and std.dev: (647.76, 521.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.36, 117.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1142, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (1169.94, 546.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 412.395 CPU sec, 68.030 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205024
	[0000][ M::kt_pipeline] read 1205024 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518853, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 336, 732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1836)
[0000][PE] mean and std.dev: (462.33, 374.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 2053, 3160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7310)
[0000][PE] mean and std.dev: (2229.84, 1550.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204984 reads in 412.215 CPU sec, 60.989 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204932
	[0000][ M::kt_pipeline] read 1204932 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518983, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 687, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2951)
[0000][PE] mean and std.dev: (773.59, 620.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.19, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (684, 1285, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4317)
[0000][PE] mean and std.dev: (1272.79, 685.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205024 reads in 415.186 CPU sec, 66.258 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519106, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 383, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5564)
[0000][PE] mean and std.dev: (1012.65, 953.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.47, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1666, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5076)
[0000][PE] mean and std.dev: (1578.67, 695.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204932 reads in 413.921 CPU sec, 62.678 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519182, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 398, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (837.00, 901.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1386, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4433)
[0000][PE] mean and std.dev: (1501.25, 724.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 417.681 CPU sec, 72.732 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519190, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 443, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2525)
[0000][PE] mean and std.dev: (586.84, 430.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.54, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 1347, 3490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8086)
[0000][PE] mean and std.dev: (2216.92, 1895.70)
[0000][PE] low and high boundaries for proper pairs: (1, 10384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 416.800 CPU sec, 71.535 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519591, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 354, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1881)
[0000][PE] mean and std.dev: (514.03, 456.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.33, 117.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1264, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (643, 2058)
[0000][PE] mean and std.dev: (1197.18, 217.80)
[0000][PE] low and high boundaries for proper pairs: (326, 2341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 409.979 CPU sec, 62.751 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519576, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 790, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3364)
[0000][PE] mean and std.dev: (874.50, 744.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.58, 117.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1266, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3175)
[0000][PE] mean and std.dev: (1240.29, 611.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 414.688 CPU sec, 64.990 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519373, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 359, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4079)
[0000][PE] mean and std.dev: (850.25, 915.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.84, 118.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 411.156 CPU sec, 64.126 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519343, 10, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 483, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3327)
[0000][PE] mean and std.dev: (648.72, 615.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.45, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (403, 1016, 2559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6871)
[0000][PE] mean and std.dev: (1614.90, 1797.43)
[0000][PE] low and high boundaries for proper pairs: (1, 9027)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1206, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3483)
[0000][PE] mean and std.dev: (1358.24, 794.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 423.097 CPU sec, 73.514 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519330, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 508, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2685)
[0000][PE] mean and std.dev: (698.60, 640.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.64, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1488, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (1527.27, 751.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 428.748 CPU sec, 69.146 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519720, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 603, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (691.76, 534.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1512, 2106, 2433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (1914.18, 866.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 422.547 CPU sec, 75.433 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519113, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 907, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (745.77, 547.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.45, 117.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1194, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3550)
[0000][PE] mean and std.dev: (1310.33, 569.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 428.288 CPU sec, 81.242 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519302, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 819, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (954.80, 1100.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 1688, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4502)
[0000][PE] mean and std.dev: (1604.69, 756.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 417.165 CPU sec, 67.265 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518784, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 327, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3664)
[0000][PE] mean and std.dev: (681.85, 764.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.39, 117.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 984, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (1251.27, 891.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 424.287 CPU sec, 71.135 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518855, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 455, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3734)
[0000][PE] mean and std.dev: (706.30, 636.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.37, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1546, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1293.45, 634.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 423.270 CPU sec, 73.299 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519651, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 307, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2600)
[0000][PE] mean and std.dev: (407.78, 385.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.65, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1259, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3836)
[0000][PE] mean and std.dev: (1442.38, 801.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 427.355 CPU sec, 79.011 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519404, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 561, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6172)
[0000][PE] mean and std.dev: (1079.00, 1306.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.65, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1170, 3761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9229)
[0000][PE] mean and std.dev: (2193.00, 1464.36)
[0000][PE] low and high boundaries for proper pairs: (1, 11963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 414.414 CPU sec, 63.797 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518916, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 417, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4954)
[0000][PE] mean and std.dev: (1098.45, 1409.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.48, 117.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1298, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6248)
[0000][PE] mean and std.dev: (1470.75, 1108.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 421.177 CPU sec, 66.606 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204958
	[0000][ M::kt_pipeline] read 1204958 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519487, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 413, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2519)
[0000][PE] mean and std.dev: (570.52, 534.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.44, 117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1315, 1502, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (41, 3226)
[0000][PE] mean and std.dev: (1554.12, 600.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 416.539 CPU sec, 68.692 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204970
	[0000][ M::kt_pipeline] read 1204970 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519643, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 443, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (724.14, 678.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (694, 1207, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3403)
[0000][PE] mean and std.dev: (1083.33, 607.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204958 reads in 425.679 CPU sec, 80.800 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1204944
	[0000][ M::kt_pipeline] read 1204944 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519443, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 536, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2310)
[0000][PE] mean and std.dev: (639.20, 464.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.59, 118.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 965, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2521)
[0000][PE] mean and std.dev: (1016.10, 486.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204970 reads in 413.449 CPU sec, 70.391 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519540, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 577, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (811.67, 625.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1382, 2291, 3964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9128)
[0000][PE] mean and std.dev: (2917.23, 2138.35)
[0000][PE] low and high boundaries for proper pairs: (1, 11710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204944 reads in 430.637 CPU sec, 76.619 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204950
	[0000][ M::kt_pipeline] read 1204950 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519703, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 581, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (810.82, 591.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 432.102 CPU sec, 81.077 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519258, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 415, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2539)
[0000][PE] mean and std.dev: (624.84, 526.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.59, 118.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1376, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1223.00, 644.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204950 reads in 425.269 CPU sec, 76.511 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519230, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 388, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3365)
[0000][PE] mean and std.dev: (697.05, 677.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1529, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4333)
[0000][PE] mean and std.dev: (1531.45, 793.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 413.181 CPU sec, 63.860 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519373, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 439, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3990)
[0000][PE] mean and std.dev: (771.21, 809.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 2168, 3006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7398)
[0000][PE] mean and std.dev: (2163.29, 1598.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 408.214 CPU sec, 50.231 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519254, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 388, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2537)
[0000][PE] mean and std.dev: (551.16, 468.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1149, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2521)
[0000][PE] mean and std.dev: (1148.00, 238.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 407.736 CPU sec, 65.706 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518861, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 473, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2533)
[0000][PE] mean and std.dev: (603.52, 564.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.69, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1484, 1674, 2636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4940)
[0000][PE] mean and std.dev: (1906.29, 956.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 420.335 CPU sec, 48.389 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519700, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 463, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3497)
[0000][PE] mean and std.dev: (761.90, 815.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.21, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1258, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5817)
[0000][PE] mean and std.dev: (1738.81, 1130.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 417.457 CPU sec, 63.953 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519170, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 1166, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3950)
[0000][PE] mean and std.dev: (1091.12, 907.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.49, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 968, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1899)
[0000][PE] mean and std.dev: (764.43, 331.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 407.347 CPU sec, 57.884 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519004, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 483, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2117)
[0000][PE] mean and std.dev: (615.87, 553.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.41, 117.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1124, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (1339.00, 890.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 411.802 CPU sec, 68.176 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1204904
	[0000][ M::kt_pipeline] read 1204904 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519275, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1285, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4840)
[0000][PE] mean and std.dev: (1152.41, 909.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.56, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1525, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (1406.76, 605.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 407.221 CPU sec, 59.291 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204966
	[0000][ M::kt_pipeline] read 1204966 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519353, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 368, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3313)
[0000][PE] mean and std.dev: (681.76, 658.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.40, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1274, 1552, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (322, 2702)
[0000][PE] mean and std.dev: (1486.54, 538.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204904 reads in 413.851 CPU sec, 62.777 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519622, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 663, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (974.09, 1019.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.68, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1367, 1650, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (1720.17, 611.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204966 reads in 414.670 CPU sec, 64.266 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519056, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 447, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (632.95, 563.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1050, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2299)
[0000][PE] mean and std.dev: (924.08, 415.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 408.825 CPU sec, 64.448 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204912
	[0000][ M::kt_pipeline] read 1204912 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518964, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 495, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (682.96, 513.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.46, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 402.939 CPU sec, 55.603 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519688, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 322, 755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1935)
[0000][PE] mean and std.dev: (452.84, 501.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.66, 118.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1456, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (1523.00, 800.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204912 reads in 400.040 CPU sec, 48.526 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519101, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 498, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (879.07, 906.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.56, 117.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1322, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4055)
[0000][PE] mean and std.dev: (1355.12, 658.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 402.489 CPU sec, 62.054 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519726, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 394, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2452)
[0000][PE] mean and std.dev: (703.45, 607.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1308, 1430, 2586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5142)
[0000][PE] mean and std.dev: (1712.20, 985.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 402.894 CPU sec, 58.767 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518776, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 720, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4591)
[0000][PE] mean and std.dev: (995.79, 843.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.73, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1336, 2592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6018)
[0000][PE] mean and std.dev: (1492.67, 996.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 412.842 CPU sec, 61.122 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204932
	[0000][ M::kt_pipeline] read 1204932 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519383, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 366, 751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1751)
[0000][PE] mean and std.dev: (438.52, 340.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.65, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (544, 1057, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3964)
[0000][PE] mean and std.dev: (1091.57, 689.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 401.979 CPU sec, 62.015 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519345, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 425, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2419)
[0000][PE] mean and std.dev: (635.52, 577.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1921, 3602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8716)
[0000][PE] mean and std.dev: (2232.94, 1513.03)
[0000][PE] low and high boundaries for proper pairs: (1, 11273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204932 reads in 415.122 CPU sec, 70.965 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1204930
	[0000][ M::kt_pipeline] read 1204930 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519110, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 784, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4670)
[0000][PE] mean and std.dev: (1007.07, 865.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.73, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1225, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (1028.27, 470.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 399.919 CPU sec, 60.252 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519215, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 903, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3769)
[0000][PE] mean and std.dev: (1036.20, 792.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.78, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1211, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1486.36, 705.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204930 reads in 404.357 CPU sec, 58.506 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519176, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 390, 806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1888)
[0000][PE] mean and std.dev: (543.92, 422.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.47, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1781, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5447)
[0000][PE] mean and std.dev: (1890.08, 1154.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 399.884 CPU sec, 53.522 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519162, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 416, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2626)
[0000][PE] mean and std.dev: (619.23, 482.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.80, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1446, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (1722.33, 1065.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 422.522 CPU sec, 70.198 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1204928
	[0000][ M::kt_pipeline] read 1204928 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518814, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 885, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3712)
[0000][PE] mean and std.dev: (948.89, 863.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.41, 117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 972, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (955.67, 400.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 404.194 CPU sec, 60.685 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519215, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 438, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (675.10, 648.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.83, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (619, 1404, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5647)
[0000][PE] mean and std.dev: (1655.15, 1413.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204928 reads in 407.743 CPU sec, 65.547 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518964, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 447, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (660.44, 675.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.38, 117.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1600, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (1478.64, 787.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 414.711 CPU sec, 61.598 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518972, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 1247, 2466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6590)
[0000][PE] mean and std.dev: (1418.84, 1180.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.59, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1480, 2548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6024)
[0000][PE] mean and std.dev: (1386.33, 811.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 405.858 CPU sec, 57.446 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204820
	[0000][ M::kt_pipeline] read 1204820 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519105, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 472, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (770.41, 752.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1780, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4786)
[0000][PE] mean and std.dev: (1595.54, 1003.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 409.860 CPU sec, 68.635 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519945, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 424, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2854)
[0000][PE] mean and std.dev: (703.83, 643.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.67, 118.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1310, 2703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5691)
[0000][PE] mean and std.dev: (1537.23, 810.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204820 reads in 397.612 CPU sec, 54.086 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519162, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 367, 830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1990)
[0000][PE] mean and std.dev: (553.43, 495.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1302, 1821, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4398)
[0000][PE] mean and std.dev: (1887.80, 821.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5430)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 402.421 CPU sec, 59.688 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519711, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 482, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2994)
[0000][PE] mean and std.dev: (662.93, 479.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.37, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 2240, 3437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8223)
[0000][PE] mean and std.dev: (2293.47, 1771.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 408.435 CPU sec, 72.059 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204980
	[0000][ M::kt_pipeline] read 1204980 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519412, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 461, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3096)
[0000][PE] mean and std.dev: (679.71, 560.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.52, 117.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1344, 1981, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (1792.08, 776.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 403.557 CPU sec, 57.858 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519388, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 421, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2863)
[0000][PE] mean and std.dev: (612.12, 561.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1247, 3454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8796)
[0000][PE] mean and std.dev: (2085.77, 2126.37)
[0000][PE] low and high boundaries for proper pairs: (1, 11467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204980 reads in 405.267 CPU sec, 62.008 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519302, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 422, 792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2008)
[0000][PE] mean and std.dev: (532.41, 484.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.33, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1301, 3306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7652)
[0000][PE] mean and std.dev: (1791.62, 1281.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 400.292 CPU sec, 55.048 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519408, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 421, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (817.55, 832.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.38, 117.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1326, 2880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6510)
[0000][PE] mean and std.dev: (1947.33, 1426.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 401.501 CPU sec, 54.913 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519247, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 463, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2092)
[0000][PE] mean and std.dev: (588.10, 334.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.36, 117.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1586, 3153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7391)
[0000][PE] mean and std.dev: (2136.44, 2025.11)
[0000][PE] low and high boundaries for proper pairs: (1, 10237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 410.551 CPU sec, 67.032 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519047, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 447, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (702.18, 611.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.53, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1234, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 2545)
[0000][PE] mean and std.dev: (1233.47, 383.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 408.570 CPU sec, 64.055 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519264, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 425, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3609)
[0000][PE] mean and std.dev: (702.37, 799.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 1578, 3313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7463)
[0000][PE] mean and std.dev: (2030.67, 1448.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 413.716 CPU sec, 60.120 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518998, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 463, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3313)
[0000][PE] mean and std.dev: (865.75, 868.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.86, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1500, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (1394.50, 635.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 412.308 CPU sec, 64.426 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519636, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 510, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2559)
[0000][PE] mean and std.dev: (603.21, 518.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.62, 117.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1102, 2768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6430)
[0000][PE] mean and std.dev: (1770.94, 1246.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 399.651 CPU sec, 58.479 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519008, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 422, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (703.74, 624.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.87, 118.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1456, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (1190.40, 596.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 419.460 CPU sec, 66.669 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204954
	[0000][ M::kt_pipeline] read 1204954 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519469, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 477, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3219)
[0000][PE] mean and std.dev: (720.09, 610.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.36, 117.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1675, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6562)
[0000][PE] mean and std.dev: (1949.94, 1118.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 403.825 CPU sec, 58.245 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518994, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 486, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3551)
[0000][PE] mean and std.dev: (812.00, 765.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.72, 117.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1330, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4278)
[0000][PE] mean and std.dev: (1524.65, 826.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204954 reads in 413.243 CPU sec, 67.999 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519457, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1015, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4264)
[0000][PE] mean and std.dev: (1028.58, 814.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.34, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1248, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5874)
[0000][PE] mean and std.dev: (1839.29, 1236.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 406.438 CPU sec, 65.491 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519801, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 354, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (580.11, 557.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.33, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1099, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (1062.31, 540.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 411.225 CPU sec, 66.347 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519577, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 746, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3670)
[0000][PE] mean and std.dev: (950.48, 906.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.23, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1346, 1766, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4535)
[0000][PE] mean and std.dev: (1648.33, 412.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 415.727 CPU sec, 67.330 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204982
	[0000][ M::kt_pipeline] read 1204982 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519393, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 850, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4635)
[0000][PE] mean and std.dev: (1008.72, 941.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.37, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1686, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4608)
[0000][PE] mean and std.dev: (1494.94, 615.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 411.315 CPU sec, 61.923 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519435, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 385, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (627.19, 522.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.64, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1726, 3010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7234)
[0000][PE] mean and std.dev: (1855.88, 1342.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9346)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204982 reads in 401.109 CPU sec, 52.145 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518676, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 423, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (875.74, 900.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.65, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1377, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3807)
[0000][PE] mean and std.dev: (1439.43, 812.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 407.588 CPU sec, 64.390 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519128, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 565, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (831.72, 808.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 969, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (67, 2102)
[0000][PE] mean and std.dev: (863.38, 372.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 408.736 CPU sec, 59.543 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519314, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 484, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5321)
[0000][PE] mean and std.dev: (1126.28, 1281.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.36, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1784, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3761)
[0000][PE] mean and std.dev: (1591.86, 580.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 408.111 CPU sec, 66.950 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519155, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 687, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4527)
[0000][PE] mean and std.dev: (904.83, 746.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1169, 1770, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4430)
[0000][PE] mean and std.dev: (1570.65, 664.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 404.135 CPU sec, 60.813 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1204854
	[0000][ M::kt_pipeline] read 1204854 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519518, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 387, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4084)
[0000][PE] mean and std.dev: (644.05, 649.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.45, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 404.946 CPU sec, 54.426 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519078, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 389, 777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1929)
[0000][PE] mean and std.dev: (519.90, 413.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.80, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204854 reads in 411.450 CPU sec, 61.217 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519331, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 595, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (815.38, 634.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1339, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (1628.00, 1098.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 408.643 CPU sec, 54.813 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204984
	[0000][ M::kt_pipeline] read 1204984 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519267, 1, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 531, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2483)
[0000][PE] mean and std.dev: (601.56, 447.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 407.652 CPU sec, 60.017 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1204994
	[0000][ M::kt_pipeline] read 1204994 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519305, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 410, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (711.85, 701.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.78, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1426, 1635, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5014)
[0000][PE] mean and std.dev: (1756.33, 820.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204984 reads in 404.940 CPU sec, 61.729 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519274, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 482, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5308)
[0000][PE] mean and std.dev: (969.64, 972.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.87, 118.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204994 reads in 405.306 CPU sec, 64.626 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518989, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 393, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (564.32, 604.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1277, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (1331.10, 595.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 412.924 CPU sec, 64.594 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519446, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 748, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (984.14, 1005.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.37, 117.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1144, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5867)
[0000][PE] mean and std.dev: (1787.31, 1523.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 399.036 CPU sec, 55.217 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519184, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 359, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (659.27, 655.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.35, 118.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1250, 1555, 2811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5933)
[0000][PE] mean and std.dev: (1868.92, 976.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 405.819 CPU sec, 60.589 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519400, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 388, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2390)
[0000][PE] mean and std.dev: (494.81, 375.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 2079, 5387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14245)
[0000][PE] mean and std.dev: (2575.23, 2054.13)
[0000][PE] low and high boundaries for proper pairs: (1, 18674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 404.467 CPU sec, 59.544 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519145, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 316, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2264)
[0000][PE] mean and std.dev: (542.48, 521.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.53, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 412.249 CPU sec, 68.089 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204944
	[0000][ M::kt_pipeline] read 1204944 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519768, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 388, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2787)
[0000][PE] mean and std.dev: (662.00, 636.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.38, 117.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1599, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4992)
[0000][PE] mean and std.dev: (1717.82, 1080.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 400.297 CPU sec, 53.322 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519313, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 348, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (838.96, 953.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.44, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1592, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (1478.27, 681.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204944 reads in 417.825 CPU sec, 64.496 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519393, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 376, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2257)
[0000][PE] mean and std.dev: (439.74, 310.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.87, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1147, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (1206.21, 627.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 409.385 CPU sec, 67.771 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519347, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 386, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2680)
[0000][PE] mean and std.dev: (721.76, 638.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (618, 1078, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (1200.76, 757.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 407.315 CPU sec, 67.959 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519155, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 707, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (994.18, 858.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.46, 118.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (570, 1071, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7461)
[0000][PE] mean and std.dev: (1902.55, 1995.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 404.110 CPU sec, 55.078 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 519541, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 931, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2714)
[0000][PE] mean and std.dev: (678.23, 458.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.59, 118.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (560, 1200, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4853)
[0000][PE] mean and std.dev: (1409.08, 1128.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 397.552 CPU sec, 57.872 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1204994
	[0000][ M::kt_pipeline] read 1204994 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519480, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 382, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3145)
[0000][PE] mean and std.dev: (661.92, 728.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1643, 2593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6165)
[0000][PE] mean and std.dev: (1643.27, 1294.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 406.725 CPU sec, 55.340 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1204944
	[0000][ M::kt_pipeline] read 1204944 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 519463, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (660, 843, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (1055.69, 695.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.64, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1222, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (1044.11, 521.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204994 reads in 411.828 CPU sec, 58.047 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519423, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 521, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (865.19, 912.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1647, 6944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18520)
[0000][PE] mean and std.dev: (3051.23, 2557.52)
[0000][PE] low and high boundaries for proper pairs: (1, 24308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204944 reads in 413.737 CPU sec, 64.553 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204922
	[0000][ M::kt_pipeline] read 1204922 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 519186, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 432, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3522)
[0000][PE] mean and std.dev: (785.85, 872.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.21, 117.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1179, 2798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6678)
[0000][PE] mean and std.dev: (1661.63, 1079.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 406.767 CPU sec, 59.545 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519275, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 431, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (788.92, 779.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.83, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1672, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4234)
[0000][PE] mean and std.dev: (1460.85, 819.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204922 reads in 404.861 CPU sec, 59.101 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519505, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 412, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (697.70, 668.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.55, 117.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1261, 3013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7345)
[0000][PE] mean and std.dev: (1784.38, 1652.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 419.563 CPU sec, 68.194 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519139, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 352, 778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1870)
[0000][PE] mean and std.dev: (358.00, 272.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1682, 1813, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (78, 4088)
[0000][PE] mean and std.dev: (2106.60, 914.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 410.765 CPU sec, 66.052 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519160, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 1032, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5799)
[0000][PE] mean and std.dev: (1359.95, 1256.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1914, 3285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7775)
[0000][PE] mean and std.dev: (2229.00, 1791.29)
[0000][PE] low and high boundaries for proper pairs: (1, 10020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 401.303 CPU sec, 63.341 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519124, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 457, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (935.80, 847.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.46, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1413, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3245)
[0000][PE] mean and std.dev: (1272.56, 475.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 398.009 CPU sec, 57.233 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519269, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 536, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2343)
[0000][PE] mean and std.dev: (544.59, 384.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1619, 2489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5341)
[0000][PE] mean and std.dev: (1683.46, 807.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 401.477 CPU sec, 56.288 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519522, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 568, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3808)
[0000][PE] mean and std.dev: (769.04, 707.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.51, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1359, 3167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7563)
[0000][PE] mean and std.dev: (1747.18, 1093.13)
[0000][PE] low and high boundaries for proper pairs: (1, 9761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 401.867 CPU sec, 63.808 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519286, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 571, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4117)
[0000][PE] mean and std.dev: (1018.27, 938.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1206, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (1405.29, 762.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 400.274 CPU sec, 59.019 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519134, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 612, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2862)
[0000][PE] mean and std.dev: (658.00, 486.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1510, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4614)
[0000][PE] mean and std.dev: (1428.20, 767.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 402.705 CPU sec, 57.125 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 519451, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 338, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2938)
[0000][PE] mean and std.dev: (446.55, 379.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.51, 117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 1102, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3937)
[0000][PE] mean and std.dev: (1105.07, 604.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 418.132 CPU sec, 62.401 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519002, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 555, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4449)
[0000][PE] mean and std.dev: (1058.35, 952.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.31, 117.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (659, 1445, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4145)
[0000][PE] mean and std.dev: (1348.75, 762.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 399.613 CPU sec, 60.308 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1204958
	[0000][ M::kt_pipeline] read 1204958 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519541, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 937, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4637)
[0000][PE] mean and std.dev: (1157.00, 1203.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.38, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 994, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (1155.93, 581.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 395.857 CPU sec, 58.432 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518784, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 839, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2828)
[0000][PE] mean and std.dev: (748.29, 491.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.21, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204958 reads in 406.761 CPU sec, 59.061 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518906, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 742, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3301)
[0000][PE] mean and std.dev: (987.80, 784.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (508, 968, 2628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6868)
[0000][PE] mean and std.dev: (1509.76, 1213.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 399.794 CPU sec, 51.293 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204962
	[0000][ M::kt_pipeline] read 1204962 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518955, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 781, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (876.90, 630.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.55, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1480, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (1444.57, 744.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 399.773 CPU sec, 56.625 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204926
	[0000][ M::kt_pipeline] read 1204926 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519445, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 639, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (1050.35, 973.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.48, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1621, 2329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5203)
[0000][PE] mean and std.dev: (1785.89, 1248.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204962 reads in 408.807 CPU sec, 60.004 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519380, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 518, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3491)
[0000][PE] mean and std.dev: (790.48, 596.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.42, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1261, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (1562.53, 1083.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204926 reads in 403.443 CPU sec, 55.368 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204980
	[0000][ M::kt_pipeline] read 1204980 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519605, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 433, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3200)
[0000][PE] mean and std.dev: (564.52, 569.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.46, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1317, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3481)
[0000][PE] mean and std.dev: (1442.46, 816.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 396.915 CPU sec, 50.459 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204988
	[0000][ M::kt_pipeline] read 1204988 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519408, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 471, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4506)
[0000][PE] mean and std.dev: (978.38, 1098.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.69, 117.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1433, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (1501.75, 720.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204980 reads in 405.332 CPU sec, 61.552 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518989, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 455, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (682.00, 583.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.71, 117.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1418, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5406)
[0000][PE] mean and std.dev: (1800.12, 1076.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204988 reads in 408.036 CPU sec, 61.061 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519544, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 296, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 830)
[0000][PE] mean and std.dev: (281.87, 190.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.09, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1652, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1409.70, 870.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 397.120 CPU sec, 54.687 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518956, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 494, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (902.10, 983.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.65, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1297, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5464)
[0000][PE] mean and std.dev: (1739.20, 1169.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 405.281 CPU sec, 58.702 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519289, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 536, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (644.44, 549.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.45, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1244, 1463, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5036)
[0000][PE] mean and std.dev: (1671.20, 804.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 398.899 CPU sec, 60.942 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519012, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 404, 784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1730)
[0000][PE] mean and std.dev: (452.86, 329.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.23, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1207, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (1278.64, 658.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 402.114 CPU sec, 55.831 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519072, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 378, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2166)
[0000][PE] mean and std.dev: (485.62, 399.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.46, 117.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 1416, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5310)
[0000][PE] mean and std.dev: (1422.47, 1136.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 400.457 CPU sec, 48.498 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1204938
	[0000][ M::kt_pipeline] read 1204938 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519542, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 534, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4063)
[0000][PE] mean and std.dev: (692.13, 633.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.45, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1340, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4459)
[0000][PE] mean and std.dev: (1482.52, 869.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 401.662 CPU sec, 51.121 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519378, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 621, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3805)
[0000][PE] mean and std.dev: (736.14, 654.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.31, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 1435, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3766)
[0000][PE] mean and std.dev: (1475.40, 380.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204938 reads in 401.026 CPU sec, 55.096 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519431, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (478, 796, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3766)
[0000][PE] mean and std.dev: (1027.39, 837.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.24, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1233, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (1219.73, 598.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 423.204 CPU sec, 56.928 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519141, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 578, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2394)
[0000][PE] mean and std.dev: (554.72, 445.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1110, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2382)
[0000][PE] mean and std.dev: (979.93, 406.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 419.815 CPU sec, 62.854 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519235, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 399, 724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1726)
[0000][PE] mean and std.dev: (479.96, 372.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.55, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 989, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (1080.60, 377.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 412.603 CPU sec, 60.690 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519163, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 576, 3176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8956)
[0000][PE] mean and std.dev: (1890.00, 2105.19)
[0000][PE] low and high boundaries for proper pairs: (1, 11846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1318, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (1451.56, 806.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 408.937 CPU sec, 56.326 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518988, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 536, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2433)
[0000][PE] mean and std.dev: (573.27, 391.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.28, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (444, 980, 2876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7740)
[0000][PE] mean and std.dev: (1746.62, 1959.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 403.708 CPU sec, 55.309 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519768, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 367, 821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1997)
[0000][PE] mean and std.dev: (469.09, 420.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.53, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1174, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (1234.60, 582.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 394.244 CPU sec, 52.854 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519720, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 433, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2935)
[0000][PE] mean and std.dev: (683.55, 657.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.49, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1518, 2752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6310)
[0000][PE] mean and std.dev: (1779.08, 1266.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 397.132 CPU sec, 53.497 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204904
	[0000][ M::kt_pipeline] read 1204904 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519660, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 741, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (994.40, 1104.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.38, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 397.838 CPU sec, 60.289 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519406, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 464, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2978)
[0000][PE] mean and std.dev: (687.04, 738.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1285, 3040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7112)
[0000][PE] mean and std.dev: (1786.53, 1147.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204904 reads in 416.388 CPU sec, 53.944 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518901, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 477, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3778)
[0000][PE] mean and std.dev: (780.05, 679.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.41, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1639, 2542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5752)
[0000][PE] mean and std.dev: (1967.23, 1302.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 399.111 CPU sec, 59.408 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1204948
	[0000][ M::kt_pipeline] read 1204948 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518946, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 342, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2704)
[0000][PE] mean and std.dev: (470.13, 396.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.54, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1555, 2849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6187)
[0000][PE] mean and std.dev: (1932.54, 1170.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 405.629 CPU sec, 62.920 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519500, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 535, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (851.60, 709.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.65, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1097, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2219)
[0000][PE] mean and std.dev: (823.18, 425.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204948 reads in 400.057 CPU sec, 57.444 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519483, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 1212, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6009)
[0000][PE] mean and std.dev: (1435.81, 1445.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.46, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 2141, 2978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6920)
[0000][PE] mean and std.dev: (2038.50, 1189.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 399.392 CPU sec, 51.012 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204952
	[0000][ M::kt_pipeline] read 1204952 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518800, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 351, 601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1291)
[0000][PE] mean and std.dev: (409.52, 303.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.24, 117.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1093, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (1313.68, 678.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 403.067 CPU sec, 53.542 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519256, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 1306, 3105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8371)
[0000][PE] mean and std.dev: (1642.25, 1259.70)
[0000][PE] low and high boundaries for proper pairs: (1, 11004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.36, 117.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1214, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (983.40, 492.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204952 reads in 403.431 CPU sec, 60.212 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519406, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 660, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4149)
[0000][PE] mean and std.dev: (957.17, 956.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.49, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1728, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5321)
[0000][PE] mean and std.dev: (1726.41, 828.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 403.600 CPU sec, 56.617 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204850
	[0000][ M::kt_pipeline] read 1204850 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519283, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 521, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (791.32, 615.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.33, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1951, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5618)
[0000][PE] mean and std.dev: (2278.59, 1374.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 400.801 CPU sec, 58.341 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519043, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 473, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2590)
[0000][PE] mean and std.dev: (379.59, 281.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.39, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1387, 1720, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (53, 3388)
[0000][PE] mean and std.dev: (1636.77, 343.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204850 reads in 394.721 CPU sec, 59.351 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519392, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 373, 721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1787)
[0000][PE] mean and std.dev: (490.88, 423.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.26, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1140, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3833)
[0000][PE] mean and std.dev: (1263.65, 742.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 405.375 CPU sec, 60.420 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519146, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 777, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (832.96, 620.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.51, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1579, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4575)
[0000][PE] mean and std.dev: (1442.47, 786.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 400.981 CPU sec, 55.282 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519383, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 503, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6802)
[0000][PE] mean and std.dev: (1251.32, 1460.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.45, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1538, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (1391.31, 581.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 400.197 CPU sec, 61.451 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204988
	[0000][ M::kt_pipeline] read 1204988 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519170, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 421, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1956)
[0000][PE] mean and std.dev: (518.00, 470.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1391, 2294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4648)
[0000][PE] mean and std.dev: (1566.32, 832.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 400.974 CPU sec, 62.811 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519283, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 758, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3175)
[0000][PE] mean and std.dev: (830.60, 673.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.69, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1395, 3173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7409)
[0000][PE] mean and std.dev: (1741.50, 1086.76)
[0000][PE] low and high boundaries for proper pairs: (1, 9527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204988 reads in 410.523 CPU sec, 64.991 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519320, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 446, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4839)
[0000][PE] mean and std.dev: (758.43, 715.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.44, 117.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1234, 2182, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4795)
[0000][PE] mean and std.dev: (1772.56, 612.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 394.471 CPU sec, 54.078 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204972
	[0000][ M::kt_pipeline] read 1204972 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519292, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 646, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3118)
[0000][PE] mean and std.dev: (807.17, 530.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1421, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (1377.11, 876.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 400.681 CPU sec, 60.141 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519050, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 493, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (630.60, 478.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.45, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1500, 3968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9936)
[0000][PE] mean and std.dev: (2306.38, 1697.18)
[0000][PE] low and high boundaries for proper pairs: (1, 12920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204972 reads in 404.986 CPU sec, 58.132 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519108, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 351, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2222)
[0000][PE] mean and std.dev: (461.74, 365.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1677, 3315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7739)
[0000][PE] mean and std.dev: (2034.09, 1306.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 398.885 CPU sec, 58.761 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 520056, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 555, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2754)
[0000][PE] mean and std.dev: (769.71, 614.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.57, 118.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1066, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3975)
[0000][PE] mean and std.dev: (1072.23, 568.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 393.143 CPU sec, 53.389 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519433, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 531, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5455)
[0000][PE] mean and std.dev: (1037.83, 958.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.26, 117.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1190, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3695)
[0000][PE] mean and std.dev: (1282.95, 652.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 399.468 CPU sec, 60.187 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204882
	[0000][ M::kt_pipeline] read 1204882 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519427, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 434, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (828.41, 757.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.75, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1392, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4371)
[0000][PE] mean and std.dev: (1484.24, 661.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 399.744 CPU sec, 52.997 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519479, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 443, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2651)
[0000][PE] mean and std.dev: (651.76, 541.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.31, 117.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1340, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (1260.53, 684.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204882 reads in 394.374 CPU sec, 49.979 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204948
	[0000][ M::kt_pipeline] read 1204948 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519457, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 739, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3012)
[0000][PE] mean and std.dev: (810.88, 613.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.80, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1342, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1384.73, 879.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 405.983 CPU sec, 53.448 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519215, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 511, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (729.81, 570.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.73, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204948 reads in 416.477 CPU sec, 55.615 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 520040, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 490, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3444)
[0000][PE] mean and std.dev: (769.71, 870.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.69, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1458, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5566)
[0000][PE] mean and std.dev: (1719.53, 1256.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 397.521 CPU sec, 63.843 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519307, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 418, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2674)
[0000][PE] mean and std.dev: (674.24, 601.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.33, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1837, 3272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8092)
[0000][PE] mean and std.dev: (2063.15, 1518.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 395.278 CPU sec, 48.811 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519546, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 457, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2416)
[0000][PE] mean and std.dev: (608.62, 456.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.40, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1318, 2825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6185)
[0000][PE] mean and std.dev: (1870.59, 1275.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 417.227 CPU sec, 63.953 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519337, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 480, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2505)
[0000][PE] mean and std.dev: (631.78, 594.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.37, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1608, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (1384.83, 418.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 405.680 CPU sec, 55.812 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519010, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 518, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (733.20, 653.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.21, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1408, 2578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5544)
[0000][PE] mean and std.dev: (1612.94, 854.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 406.605 CPU sec, 64.948 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519317, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 378, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1829)
[0000][PE] mean and std.dev: (549.72, 401.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.49, 117.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1331, 1461, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (1626.00, 789.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 402.927 CPU sec, 61.208 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519501, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 447, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2416)
[0000][PE] mean and std.dev: (555.83, 481.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.46, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1535, 2695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5973)
[0000][PE] mean and std.dev: (1783.91, 1260.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 402.652 CPU sec, 60.566 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519459, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 445, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2852)
[0000][PE] mean and std.dev: (687.38, 660.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.27, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 1788, 2929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6411)
[0000][PE] mean and std.dev: (1995.05, 1477.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 398.324 CPU sec, 54.869 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519657, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 329, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (698.62, 697.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1353, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5117)
[0000][PE] mean and std.dev: (1813.20, 1235.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 400.948 CPU sec, 57.046 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519335, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 513, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (797.07, 759.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 117.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1124, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5299)
[0000][PE] mean and std.dev: (1461.07, 1059.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 411.379 CPU sec, 64.612 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519161, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 794, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3733)
[0000][PE] mean and std.dev: (934.86, 865.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.69, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1156, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (1313.17, 681.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 410.087 CPU sec, 60.236 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518731, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 479, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1772)
[0000][PE] mean and std.dev: (460.89, 375.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1567, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5976)
[0000][PE] mean and std.dev: (1692.12, 1028.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 404.568 CPU sec, 54.825 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519591, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 358, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2592)
[0000][PE] mean and std.dev: (468.80, 449.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 118.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1303, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4315)
[0000][PE] mean and std.dev: (1314.92, 811.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 408.463 CPU sec, 63.887 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519692, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 549, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4320)
[0000][PE] mean and std.dev: (996.45, 999.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.52, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 406.186 CPU sec, 58.537 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1204954
	[0000][ M::kt_pipeline] read 1204954 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519226, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 485, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (775.33, 602.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.54, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 2001, 3020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7150)
[0000][PE] mean and std.dev: (2073.23, 1436.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 405.971 CPU sec, 63.269 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204870
	[0000][ M::kt_pipeline] read 1204870 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519522, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 456, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4803)
[0000][PE] mean and std.dev: (1120.68, 1219.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.26, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1494, 4459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11743)
[0000][PE] mean and std.dev: (2515.53, 2408.34)
[0000][PE] low and high boundaries for proper pairs: (1, 15385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204954 reads in 400.084 CPU sec, 62.984 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204870
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519340, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 539, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3016)
[0000][PE] mean and std.dev: (676.19, 598.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3945)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.42, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1902, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4956)
[0000][PE] mean and std.dev: (1686.36, 858.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204870 reads in 402.517 CPU sec, 52.806 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519631, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 411, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4238)
[0000][PE] mean and std.dev: (925.56, 962.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.48, 117.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1526, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4248)
[0000][PE] mean and std.dev: (1485.82, 856.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 423.899 CPU sec, 61.694 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519532, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 340, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2900)
[0000][PE] mean and std.dev: (555.63, 571.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.50, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1720, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3433)
[0000][PE] mean and std.dev: (1400.00, 460.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 397.823 CPU sec, 54.398 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519299, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 540, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (893.16, 858.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.22, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1234, 1716, 3405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7747)
[0000][PE] mean and std.dev: (2154.00, 1193.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 403.891 CPU sec, 61.100 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519210, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 400, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1840)
[0000][PE] mean and std.dev: (567.07, 449.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.49, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1088, 2904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6856)
[0000][PE] mean and std.dev: (1776.27, 1498.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 408.851 CPU sec, 59.179 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519116, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 495, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (792.57, 695.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 406.255 CPU sec, 62.651 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204936
	[0000][ M::kt_pipeline] read 1204936 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519557, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 371, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (795.76, 757.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.67, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1500, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3205)
[0000][PE] mean and std.dev: (1420.46, 406.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 398.618 CPU sec, 59.233 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1204916
	[0000][ M::kt_pipeline] read 1204916 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519720, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (96, 347, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (631.53, 789.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1344, 2137, 3444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7644)
[0000][PE] mean and std.dev: (2191.15, 1350.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204936 reads in 399.371 CPU sec, 53.484 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204994
	[0000][ M::kt_pipeline] read 1204994 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519134, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 386, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2731)
[0000][PE] mean and std.dev: (482.68, 456.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.27, 117.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (587, 1057, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (1159.08, 822.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204916 reads in 407.139 CPU sec, 50.441 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519061, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 408, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (727.58, 723.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.55, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1030, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (1060.17, 370.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204994 reads in 413.926 CPU sec, 53.405 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519529, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 415, 813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2111)
[0000][PE] mean and std.dev: (533.83, 511.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.69, 117.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 398.954 CPU sec, 56.620 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 519841, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 872, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2838)
[0000][PE] mean and std.dev: (691.91, 474.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.31, 117.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1243, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6346)
[0000][PE] mean and std.dev: (1595.54, 1119.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 399.625 CPU sec, 56.282 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519355, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 863, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4627)
[0000][PE] mean and std.dev: (1006.55, 1078.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.48, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1478, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4713)
[0000][PE] mean and std.dev: (1582.00, 815.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 399.039 CPU sec, 49.799 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519324, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 534, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (902.58, 880.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 2061, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5253)
[0000][PE] mean and std.dev: (1560.89, 899.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 404.971 CPU sec, 57.348 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519178, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 398, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2119)
[0000][PE] mean and std.dev: (645.74, 568.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.38, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1157, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3188)
[0000][PE] mean and std.dev: (1186.36, 448.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 402.998 CPU sec, 57.457 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519510, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 415, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (575.60, 451.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.58, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1418, 1781, 2844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5696)
[0000][PE] mean and std.dev: (2069.07, 1014.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 400.032 CPU sec, 53.664 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205006
	[0000][ M::kt_pipeline] read 1205006 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519404, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 505, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2794)
[0000][PE] mean and std.dev: (770.93, 662.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 407.569 CPU sec, 55.212 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518616, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 365, 764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1732)
[0000][PE] mean and std.dev: (365.08, 229.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.41, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1225, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3090)
[0000][PE] mean and std.dev: (1467.67, 704.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205006 reads in 394.865 CPU sec, 60.320 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519440, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (106, 341, 700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1888)
[0000][PE] mean and std.dev: (346.69, 286.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.60, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1279, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (1439.53, 729.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 399.379 CPU sec, 51.555 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519270, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 487, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (1038.85, 967.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1451, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (1289.00, 558.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 397.856 CPU sec, 47.358 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519482, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 599, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3516)
[0000][PE] mean and std.dev: (628.83, 508.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.47, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 2086, 3457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8373)
[0000][PE] mean and std.dev: (2543.85, 1976.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10831)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 394.138 CPU sec, 50.665 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204850
	[0000][ M::kt_pipeline] read 1204850 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519103, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 253, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 728)
[0000][PE] mean and std.dev: (267.54, 136.60)
[0000][PE] low and high boundaries for proper pairs: (1, 907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.73, 117.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 393.729 CPU sec, 52.071 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204962
	[0000][ M::kt_pipeline] read 1204962 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519607, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 903, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3875)
[0000][PE] mean and std.dev: (823.19, 618.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.64, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1637, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (1314.50, 642.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204850 reads in 401.801 CPU sec, 58.470 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205002
	[0000][ M::kt_pipeline] read 1205002 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519387, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 390, 868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2156)
[0000][PE] mean and std.dev: (598.00, 535.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.78, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1209, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4873)
[0000][PE] mean and std.dev: (1369.11, 736.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204962 reads in 412.599 CPU sec, 58.593 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519136, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 634, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2365)
[0000][PE] mean and std.dev: (648.46, 498.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.49, 118.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1406, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5998)
[0000][PE] mean and std.dev: (1542.00, 999.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205002 reads in 402.472 CPU sec, 49.528 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204906
	[0000][ M::kt_pipeline] read 1204906 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 519217, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 434, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2240)
[0000][PE] mean and std.dev: (565.13, 439.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1360, 1420, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4060)
[0000][PE] mean and std.dev: (1747.36, 939.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 408.973 CPU sec, 51.486 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1204994
	[0000][ M::kt_pipeline] read 1204994 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519543, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 553, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5679)
[0000][PE] mean and std.dev: (1233.74, 1289.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.37, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (704, 1326, 2542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6218)
[0000][PE] mean and std.dev: (1604.29, 1194.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204906 reads in 397.713 CPU sec, 53.633 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204950
	[0000][ M::kt_pipeline] read 1204950 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519550, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 490, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2570)
[0000][PE] mean and std.dev: (623.43, 434.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.32, 117.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204994 reads in 398.033 CPU sec, 52.612 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519118, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 420, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2047)
[0000][PE] mean and std.dev: (597.85, 543.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.50, 117.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (606, 1057, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (1202.29, 802.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204950 reads in 399.124 CPU sec, 54.064 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205000
	[0000][ M::kt_pipeline] read 1205000 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519380, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 729, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5970)
[0000][PE] mean and std.dev: (979.47, 850.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1251, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3213)
[0000][PE] mean and std.dev: (1366.74, 742.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 395.295 CPU sec, 59.076 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204930
	[0000][ M::kt_pipeline] read 1204930 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519187, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 344, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3611)
[0000][PE] mean and std.dev: (710.12, 731.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.36, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1069, 2972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6946)
[0000][PE] mean and std.dev: (1817.13, 1409.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205000 reads in 397.803 CPU sec, 56.137 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519595, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 855, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4881)
[0000][PE] mean and std.dev: (1063.25, 876.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.37, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1390, 1581, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (202, 3172)
[0000][PE] mean and std.dev: (1535.77, 525.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204930 reads in 393.930 CPU sec, 55.148 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1204960
	[0000][ M::kt_pipeline] read 1204960 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519404, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 472, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2507)
[0000][PE] mean and std.dev: (542.32, 413.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.33, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1527, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (1378.33, 570.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 391.000 CPU sec, 47.118 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518735, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 430, 767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1783)
[0000][PE] mean and std.dev: (526.36, 359.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.44, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1274, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (141, 2526)
[0000][PE] mean and std.dev: (1351.17, 407.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204960 reads in 394.899 CPU sec, 48.288 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204970
	[0000][ M::kt_pipeline] read 1204970 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519210, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 799, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4942)
[0000][PE] mean and std.dev: (1089.36, 987.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.65, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 1172, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (1108.86, 594.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4641)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 393.343 CPU sec, 47.149 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519518, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 505, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3387)
[0000][PE] mean and std.dev: (770.67, 749.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.72, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1606, 3013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6647)
[0000][PE] mean and std.dev: (1941.55, 1214.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204970 reads in 395.396 CPU sec, 47.266 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519329, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 364, 727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1717)
[0000][PE] mean and std.dev: (466.00, 366.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.37, 117.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1247, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3608)
[0000][PE] mean and std.dev: (1296.87, 690.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 392.831 CPU sec, 52.706 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519580, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 335, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (687.12, 733.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.49, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1690, 3013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6675)
[0000][PE] mean and std.dev: (2047.44, 1250.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 402.267 CPU sec, 53.653 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205186
	[0000][ M::kt_pipeline] read 1205186 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519347, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 706, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3912)
[0000][PE] mean and std.dev: (971.47, 834.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.22, 117.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1061, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5341)
[0000][PE] mean and std.dev: (1257.33, 933.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 393.250 CPU sec, 55.452 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519430, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 882, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (812.40, 574.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1294, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4442)
[0000][PE] mean and std.dev: (1350.00, 952.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205186 reads in 394.887 CPU sec, 49.629 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519224, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 455, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5372)
[0000][PE] mean and std.dev: (1134.04, 1090.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.42, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1677, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4365)
[0000][PE] mean and std.dev: (1686.21, 978.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 394.301 CPU sec, 44.939 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519318, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 731, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (808.52, 749.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.47, 117.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1245, 1668, 3338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7524)
[0000][PE] mean and std.dev: (2317.35, 1283.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 401.440 CPU sec, 56.548 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518874, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 428, 949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2299)
[0000][PE] mean and std.dev: (477.61, 436.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2974)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.41, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1633, 2453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5485)
[0000][PE] mean and std.dev: (1741.94, 1171.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 396.205 CPU sec, 45.143 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205172
	[0000][ M::kt_pipeline] read 1205172 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519805, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 895, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6465)
[0000][PE] mean and std.dev: (1480.73, 1405.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.37, 117.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1460, 2625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5799)
[0000][PE] mean and std.dev: (1569.69, 1021.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 410.734 CPU sec, 56.341 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519529, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 494, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (894.67, 867.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.32, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1558, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3827)
[0000][PE] mean and std.dev: (1506.95, 663.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205172 reads in 403.188 CPU sec, 49.984 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519381, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 431, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3578)
[0000][PE] mean and std.dev: (735.81, 621.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.66, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1437, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4678)
[0000][PE] mean and std.dev: (1542.65, 845.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 404.851 CPU sec, 51.941 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519619, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 1022, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (927.42, 680.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.32, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1137, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4576)
[0000][PE] mean and std.dev: (1357.64, 717.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 402.603 CPU sec, 57.696 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519575, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 386, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4647)
[0000][PE] mean and std.dev: (842.85, 1013.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.90, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1605, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4710)
[0000][PE] mean and std.dev: (1697.69, 953.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 399.870 CPU sec, 54.868 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519731, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 560, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (758.72, 738.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.58, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1709, 2549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6063)
[0000][PE] mean and std.dev: (1618.67, 878.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 400.087 CPU sec, 45.960 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518777, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 395, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2655)
[0000][PE] mean and std.dev: (670.00, 582.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.76, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1373, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4257)
[0000][PE] mean and std.dev: (1374.50, 721.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 406.273 CPU sec, 55.228 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519004, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 325, 509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1049)
[0000][PE] mean and std.dev: (322.55, 172.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.52, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1232, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4312)
[0000][PE] mean and std.dev: (1236.42, 711.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 401.620 CPU sec, 53.618 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519322, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 595, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1857)
[0000][PE] mean and std.dev: (624.65, 435.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.34, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1168, 1273, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (1604.45, 805.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 406.898 CPU sec, 57.298 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518992, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 403, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2919)
[0000][PE] mean and std.dev: (691.58, 695.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.49, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 1189, 2921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7265)
[0000][PE] mean and std.dev: (1675.55, 1474.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 405.781 CPU sec, 59.922 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519360, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 380, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (805.72, 772.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.80, 117.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1313, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (1329.30, 643.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 396.068 CPU sec, 55.264 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519254, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 626, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (969.73, 874.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.64, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1252, 3417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8443)
[0000][PE] mean and std.dev: (1942.28, 1857.42)
[0000][PE] low and high boundaries for proper pairs: (1, 10956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 390.325 CPU sec, 47.898 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519027, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 478, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2547)
[0000][PE] mean and std.dev: (509.27, 386.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.51, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1501, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (1503.22, 668.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 401.437 CPU sec, 56.309 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1204804
	[0000][ M::kt_pipeline] read 1204804 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519609, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 475, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1514)
[0000][PE] mean and std.dev: (563.74, 359.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1513, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (1330.23, 934.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 400.689 CPU sec, 54.140 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519460, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 723, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2698)
[0000][PE] mean and std.dev: (751.68, 604.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.65, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (596, 1151, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2579)
[0000][PE] mean and std.dev: (1060.20, 614.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204804 reads in 402.000 CPU sec, 54.890 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519256, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 455, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3129)
[0000][PE] mean and std.dev: (787.38, 762.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.94, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (550, 1198, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4879)
[0000][PE] mean and std.dev: (1219.54, 855.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 402.658 CPU sec, 57.171 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519484, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 746, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2573)
[0000][PE] mean and std.dev: (647.04, 405.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1695, 3153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7397)
[0000][PE] mean and std.dev: (2161.62, 1755.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 397.107 CPU sec, 58.336 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519057, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 584, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3943)
[0000][PE] mean and std.dev: (998.13, 876.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.36, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1113, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (1535.00, 1048.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 401.057 CPU sec, 48.426 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519658, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 360, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (631.06, 672.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1525, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (1450.80, 694.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 400.005 CPU sec, 58.412 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519193, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 475, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (592.50, 452.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.60, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1051, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (1155.47, 701.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 407.825 CPU sec, 60.755 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519126, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 366, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (608.89, 585.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1334, 1562, 3172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6848)
[0000][PE] mean and std.dev: (2321.20, 1740.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 417.030 CPU sec, 59.158 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519747, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 1110, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (947.79, 608.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.57, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 2147, 2696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5712)
[0000][PE] mean and std.dev: (1850.06, 1181.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 407.864 CPU sec, 56.150 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205154
	[0000][ M::kt_pipeline] read 1205154 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519156, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 489, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (711.96, 715.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 999, 2852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7210)
[0000][PE] mean and std.dev: (1581.35, 1236.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 397.935 CPU sec, 59.964 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519346, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 654, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4158)
[0000][PE] mean and std.dev: (947.44, 755.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.56, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1341, 2082, 3186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6876)
[0000][PE] mean and std.dev: (2169.85, 1429.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205154 reads in 397.058 CPU sec, 50.017 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519177, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 516, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (737.06, 578.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.46, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 390.743 CPU sec, 52.332 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519582, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 406, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2803)
[0000][PE] mean and std.dev: (521.81, 382.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.52, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1946, 2903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6551)
[0000][PE] mean and std.dev: (1886.08, 921.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 390.836 CPU sec, 48.336 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204994
	[0000][ M::kt_pipeline] read 1204994 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519202, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 423, 538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1200)
[0000][PE] mean and std.dev: (404.58, 248.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.44, 118.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 851, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2326)
[0000][PE] mean and std.dev: (852.00, 410.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 399.221 CPU sec, 51.936 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519162, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 441, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4188)
[0000][PE] mean and std.dev: (837.96, 837.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.40, 117.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 1190, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4744)
[0000][PE] mean and std.dev: (1215.23, 1106.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204994 reads in 396.238 CPU sec, 55.895 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205232
	[0000][ M::kt_pipeline] read 1205232 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519164, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 399, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1604)
[0000][PE] mean and std.dev: (499.62, 296.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.46, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1542, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (1438.53, 808.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 397.435 CPU sec, 56.601 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519339, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 732, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3711)
[0000][PE] mean and std.dev: (891.19, 774.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.80, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1339, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (1622.94, 665.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205232 reads in 399.309 CPU sec, 63.747 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519003, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 490, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (791.00, 735.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.25, 117.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1357, 2465, 3840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8806)
[0000][PE] mean and std.dev: (2789.57, 1610.37)
[0000][PE] low and high boundaries for proper pairs: (1, 11289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 393.163 CPU sec, 47.053 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204934
	[0000][ M::kt_pipeline] read 1204934 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519168, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 373, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2600)
[0000][PE] mean and std.dev: (488.25, 525.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1608, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3150)
[0000][PE] mean and std.dev: (1212.77, 578.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 387.283 CPU sec, 51.115 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519293, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 298, 396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 778)
[0000][PE] mean and std.dev: (296.88, 124.25)
[0000][PE] low and high boundaries for proper pairs: (1, 969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.84, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1390, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3931)
[0000][PE] mean and std.dev: (1454.58, 562.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204934 reads in 401.422 CPU sec, 60.240 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518632, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 618, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4531)
[0000][PE] mean and std.dev: (1029.38, 966.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.30, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1268, 1667, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (1592.93, 761.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 422.500 CPU sec, 55.511 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519702, 11, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 402, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2522)
[0000][PE] mean and std.dev: (601.19, 389.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (2460, 3152, 4035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7185)
[0000][PE] mean and std.dev: (2927.73, 1479.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8845)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1316, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4239)
[0000][PE] mean and std.dev: (1360.90, 919.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 393.305 CPU sec, 53.794 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519801, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 387, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2041)
[0000][PE] mean and std.dev: (467.48, 332.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.28, 117.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1746, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4227)
[0000][PE] mean and std.dev: (1390.36, 606.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 391.643 CPU sec, 54.793 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519114, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 413, 904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2102)
[0000][PE] mean and std.dev: (522.04, 424.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.27, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1558, 5658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15030)
[0000][PE] mean and std.dev: (2550.15, 2377.06)
[0000][PE] low and high boundaries for proper pairs: (1, 19716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 408.513 CPU sec, 57.465 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519214, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 396, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1508)
[0000][PE] mean and std.dev: (371.15, 163.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.83, 118.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1207, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (17, 2192)
[0000][PE] mean and std.dev: (1146.00, 339.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 390.526 CPU sec, 38.984 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519351, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 579, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2968)
[0000][PE] mean and std.dev: (707.56, 455.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.75, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 396.292 CPU sec, 51.531 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204958
	[0000][ M::kt_pipeline] read 1204958 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518975, 1, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 603, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3277)
[0000][PE] mean and std.dev: (834.84, 714.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.44, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 395.628 CPU sec, 51.988 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1204982
	[0000][ M::kt_pipeline] read 1204982 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519197, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 369, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (595.82, 576.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.47, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1649, 2612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5516)
[0000][PE] mean and std.dev: (1747.85, 829.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204958 reads in 412.078 CPU sec, 45.476 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519062, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 423, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3113)
[0000][PE] mean and std.dev: (634.76, 533.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.49, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1253, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (1156.62, 645.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204982 reads in 392.415 CPU sec, 46.699 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519264, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 558, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3611)
[0000][PE] mean and std.dev: (712.85, 686.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.38, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1083, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5542)
[0000][PE] mean and std.dev: (1497.59, 1055.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 396.252 CPU sec, 50.978 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519452, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 380, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2655)
[0000][PE] mean and std.dev: (634.93, 664.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.66, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 392.388 CPU sec, 56.770 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519254, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 408, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2839)
[0000][PE] mean and std.dev: (694.33, 600.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (721, 3866, 4564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12250)
[0000][PE] mean and std.dev: (2959.60, 2017.40)
[0000][PE] low and high boundaries for proper pairs: (1, 16093)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1303, 1386, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (1482.85, 481.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 392.129 CPU sec, 51.248 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519036, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 418, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (965.57, 1107.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.35, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1426, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (1437.10, 573.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 388.281 CPU sec, 44.713 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519322, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 473, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4794)
[0000][PE] mean and std.dev: (873.40, 960.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.82, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1359, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (1340.50, 619.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 392.514 CPU sec, 47.106 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519797, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 647, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4458)
[0000][PE] mean and std.dev: (944.29, 698.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.25, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1271, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (575, 1850)
[0000][PE] mean and std.dev: (1120.50, 198.18)
[0000][PE] low and high boundaries for proper pairs: (320, 2105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 396.333 CPU sec, 53.493 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519496, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 734, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (839.70, 634.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.77, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1087, 3435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8575)
[0000][PE] mean and std.dev: (1821.87, 1531.03)
[0000][PE] low and high boundaries for proper pairs: (1, 11145)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 389.659 CPU sec, 49.440 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518946, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 462, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4145)
[0000][PE] mean and std.dev: (916.26, 1108.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.36, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 400.012 CPU sec, 52.971 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519097, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (569, 1157, 3189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8429)
[0000][PE] mean and std.dev: (2043.50, 2068.31)
[0000][PE] low and high boundaries for proper pairs: (1, 11049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.14, 117.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1145, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5052)
[0000][PE] mean and std.dev: (1418.88, 913.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 399.629 CPU sec, 58.578 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519472, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 355, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (656.92, 677.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.55, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1849, 4494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11988)
[0000][PE] mean and std.dev: (2614.55, 2427.52)
[0000][PE] low and high boundaries for proper pairs: (1, 15735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 393.166 CPU sec, 57.364 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519069, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 646, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6239)
[0000][PE] mean and std.dev: (1154.00, 1214.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.46, 118.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1322, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (1425.36, 809.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 404.825 CPU sec, 60.045 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205000
	[0000][ M::kt_pipeline] read 1205000 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519614, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 376, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2049)
[0000][PE] mean and std.dev: (539.26, 478.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.46, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1406, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4849)
[0000][PE] mean and std.dev: (1604.15, 675.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 395.130 CPU sec, 53.936 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519352, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 402, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (586.50, 762.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.52, 117.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (687, 1371, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5235)
[0000][PE] mean and std.dev: (1581.31, 1257.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205000 reads in 396.243 CPU sec, 58.858 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518977, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 575, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (1033.67, 873.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1040, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (1069.20, 451.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 406.944 CPU sec, 61.081 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519226, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 823, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (897.40, 600.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.34, 118.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1566, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4651)
[0000][PE] mean and std.dev: (1404.64, 640.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 393.011 CPU sec, 55.074 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204960
	[0000][ M::kt_pipeline] read 1204960 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519723, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 357, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4699)
[0000][PE] mean and std.dev: (996.09, 1317.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.51, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1396, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (1389.68, 793.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 397.726 CPU sec, 57.116 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1204894
	[0000][ M::kt_pipeline] read 1204894 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519298, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 889, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3285)
[0000][PE] mean and std.dev: (858.05, 701.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.62, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 2416, 2775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6733)
[0000][PE] mean and std.dev: (1852.00, 1203.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204960 reads in 400.264 CPU sec, 60.522 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519455, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 826, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2552)
[0000][PE] mean and std.dev: (739.04, 474.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1169, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (1175.85, 665.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204894 reads in 394.586 CPU sec, 49.730 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519432, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 356, 885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2269)
[0000][PE] mean and std.dev: (466.55, 517.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.23, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1575, 2545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5773)
[0000][PE] mean and std.dev: (1747.92, 1109.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 401.002 CPU sec, 50.124 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519439, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 421, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (665.81, 615.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 118.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (437, 985, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (958.00, 475.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 399.998 CPU sec, 47.739 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518886, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 1031, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4943)
[0000][PE] mean and std.dev: (1185.56, 1016.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.45, 117.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1566, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (1388.42, 494.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 415.277 CPU sec, 50.229 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519293, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 636, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (942.47, 834.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.26, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1078, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5113)
[0000][PE] mean and std.dev: (1458.60, 868.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 401.168 CPU sec, 56.374 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519422, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 349, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2352)
[0000][PE] mean and std.dev: (570.38, 457.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.73, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1133, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (1377.58, 1057.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 396.998 CPU sec, 58.152 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519232, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 391, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (685.21, 719.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.18, 117.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1092, 2138, 5848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15360)
[0000][PE] mean and std.dev: (2879.50, 2336.40)
[0000][PE] low and high boundaries for proper pairs: (1, 20116)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1537, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4450)
[0000][PE] mean and std.dev: (1376.75, 715.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 409.806 CPU sec, 58.142 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518810, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 460, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (607.54, 545.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.56, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1223, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3850)
[0000][PE] mean and std.dev: (1177.59, 605.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 408.395 CPU sec, 49.336 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204934
	[0000][ M::kt_pipeline] read 1204934 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519275, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 369, 688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1466)
[0000][PE] mean and std.dev: (457.14, 316.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.34, 117.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 408.644 CPU sec, 51.978 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1204932
	[0000][ M::kt_pipeline] read 1204932 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519267, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 421, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3407)
[0000][PE] mean and std.dev: (770.32, 659.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.51, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204934 reads in 402.071 CPU sec, 55.077 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519471, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 360, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1491)
[0000][PE] mean and std.dev: (376.80, 244.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.92, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1542, 2635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5511)
[0000][PE] mean and std.dev: (1973.64, 1253.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204932 reads in 406.084 CPU sec, 66.068 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519586, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 434, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (717.52, 586.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.49, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 405.940 CPU sec, 49.384 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519260, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 410, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2596)
[0000][PE] mean and std.dev: (674.05, 674.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 399.103 CPU sec, 50.518 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519441, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 636, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (831.14, 647.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1305, 2694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6364)
[0000][PE] mean and std.dev: (1705.76, 1397.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 388.701 CPU sec, 40.061 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1204896
	[0000][ M::kt_pipeline] read 1204896 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519308, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 449, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (864.11, 872.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.40, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1551, 2860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6430)
[0000][PE] mean and std.dev: (1921.38, 1168.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 396.337 CPU sec, 47.619 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205002
	[0000][ M::kt_pipeline] read 1205002 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204896
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519090, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 631, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3095)
[0000][PE] mean and std.dev: (797.91, 652.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1705, 2200, 3566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7288)
[0000][PE] mean and std.dev: (2356.69, 1548.53)
[0000][PE] low and high boundaries for proper pairs: (1, 9149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204896 reads in 392.503 CPU sec, 50.970 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1204882
	[0000][ M::kt_pipeline] read 1204882 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519263, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 643, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4830)
[0000][PE] mean and std.dev: (939.15, 1016.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205002 reads in 394.347 CPU sec, 52.744 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519493, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 320, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (524.92, 495.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1413, 1806, 5024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12246)
[0000][PE] mean and std.dev: (2916.55, 2744.36)
[0000][PE] low and high boundaries for proper pairs: (1, 15857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204882 reads in 400.470 CPU sec, 61.282 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519248, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 480, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (706.35, 670.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.46, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1302, 1505, 2997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6387)
[0000][PE] mean and std.dev: (1475.25, 909.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 393.501 CPU sec, 49.636 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518957, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 494, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (841.19, 757.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.30, 117.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1415, 1640, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (317, 3062)
[0000][PE] mean and std.dev: (1455.79, 398.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 405.031 CPU sec, 55.089 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519477, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 795, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (888.04, 647.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.78, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1309, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5133)
[0000][PE] mean and std.dev: (1461.21, 1117.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 402.058 CPU sec, 65.082 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519412, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 358, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2550)
[0000][PE] mean and std.dev: (496.43, 444.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.52, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1353, 2609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6161)
[0000][PE] mean and std.dev: (1541.15, 944.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 382.058 CPU sec, 45.043 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519045, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 507, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (854.94, 718.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.61, 117.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1417, 1901, 3939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8983)
[0000][PE] mean and std.dev: (2487.85, 1530.39)
[0000][PE] low and high boundaries for proper pairs: (1, 11505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 407.191 CPU sec, 51.058 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519123, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 349, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (568.23, 586.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.58, 118.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1352, 1603, 2592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5072)
[0000][PE] mean and std.dev: (1957.40, 934.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 394.854 CPU sec, 49.070 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519419, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 471, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4041)
[0000][PE] mean and std.dev: (953.09, 948.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.47, 117.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1435, 3453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8409)
[0000][PE] mean and std.dev: (2065.53, 1931.80)
[0000][PE] low and high boundaries for proper pairs: (1, 10887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 392.630 CPU sec, 54.572 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519293, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 323, 797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1817)
[0000][PE] mean and std.dev: (425.47, 395.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.66, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1133, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (1149.08, 580.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 398.429 CPU sec, 55.492 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519393, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 449, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3009)
[0000][PE] mean and std.dev: (494.58, 469.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.31, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (424, 1229, 3759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10429)
[0000][PE] mean and std.dev: (1820.80, 1892.70)
[0000][PE] low and high boundaries for proper pairs: (1, 13764)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1448, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (1542.33, 986.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 389.775 CPU sec, 53.406 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519248, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 419, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (755.25, 775.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.35, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1667, 2705, 3594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7448)
[0000][PE] mean and std.dev: (2595.47, 1383.74)
[0000][PE] low and high boundaries for proper pairs: (1, 9375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 390.930 CPU sec, 48.732 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519333, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 621, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2768)
[0000][PE] mean and std.dev: (620.53, 497.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.64, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1617, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (1338.42, 621.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 392.228 CPU sec, 54.246 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518883, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 417, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3018)
[0000][PE] mean and std.dev: (715.05, 686.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.20, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1333, 1700, 2600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5134)
[0000][PE] mean and std.dev: (1919.94, 932.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 393.437 CPU sec, 49.814 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519511, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 696, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5404)
[0000][PE] mean and std.dev: (1103.66, 982.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 391.730 CPU sec, 49.216 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519484, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 473, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2483)
[0000][PE] mean and std.dev: (547.26, 424.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.42, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1000, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2599)
[0000][PE] mean and std.dev: (974.54, 466.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 404.978 CPU sec, 56.692 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519298, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 442, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (513.88, 420.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.73, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1490, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5581)
[0000][PE] mean and std.dev: (1850.53, 1207.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 392.079 CPU sec, 46.914 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204954
	[0000][ M::kt_pipeline] read 1204954 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518961, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 884, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5082)
[0000][PE] mean and std.dev: (991.00, 892.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.62, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1157, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2813)
[0000][PE] mean and std.dev: (1241.75, 612.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 396.227 CPU sec, 44.719 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519499, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 362, 807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1915)
[0000][PE] mean and std.dev: (575.00, 507.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.36, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1419, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1350.14, 696.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204954 reads in 404.235 CPU sec, 57.260 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519088, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 370, 680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1466)
[0000][PE] mean and std.dev: (456.85, 311.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.14, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1772, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4671)
[0000][PE] mean and std.dev: (1493.55, 537.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 410.496 CPU sec, 51.981 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519211, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 402, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (840.60, 829.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.28, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1342, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4516)
[0000][PE] mean and std.dev: (1568.74, 792.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 391.144 CPU sec, 47.244 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519408, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 386, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (798.57, 909.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.31, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 1048, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (1033.21, 487.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 396.331 CPU sec, 61.412 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519299, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 367, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (660.18, 704.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.29, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (629, 1271, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (1028.62, 434.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 395.325 CPU sec, 51.682 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519358, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 357, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (808.73, 751.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1344, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (1255.92, 498.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 401.941 CPU sec, 54.078 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519313, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (642, 1209, 3470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9126)
[0000][PE] mean and std.dev: (2167.45, 2363.62)
[0000][PE] low and high boundaries for proper pairs: (1, 11954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.53, 118.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1138, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4517)
[0000][PE] mean and std.dev: (1453.54, 810.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 391.753 CPU sec, 54.992 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518988, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 624, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2456)
[0000][PE] mean and std.dev: (738.30, 592.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.24, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (491, 1081, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4346)
[0000][PE] mean and std.dev: (1168.67, 778.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 391.704 CPU sec, 44.062 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519443, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 547, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (691.19, 692.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.33, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 392.088 CPU sec, 45.858 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518874, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 644, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4596)
[0000][PE] mean and std.dev: (854.77, 758.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.16, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1463, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (1286.08, 424.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 397.538 CPU sec, 51.981 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519297, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 597, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (825.09, 730.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1263, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4389)
[0000][PE] mean and std.dev: (1417.08, 621.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 395.079 CPU sec, 50.266 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519454, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 662, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4841)
[0000][PE] mean and std.dev: (919.42, 822.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.53, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1007, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5546)
[0000][PE] mean and std.dev: (1519.00, 1229.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 391.816 CPU sec, 51.593 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204916
	[0000][ M::kt_pipeline] read 1204916 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519212, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 342, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3078)
[0000][PE] mean and std.dev: (677.00, 805.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.27, 117.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 876, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4061)
[0000][PE] mean and std.dev: (1271.64, 956.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 407.749 CPU sec, 51.425 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519057, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 742, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5454)
[0000][PE] mean and std.dev: (1114.91, 992.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.47, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1281, 1824, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4074)
[0000][PE] mean and std.dev: (1594.73, 580.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204916 reads in 402.979 CPU sec, 49.865 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204980
	[0000][ M::kt_pipeline] read 1204980 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519185, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 726, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3956)
[0000][PE] mean and std.dev: (791.81, 664.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.44, 117.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (393, 1046, 2501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6717)
[0000][PE] mean and std.dev: (1310.73, 1126.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 405.211 CPU sec, 51.459 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205002
	[0000][ M::kt_pipeline] read 1205002 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518897, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 527, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2782)
[0000][PE] mean and std.dev: (571.32, 468.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (190, 1182, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4498)
[0000][PE] mean and std.dev: (992.40, 823.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1424, 2600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5918)
[0000][PE] mean and std.dev: (1659.47, 1283.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204980 reads in 401.834 CPU sec, 57.631 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204982
	[0000][ M::kt_pipeline] read 1204982 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519329, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 503, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2760)
[0000][PE] mean and std.dev: (657.19, 636.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.15, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1377, 1785, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (45, 3375)
[0000][PE] mean and std.dev: (1694.64, 687.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205002 reads in 404.278 CPU sec, 52.841 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519288, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (97, 299, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (517.00, 567.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.44, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1376, 3135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7245)
[0000][PE] mean and std.dev: (1785.00, 1606.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204982 reads in 397.872 CPU sec, 53.708 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518982, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 767, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (1111.08, 1054.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.29, 117.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1261, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5802)
[0000][PE] mean and std.dev: (1394.08, 898.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 406.298 CPU sec, 55.056 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519283, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 385, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (781.75, 755.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.29, 117.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1390, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (1418.06, 759.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 401.275 CPU sec, 49.068 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519370, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 446, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (758.31, 672.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.46, 118.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 396.482 CPU sec, 48.177 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519266, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 419, 536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1278)
[0000][PE] mean and std.dev: (369.92, 281.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.50, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1436, 3490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8790)
[0000][PE] mean and std.dev: (1905.17, 1721.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 419.025 CPU sec, 57.456 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1204924
	[0000][ M::kt_pipeline] read 1204924 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519331, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 433, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2355)
[0000][PE] mean and std.dev: (554.78, 535.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.51, 117.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1634, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4534)
[0000][PE] mean and std.dev: (1575.24, 790.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 397.076 CPU sec, 54.424 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1204996
	[0000][ M::kt_pipeline] read 1204996 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518687, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 397, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3614)
[0000][PE] mean and std.dev: (679.91, 741.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.50, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1318, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3845)
[0000][PE] mean and std.dev: (1342.29, 879.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204924 reads in 400.119 CPU sec, 52.119 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519422, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 745, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2850)
[0000][PE] mean and std.dev: (694.42, 496.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1241, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4473)
[0000][PE] mean and std.dev: (1376.53, 803.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204996 reads in 395.553 CPU sec, 54.774 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1204988
	[0000][ M::kt_pipeline] read 1204988 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519465, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 502, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2510)
[0000][PE] mean and std.dev: (563.47, 445.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.66, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1660, 2158, 3254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6442)
[0000][PE] mean and std.dev: (2220.00, 1232.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 411.398 CPU sec, 54.815 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519397, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 373, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (573.74, 457.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.42, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1097, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3023)
[0000][PE] mean and std.dev: (1256.50, 762.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204988 reads in 401.409 CPU sec, 58.052 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519137, 3, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 633, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (796.82, 616.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 403.360 CPU sec, 63.685 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519115, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (497, 912, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (1135.80, 907.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (555, 1224, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (1135.00, 769.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 400.466 CPU sec, 49.741 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205006
	[0000][ M::kt_pipeline] read 1205006 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519090, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 370, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3603)
[0000][PE] mean and std.dev: (837.56, 828.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.47, 118.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1407, 4891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12465)
[0000][PE] mean and std.dev: (2307.33, 1999.60)
[0000][PE] low and high boundaries for proper pairs: (1, 16252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 417.954 CPU sec, 57.231 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519212, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 374, 642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1462)
[0000][PE] mean and std.dev: (378.29, 206.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.45, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1755, 5153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13265)
[0000][PE] mean and std.dev: (2834.94, 2633.42)
[0000][PE] low and high boundaries for proper pairs: (1, 17321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205006 reads in 396.188 CPU sec, 57.657 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205024
	[0000][ M::kt_pipeline] read 1205024 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519039, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 602, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3865)
[0000][PE] mean and std.dev: (907.25, 823.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.51, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 407.886 CPU sec, 53.398 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519275, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 353, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3421)
[0000][PE] mean and std.dev: (493.93, 400.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.34, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1522, 1747, 2784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5308)
[0000][PE] mean and std.dev: (1902.06, 1067.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205024 reads in 404.076 CPU sec, 57.312 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 519317, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 420, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2962)
[0000][PE] mean and std.dev: (726.66, 660.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.57, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 397.993 CPU sec, 49.070 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204962
	[0000][ M::kt_pipeline] read 1204962 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519117, 11, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 410, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3741)
[0000][PE] mean and std.dev: (763.07, 902.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.27, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1416, 1792, 5165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12663)
[0000][PE] mean and std.dev: (2962.36, 2536.98)
[0000][PE] low and high boundaries for proper pairs: (1, 16412)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 965, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2148)
[0000][PE] mean and std.dev: (938.93, 434.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 405.343 CPU sec, 61.389 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205214
	[0000][ M::kt_pipeline] read 1205214 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519147, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 522, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5111)
[0000][PE] mean and std.dev: (1040.67, 1003.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.42, 117.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1265, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3649)
[0000][PE] mean and std.dev: (1393.07, 667.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204962 reads in 399.123 CPU sec, 57.428 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1204920
	[0000][ M::kt_pipeline] read 1204920 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519519, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 437, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4459)
[0000][PE] mean and std.dev: (859.46, 901.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.87, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1436, 1568, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (1727.36, 686.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205214 reads in 398.834 CPU sec, 54.413 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519118, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 429, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2628)
[0000][PE] mean and std.dev: (716.44, 675.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.62, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1147, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2634)
[0000][PE] mean and std.dev: (1003.22, 315.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204920 reads in 400.378 CPU sec, 61.614 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204912
	[0000][ M::kt_pipeline] read 1204912 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519483, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 447, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4600)
[0000][PE] mean and std.dev: (882.05, 889.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.56, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1187, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (1296.85, 839.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 396.294 CPU sec, 45.490 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204972
	[0000][ M::kt_pipeline] read 1204972 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519521, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 878, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5503)
[0000][PE] mean and std.dev: (1258.11, 1229.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.66, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 926, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (966.75, 739.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204912 reads in 400.502 CPU sec, 63.877 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519398, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 722, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4758)
[0000][PE] mean and std.dev: (1046.33, 1090.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.57, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (436, 1404, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5173)
[0000][PE] mean and std.dev: (1353.23, 1037.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204972 reads in 393.243 CPU sec, 51.059 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519510, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 380, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2172)
[0000][PE] mean and std.dev: (535.70, 420.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1356, 2305, 3381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7431)
[0000][PE] mean and std.dev: (2401.67, 1538.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 397.380 CPU sec, 57.776 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519403, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 404, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1095.65, 1034.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.57, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 400.369 CPU sec, 52.442 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519410, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 471, 835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2009)
[0000][PE] mean and std.dev: (562.47, 421.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.52, 117.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 956, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4268)
[0000][PE] mean and std.dev: (1258.07, 769.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 395.618 CPU sec, 57.863 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204972
	[0000][ M::kt_pipeline] read 1204972 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519016, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 548, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3073)
[0000][PE] mean and std.dev: (668.12, 570.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.56, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1308, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4415)
[0000][PE] mean and std.dev: (1641.15, 923.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 393.168 CPU sec, 46.462 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519393, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 766, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2252)
[0000][PE] mean and std.dev: (588.59, 371.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.41, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (536, 948, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4325)
[0000][PE] mean and std.dev: (1156.71, 735.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204972 reads in 392.949 CPU sec, 59.680 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 519461, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 499, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2959)
[0000][PE] mean and std.dev: (686.76, 606.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1196, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4113)
[0000][PE] mean and std.dev: (1338.33, 850.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 401.388 CPU sec, 59.396 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519565, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 630, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (755.37, 604.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.52, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1617, 2727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5651)
[0000][PE] mean and std.dev: (2247.86, 1576.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 398.115 CPU sec, 55.825 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205000
	[0000][ M::kt_pipeline] read 1205000 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519503, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 678, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (851.00, 669.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.39, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1329, 1990, 2528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4926)
[0000][PE] mean and std.dev: (1867.55, 646.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 395.265 CPU sec, 57.950 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204924
	[0000][ M::kt_pipeline] read 1204924 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519297, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 468, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3555)
[0000][PE] mean and std.dev: (674.39, 666.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.41, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1403, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3296)
[0000][PE] mean and std.dev: (1564.36, 609.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205000 reads in 395.651 CPU sec, 52.013 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518861, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 407, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2510)
[0000][PE] mean and std.dev: (594.32, 444.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.41, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204924 reads in 397.621 CPU sec, 60.923 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519503, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 546, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (692.44, 549.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.21, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1279, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (1356.18, 833.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 396.628 CPU sec, 57.939 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1204960
	[0000][ M::kt_pipeline] read 1204960 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519250, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 648, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3553)
[0000][PE] mean and std.dev: (817.57, 712.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.76, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 840, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3230)
[0000][PE] mean and std.dev: (1133.18, 718.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 392.452 CPU sec, 58.001 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1204884
	[0000][ M::kt_pipeline] read 1204884 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519416, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 556, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (856.57, 812.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.46, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1469, 2554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6174)
[0000][PE] mean and std.dev: (1629.47, 1016.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204960 reads in 395.279 CPU sec, 46.754 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519152, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (450, 658, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2889)
[0000][PE] mean and std.dev: (681.05, 501.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.57, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 2121, 2835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6351)
[0000][PE] mean and std.dev: (2161.62, 1476.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204884 reads in 397.179 CPU sec, 57.901 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519035, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 417, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (658.44, 588.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.36, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1242, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3262)
[0000][PE] mean and std.dev: (1126.38, 595.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 402.245 CPU sec, 60.441 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204900
	[0000][ M::kt_pipeline] read 1204900 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519442, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 715, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4977)
[0000][PE] mean and std.dev: (1191.88, 1136.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1509, 3567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8983)
[0000][PE] mean and std.dev: (2519.94, 2322.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 396.816 CPU sec, 49.209 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518602, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 475, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4242)
[0000][PE] mean and std.dev: (633.58, 526.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.56, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1278, 1318, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (518, 2418)
[0000][PE] mean and std.dev: (1307.88, 206.16)
[0000][PE] low and high boundaries for proper pairs: (138, 2798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204900 reads in 403.512 CPU sec, 56.519 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519429, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 622, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (712.58, 582.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1183, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3009)
[0000][PE] mean and std.dev: (1057.73, 420.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 394.705 CPU sec, 57.115 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519666, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 467, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (716.81, 727.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.72, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1382, 5749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15015)
[0000][PE] mean and std.dev: (3034.53, 2799.44)
[0000][PE] low and high boundaries for proper pairs: (1, 19648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 394.721 CPU sec, 49.226 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519697, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 444, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2478)
[0000][PE] mean and std.dev: (630.65, 553.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1089, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4594)
[0000][PE] mean and std.dev: (1477.65, 876.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 393.098 CPU sec, 54.844 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518764, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 511, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2218)
[0000][PE] mean and std.dev: (592.77, 462.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.79, 117.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1045, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2485)
[0000][PE] mean and std.dev: (1161.70, 373.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 425.504 CPU sec, 54.937 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519805, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 378, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5868)
[0000][PE] mean and std.dev: (1193.90, 1445.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.51, 118.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1488, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1316.60, 495.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 406.150 CPU sec, 53.633 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519054, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 694, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2817)
[0000][PE] mean and std.dev: (715.70, 439.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.36, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1448, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4635)
[0000][PE] mean and std.dev: (1486.67, 930.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 399.375 CPU sec, 59.232 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1204962
	[0000][ M::kt_pipeline] read 1204962 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519353, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 378, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4905)
[0000][PE] mean and std.dev: (879.81, 949.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.41, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1424, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3791)
[0000][PE] mean and std.dev: (1269.56, 662.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 399.847 CPU sec, 49.438 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519587, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 404, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (648.52, 608.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.76, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1381, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1369.07, 531.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204962 reads in 389.157 CPU sec, 49.846 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204954
	[0000][ M::kt_pipeline] read 1204954 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519267, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 516, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (672.45, 570.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.52, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1454, 2767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5989)
[0000][PE] mean and std.dev: (1514.83, 759.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 393.710 CPU sec, 52.754 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519536, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 406, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1988)
[0000][PE] mean and std.dev: (624.86, 479.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.43, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1809, 2002, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (551, 3696)
[0000][PE] mean and std.dev: (1908.11, 482.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204954 reads in 390.660 CPU sec, 53.133 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204936
	[0000][ M::kt_pipeline] read 1204936 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519231, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 544, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4590)
[0000][PE] mean and std.dev: (873.62, 845.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.46, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 401.801 CPU sec, 53.416 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518914, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 977, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3881)
[0000][PE] mean and std.dev: (860.25, 788.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1135, 2704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6110)
[0000][PE] mean and std.dev: (1903.53, 1429.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204936 reads in 404.119 CPU sec, 65.942 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519614, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 489, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2111)
[0000][PE] mean and std.dev: (555.73, 445.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.04, 117.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1335, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5354)
[0000][PE] mean and std.dev: (1479.82, 860.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 391.733 CPU sec, 47.896 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1204930
	[0000][ M::kt_pipeline] read 1204930 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519920, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 514, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3481)
[0000][PE] mean and std.dev: (765.11, 831.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.77, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1416, 3215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7601)
[0000][PE] mean and std.dev: (2082.23, 1518.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 408.715 CPU sec, 56.727 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519147, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 409, 883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2243)
[0000][PE] mean and std.dev: (485.96, 368.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1332, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4969)
[0000][PE] mean and std.dev: (1737.69, 1084.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204930 reads in 402.709 CPU sec, 60.208 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519087, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 405, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2182)
[0000][PE] mean and std.dev: (525.45, 485.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.67, 117.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (683, 1441, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5030)
[0000][PE] mean and std.dev: (1580.78, 1094.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 399.192 CPU sec, 54.780 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204942
	[0000][ M::kt_pipeline] read 1204942 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 519508, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 977, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (1014.15, 1041.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.47, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1272, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (1263.10, 653.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 393.732 CPU sec, 49.444 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519162, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 412, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3878)
[0000][PE] mean and std.dev: (831.00, 748.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.27, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1398, 2057, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4632)
[0000][PE] mean and std.dev: (1974.31, 1031.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204942 reads in 394.858 CPU sec, 58.482 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519670, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 348, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2761)
[0000][PE] mean and std.dev: (610.77, 562.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.54, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1474, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (1498.15, 824.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 412.217 CPU sec, 55.728 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 519341, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 388, 3156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8922)
[0000][PE] mean and std.dev: (1514.08, 1704.52)
[0000][PE] low and high boundaries for proper pairs: (1, 11805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (477, 1045, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3696)
[0000][PE] mean and std.dev: (1049.67, 679.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 393.894 CPU sec, 54.702 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519323, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 336, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1304)
[0000][PE] mean and std.dev: (363.04, 257.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1317, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4291)
[0000][PE] mean and std.dev: (1452.50, 888.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 402.423 CPU sec, 58.394 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519247, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 630, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4740)
[0000][PE] mean and std.dev: (1136.18, 1195.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.57, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 877, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2166)
[0000][PE] mean and std.dev: (931.62, 325.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 400.675 CPU sec, 61.868 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519003, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 376, 825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1999)
[0000][PE] mean and std.dev: (476.06, 422.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.17, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1613, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4462)
[0000][PE] mean and std.dev: (1441.87, 702.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 402.531 CPU sec, 59.235 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204890
	[0000][ M::kt_pipeline] read 1204890 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519336, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 861, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (1030.83, 806.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.50, 117.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1905, 5707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15141)
[0000][PE] mean and std.dev: (2770.59, 2579.70)
[0000][PE] low and high boundaries for proper pairs: (1, 19858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 418.841 CPU sec, 53.045 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519529, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 312, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1308)
[0000][PE] mean and std.dev: (341.07, 252.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 2021, 2924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6296)
[0000][PE] mean and std.dev: (2270.00, 1552.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204890 reads in 401.378 CPU sec, 50.532 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204918
	[0000][ M::kt_pipeline] read 1204918 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519471, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 454, 851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2149)
[0000][PE] mean and std.dev: (485.81, 401.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1389, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5648)
[0000][PE] mean and std.dev: (1475.00, 892.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 410.449 CPU sec, 64.900 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519143, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 394, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2605)
[0000][PE] mean and std.dev: (622.30, 573.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.34, 117.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1506, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (1496.96, 799.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204918 reads in 394.311 CPU sec, 57.356 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519554, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 444, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4203)
[0000][PE] mean and std.dev: (913.00, 903.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.37, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1324, 2796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6490)
[0000][PE] mean and std.dev: (1697.29, 1345.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 396.538 CPU sec, 57.147 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519257, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 907, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (884.46, 657.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.14, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1835, 2789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6373)
[0000][PE] mean and std.dev: (1953.94, 1147.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 393.426 CPU sec, 55.249 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1204968
	[0000][ M::kt_pipeline] read 1204968 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519268, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 523, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2615)
[0000][PE] mean and std.dev: (670.90, 559.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.51, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 3756, 4409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11185)
[0000][PE] mean and std.dev: (2965.00, 2048.35)
[0000][PE] low and high boundaries for proper pairs: (1, 14573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 393.620 CPU sec, 51.157 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205000
	[0000][ M::kt_pipeline] read 1205000 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519229, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 821, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5012)
[0000][PE] mean and std.dev: (1166.44, 1164.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.41, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1205, 2844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6604)
[0000][PE] mean and std.dev: (1853.06, 1473.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204968 reads in 408.357 CPU sec, 50.235 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519368, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 675, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2269)
[0000][PE] mean and std.dev: (734.94, 552.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.49, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1301, 3424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8446)
[0000][PE] mean and std.dev: (2237.12, 1760.93)
[0000][PE] low and high boundaries for proper pairs: (1, 10957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205000 reads in 409.357 CPU sec, 53.237 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519159, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 357, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2845)
[0000][PE] mean and std.dev: (616.27, 497.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.27, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1458, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4816)
[0000][PE] mean and std.dev: (1399.40, 674.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 413.228 CPU sec, 57.889 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519193, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 488, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2850)
[0000][PE] mean and std.dev: (636.76, 429.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.46, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1135, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (1143.85, 705.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 424.461 CPU sec, 62.207 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519143, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 360, 644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1528)
[0000][PE] mean and std.dev: (351.68, 226.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.72, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1403, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (1472.36, 568.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 399.527 CPU sec, 51.077 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1204884
	[0000][ M::kt_pipeline] read 1204884 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519437, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 579, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (829.88, 747.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.46, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1412, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3899)
[0000][PE] mean and std.dev: (1289.00, 503.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 395.926 CPU sec, 56.676 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1204872
	[0000][ M::kt_pipeline] read 1204872 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518971, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 472, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2168)
[0000][PE] mean and std.dev: (522.69, 431.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.52, 118.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (530, 1786, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6128)
[0000][PE] mean and std.dev: (1709.69, 1485.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204884 reads in 402.623 CPU sec, 60.961 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519227, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 538, 1456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3852)
[0000][PE] mean and std.dev: (902.85, 824.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.39, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (613, 983, 2710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6904)
[0000][PE] mean and std.dev: (1356.15, 973.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204872 reads in 398.649 CPU sec, 66.326 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519175, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 596, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (777.43, 632.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.51, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1245, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5276)
[0000][PE] mean and std.dev: (1700.86, 965.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 411.543 CPU sec, 63.176 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519416, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (678, 1049, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5490)
[0000][PE] mean and std.dev: (1441.89, 1233.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.54, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 393.792 CPU sec, 55.112 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1204946
	[0000][ M::kt_pipeline] read 1204946 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519755, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 477, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2625)
[0000][PE] mean and std.dev: (662.83, 532.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.18, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (475, 1419, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (1259.17, 1011.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 408.460 CPU sec, 60.504 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204996
	[0000][ M::kt_pipeline] read 1204996 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518949, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 549, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (957.17, 813.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1208, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (1236.64, 419.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204946 reads in 403.352 CPU sec, 49.107 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519158, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 876, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (1028.92, 891.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.23, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1297, 1778, 2940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6226)
[0000][PE] mean and std.dev: (1871.79, 1041.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204996 reads in 396.068 CPU sec, 56.177 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519583, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 373, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3417)
[0000][PE] mean and std.dev: (688.15, 588.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.50, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1726, 2703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5623)
[0000][PE] mean and std.dev: (2006.93, 1115.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 412.960 CPU sec, 64.361 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519252, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 383, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3346)
[0000][PE] mean and std.dev: (710.96, 648.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.50, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1449, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5382)
[0000][PE] mean and std.dev: (1598.67, 884.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 395.296 CPU sec, 60.416 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204864
	[0000][ M::kt_pipeline] read 1204864 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518769, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 321, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2548)
[0000][PE] mean and std.dev: (578.35, 625.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.48, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1312, 5568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14552)
[0000][PE] mean and std.dev: (2552.25, 2086.71)
[0000][PE] low and high boundaries for proper pairs: (1, 19044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 394.363 CPU sec, 52.168 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519883, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 356, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1099)
[0000][PE] mean and std.dev: (371.04, 212.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.53, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1147, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5720)
[0000][PE] mean and std.dev: (1703.92, 1286.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204864 reads in 397.276 CPU sec, 57.604 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204982
	[0000][ M::kt_pipeline] read 1204982 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519442, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 318, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1325)
[0000][PE] mean and std.dev: (369.81, 307.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.46, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1394, 2735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6617)
[0000][PE] mean and std.dev: (1431.31, 917.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 400.961 CPU sec, 54.278 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1204954
	[0000][ M::kt_pipeline] read 1204954 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518829, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 545, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4293)
[0000][PE] mean and std.dev: (1032.14, 952.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1251, 1603, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5613)
[0000][PE] mean and std.dev: (1878.78, 1175.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204982 reads in 395.228 CPU sec, 48.175 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204952
	[0000][ M::kt_pipeline] read 1204952 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518866, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 383, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3141)
[0000][PE] mean and std.dev: (714.22, 668.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1401, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (1405.00, 504.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204954 reads in 392.151 CPU sec, 45.681 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519296, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 417, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (684.58, 606.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.45, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1611, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3897)
[0000][PE] mean and std.dev: (1372.85, 563.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204952 reads in 394.567 CPU sec, 49.503 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519308, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 325, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (649.88, 726.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.38, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1140, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (1066.50, 430.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 408.386 CPU sec, 57.100 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519163, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 823, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3970)
[0000][PE] mean and std.dev: (933.62, 698.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.45, 117.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1343, 3007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6825)
[0000][PE] mean and std.dev: (1926.77, 1546.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 399.978 CPU sec, 52.466 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519181, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 996, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5081)
[0000][PE] mean and std.dev: (1127.72, 1036.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.32, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1270, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2721)
[0000][PE] mean and std.dev: (1244.86, 648.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 399.492 CPU sec, 55.580 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519105, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 423, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (761.19, 702.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.41, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 1008, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2725)
[0000][PE] mean and std.dev: (792.27, 365.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 404.968 CPU sec, 52.673 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520039, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 313, 724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1806)
[0000][PE] mean and std.dev: (302.62, 217.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.29, 117.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1214, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (1491.81, 887.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 396.287 CPU sec, 57.522 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519355, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 346, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1842)
[0000][PE] mean and std.dev: (480.62, 458.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1457, 3368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8390)
[0000][PE] mean and std.dev: (2146.62, 2074.80)
[0000][PE] low and high boundaries for proper pairs: (1, 10901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 399.276 CPU sec, 50.156 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519753, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 886, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4752)
[0000][PE] mean and std.dev: (1054.00, 931.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.34, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 392.161 CPU sec, 56.823 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205000
	[0000][ M::kt_pipeline] read 1205000 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519382, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 343, 960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2492)
[0000][PE] mean and std.dev: (463.90, 416.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.48, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1350, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4821)
[0000][PE] mean and std.dev: (1399.41, 972.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 397.539 CPU sec, 57.755 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519592, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 342, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (646.42, 499.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.52, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1279, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (1260.21, 545.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205000 reads in 396.022 CPU sec, 52.007 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519004, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 632, 890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1986)
[0000][PE] mean and std.dev: (600.06, 369.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2534)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.64, 117.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1444, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4937)
[0000][PE] mean and std.dev: (1574.27, 948.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 409.265 CPU sec, 52.789 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 519166, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 358, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1384)
[0000][PE] mean and std.dev: (366.58, 213.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.27, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1405, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (1390.00, 555.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 403.658 CPU sec, 58.304 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518838, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 332, 801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1903)
[0000][PE] mean and std.dev: (450.77, 404.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.24, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 2251, 3083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6999)
[0000][PE] mean and std.dev: (2212.23, 1378.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 401.910 CPU sec, 52.564 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519229, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 419, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2325)
[0000][PE] mean and std.dev: (463.00, 283.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.53, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1361, 1496, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3917)
[0000][PE] mean and std.dev: (1648.30, 535.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 391.286 CPU sec, 45.555 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519286, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 305, 760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1920)
[0000][PE] mean and std.dev: (497.43, 500.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.55, 117.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 402.024 CPU sec, 52.210 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519189, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 634, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4209)
[0000][PE] mean and std.dev: (927.10, 959.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.53, 117.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 418.670 CPU sec, 59.400 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519045, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 673, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (935.61, 958.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.29, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1081, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (1290.67, 696.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 395.099 CPU sec, 48.031 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1204950
	[0000][ M::kt_pipeline] read 1204950 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519558, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 520, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5177)
[0000][PE] mean and std.dev: (1053.00, 1267.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.72, 118.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1175, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3842)
[0000][PE] mean and std.dev: (1407.41, 794.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 401.626 CPU sec, 54.497 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519345, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 891, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (1098.52, 1023.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.63, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1345, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (1486.12, 656.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204950 reads in 402.020 CPU sec, 57.790 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519355, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 340, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4061)
[0000][PE] mean and std.dev: (761.41, 834.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.77, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 401.730 CPU sec, 59.931 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1204958
	[0000][ M::kt_pipeline] read 1204958 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 519323, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 647, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (920.31, 793.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.51, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1202, 2039, 3392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7772)
[0000][PE] mean and std.dev: (2337.50, 1636.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 399.276 CPU sec, 62.840 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519515, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 1016, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5997)
[0000][PE] mean and std.dev: (1328.75, 1335.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.42, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1501, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (1428.89, 556.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204958 reads in 402.754 CPU sec, 59.863 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519277, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 383, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (745.79, 734.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.55, 117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (485, 814, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (905.00, 600.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 404.119 CPU sec, 58.211 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1204924
	[0000][ M::kt_pipeline] read 1204924 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519321, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 424, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (822.79, 888.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.51, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1293, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (1431.82, 965.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 395.814 CPU sec, 52.313 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519612, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 477, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3078)
[0000][PE] mean and std.dev: (674.33, 629.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.49, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1721, 4943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12903)
[0000][PE] mean and std.dev: (2763.15, 2454.86)
[0000][PE] low and high boundaries for proper pairs: (1, 16883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204924 reads in 398.191 CPU sec, 57.737 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519504, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 499, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (641.90, 520.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1175, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (1441.41, 876.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 394.807 CPU sec, 48.189 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518949, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 439, 888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2290)
[0000][PE] mean and std.dev: (489.50, 417.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.65, 118.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1490, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2926)
[0000][PE] mean and std.dev: (1273.00, 282.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 397.838 CPU sec, 54.988 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519190, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 396, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2787)
[0000][PE] mean and std.dev: (510.14, 411.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.80, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1405, 1710, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (1742.36, 834.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 406.458 CPU sec, 54.806 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1204994
	[0000][ M::kt_pipeline] read 1204994 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 520000, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 455, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2742)
[0000][PE] mean and std.dev: (700.31, 655.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.62, 117.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1369, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3101)
[0000][PE] mean and std.dev: (1288.07, 501.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 393.248 CPU sec, 54.732 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519211, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 516, 789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1735)
[0000][PE] mean and std.dev: (543.68, 356.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.48, 117.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1921, 3844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9386)
[0000][PE] mean and std.dev: (2628.63, 2320.82)
[0000][PE] low and high boundaries for proper pairs: (1, 12157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204994 reads in 392.216 CPU sec, 46.880 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519190, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 403, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4285)
[0000][PE] mean and std.dev: (828.45, 895.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.26, 117.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1075, 3178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7960)
[0000][PE] mean and std.dev: (1658.80, 1557.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 398.650 CPU sec, 60.393 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518821, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 492, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3848)
[0000][PE] mean and std.dev: (779.50, 695.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (555, 1561, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4758)
[0000][PE] mean and std.dev: (1309.31, 795.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 397.108 CPU sec, 58.198 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519458, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 507, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3702)
[0000][PE] mean and std.dev: (770.41, 754.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.44, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1770, 2568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5402)
[0000][PE] mean and std.dev: (1913.65, 930.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 391.995 CPU sec, 58.920 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204982
	[0000][ M::kt_pipeline] read 1204982 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518406, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 856, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4246)
[0000][PE] mean and std.dev: (1052.25, 946.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1613, 2887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6295)
[0000][PE] mean and std.dev: (1573.64, 850.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 397.256 CPU sec, 49.219 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519149, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 474, 852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1916)
[0000][PE] mean and std.dev: (546.11, 336.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.64, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1347, 2635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6049)
[0000][PE] mean and std.dev: (1888.70, 1462.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204982 reads in 406.463 CPU sec, 59.146 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204940
	[0000][ M::kt_pipeline] read 1204940 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519230, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 981, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6244)
[0000][PE] mean and std.dev: (1465.52, 1425.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.20, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 976, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3080)
[0000][PE] mean and std.dev: (885.44, 325.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 400.648 CPU sec, 51.911 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518796, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 418, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3567)
[0000][PE] mean and std.dev: (800.85, 960.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1267, 1542, 2681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5509)
[0000][PE] mean and std.dev: (1742.92, 1037.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204940 reads in 396.618 CPU sec, 57.608 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519101, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 722, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5564)
[0000][PE] mean and std.dev: (1196.05, 1256.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.57, 117.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1657, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5879)
[0000][PE] mean and std.dev: (1896.00, 1253.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 397.340 CPU sec, 51.226 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519204, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 366, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2508)
[0000][PE] mean and std.dev: (592.95, 423.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.56, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1352, 2029, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3992)
[0000][PE] mean and std.dev: (1706.50, 453.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 398.222 CPU sec, 56.457 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519103, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 748, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4344)
[0000][PE] mean and std.dev: (1142.74, 1066.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.14, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 1170, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5584)
[0000][PE] mean and std.dev: (1237.46, 801.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 397.132 CPU sec, 54.076 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204904
	[0000][ M::kt_pipeline] read 1204904 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519084, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 604, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2733)
[0000][PE] mean and std.dev: (677.10, 506.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.64, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 918, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1981)
[0000][PE] mean and std.dev: (854.20, 337.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 413.703 CPU sec, 56.642 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204904
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 519679, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 509, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2696)
[0000][PE] mean and std.dev: (622.79, 513.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.65, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1257, 2751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6521)
[0000][PE] mean and std.dev: (1778.00, 1279.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204904 reads in 394.499 CPU sec, 58.817 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1204878
	[0000][ M::kt_pipeline] read 1204878 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519132, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 620, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3240)
[0000][PE] mean and std.dev: (686.12, 576.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.06, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1606, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4398)
[0000][PE] mean and std.dev: (1644.08, 859.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 394.632 CPU sec, 54.170 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519613, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 421, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (650.38, 624.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.46, 117.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1542, 2682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5732)
[0000][PE] mean and std.dev: (1860.21, 889.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204878 reads in 395.189 CPU sec, 46.954 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519045, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 820, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3463)
[0000][PE] mean and std.dev: (832.64, 697.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.83, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1513, 2938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6996)
[0000][PE] mean and std.dev: (2074.36, 1601.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 403.101 CPU sec, 56.396 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519154, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 840, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4754)
[0000][PE] mean and std.dev: (1024.19, 982.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.80, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 394.686 CPU sec, 49.943 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518917, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 1573, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5050)
[0000][PE] mean and std.dev: (1422.85, 1288.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.78, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1229, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4626)
[0000][PE] mean and std.dev: (1477.53, 848.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 397.810 CPU sec, 47.255 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519602, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 381, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2648)
[0000][PE] mean and std.dev: (608.00, 596.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3471)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.55, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1353, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (45, 2545)
[0000][PE] mean and std.dev: (1166.40, 487.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 389.582 CPU sec, 49.183 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518762, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 874, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (879.22, 663.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.55, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1217, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (1590.80, 1072.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 394.146 CPU sec, 52.037 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205162
	[0000][ M::kt_pipeline] read 1205162 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519635, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 391, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2284)
[0000][PE] mean and std.dev: (518.67, 384.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1237, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6111)
[0000][PE] mean and std.dev: (1654.67, 1677.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 395.501 CPU sec, 50.299 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519549, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 346, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 926)
[0000][PE] mean and std.dev: (289.58, 159.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.58, 117.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (573, 1285, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5403)
[0000][PE] mean and std.dev: (1158.92, 776.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205162 reads in 392.338 CPU sec, 49.743 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519517, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 411, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3017)
[0000][PE] mean and std.dev: (670.79, 574.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.51, 117.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1272, 3197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8123)
[0000][PE] mean and std.dev: (1608.62, 1292.42)
[0000][PE] low and high boundaries for proper pairs: (1, 10586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 397.072 CPU sec, 52.304 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204974
	[0000][ M::kt_pipeline] read 1204974 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519212, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 444, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2849)
[0000][PE] mean and std.dev: (787.65, 669.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.19, 117.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1331, 3457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8479)
[0000][PE] mean and std.dev: (2207.75, 2218.60)
[0000][PE] low and high boundaries for proper pairs: (1, 11082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 395.184 CPU sec, 46.084 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519166, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 507, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2135)
[0000][PE] mean and std.dev: (685.91, 421.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.77, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (391, 842, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5578)
[0000][PE] mean and std.dev: (1097.19, 858.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204974 reads in 390.956 CPU sec, 46.793 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 519402, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 369, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2586)
[0000][PE] mean and std.dev: (645.61, 606.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.52, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1673, 2182, 3504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7166)
[0000][PE] mean and std.dev: (2481.64, 1438.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 392.152 CPU sec, 52.016 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519183, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (535, 777, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (1101.89, 952.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (497.00, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 2085, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5020)
[0000][PE] mean and std.dev: (1460.89, 731.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 395.003 CPU sec, 53.109 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519315, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 503, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3437)
[0000][PE] mean and std.dev: (668.50, 588.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.48, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (571, 1356, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (1077.67, 456.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 407.027 CPU sec, 59.638 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519470, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 683, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4793)
[0000][PE] mean and std.dev: (928.00, 875.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.22, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1055, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (1193.29, 643.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 402.163 CPU sec, 56.983 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518913, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 556, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (896.59, 772.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.88, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1293, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4918)
[0000][PE] mean and std.dev: (1294.93, 784.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 398.565 CPU sec, 47.496 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519474, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 482, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2890)
[0000][PE] mean and std.dev: (700.25, 544.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.39, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 393.223 CPU sec, 50.401 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204960
	[0000][ M::kt_pipeline] read 1204960 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519489, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 517, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3231)
[0000][PE] mean and std.dev: (656.86, 591.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.41, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1370, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4342)
[0000][PE] mean and std.dev: (1311.63, 768.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 395.187 CPU sec, 57.845 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519095, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 497, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (896.41, 833.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1104, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (1234.50, 730.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204960 reads in 399.115 CPU sec, 62.034 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519223, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 568, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (738.31, 544.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (656, 1288, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5231)
[0000][PE] mean and std.dev: (1409.67, 905.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 405.757 CPU sec, 44.769 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204984
	[0000][ M::kt_pipeline] read 1204984 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519437, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 504, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2706)
[0000][PE] mean and std.dev: (709.14, 636.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.49, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 1944, 2883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6151)
[0000][PE] mean and std.dev: (2051.07, 1112.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 402.634 CPU sec, 55.502 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518979, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 379, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1724)
[0000][PE] mean and std.dev: (380.50, 304.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.50, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 2138, 3133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7023)
[0000][PE] mean and std.dev: (2246.45, 1612.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204984 reads in 398.564 CPU sec, 50.442 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519272, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 874, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4835)
[0000][PE] mean and std.dev: (1016.69, 952.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.82, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1688, 2976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7072)
[0000][PE] mean and std.dev: (1937.88, 1453.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 403.036 CPU sec, 47.527 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205006
	[0000][ M::kt_pipeline] read 1205006 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519132, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 366, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (650.53, 614.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.49, 118.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1717, 3089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7363)
[0000][PE] mean and std.dev: (1849.23, 1267.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 398.486 CPU sec, 49.327 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204950
	[0000][ M::kt_pipeline] read 1204950 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519531, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 435, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3335)
[0000][PE] mean and std.dev: (806.62, 810.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.53, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1307, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4419)
[0000][PE] mean and std.dev: (1357.00, 502.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205006 reads in 395.973 CPU sec, 43.821 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204956
	[0000][ M::kt_pipeline] read 1204956 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519453, 7, 3)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 378, 819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1989)
[0000][PE] mean and std.dev: (523.24, 454.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.29, 117.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204950 reads in 393.495 CPU sec, 43.493 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519214, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 452, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2434)
[0000][PE] mean and std.dev: (618.36, 472.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.37, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1864, 3197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7589)
[0000][PE] mean and std.dev: (2082.38, 1314.18)
[0000][PE] low and high boundaries for proper pairs: (1, 9785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204956 reads in 393.880 CPU sec, 42.151 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519418, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 378, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (631.91, 648.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.50, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1509, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5248)
[0000][PE] mean and std.dev: (1626.85, 896.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 396.230 CPU sec, 46.753 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519567, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 581, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4146)
[0000][PE] mean and std.dev: (1025.04, 1116.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.55, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 406.850 CPU sec, 48.623 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519407, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 448, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3207)
[0000][PE] mean and std.dev: (839.37, 809.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.40, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (566, 1326, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (1399.40, 1070.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 419.798 CPU sec, 52.972 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519803, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 361, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1100)
[0000][PE] mean and std.dev: (362.05, 246.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.38, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1615, 2864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6416)
[0000][PE] mean and std.dev: (1693.50, 818.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 403.159 CPU sec, 44.695 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519375, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 1050, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4017)
[0000][PE] mean and std.dev: (934.38, 739.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1706, 2847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6411)
[0000][PE] mean and std.dev: (1999.46, 1404.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 401.828 CPU sec, 42.378 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1204970
	[0000][ M::kt_pipeline] read 1204970 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519324, 11, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 572, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2572)
[0000][PE] mean and std.dev: (676.35, 609.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.19, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (193, 740, 3658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10588)
[0000][PE] mean and std.dev: (1702.18, 2067.56)
[0000][PE] low and high boundaries for proper pairs: (1, 14053)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1501, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (1415.53, 699.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 397.650 CPU sec, 45.658 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519331, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 424, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3398)
[0000][PE] mean and std.dev: (686.54, 635.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.56, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1518, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (60, 2825)
[0000][PE] mean and std.dev: (1320.69, 502.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204970 reads in 404.456 CPU sec, 48.476 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519153, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 505, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4038)
[0000][PE] mean and std.dev: (745.00, 617.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1777, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4079)
[0000][PE] mean and std.dev: (1521.21, 592.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 396.508 CPU sec, 56.206 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519259, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 394, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1050)
[0000][PE] mean and std.dev: (350.95, 146.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1213, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (107, 2582)
[0000][PE] mean and std.dev: (1178.50, 523.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 399.620 CPU sec, 48.294 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519235, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 379, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (725.57, 797.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.44, 117.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1005, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5302)
[0000][PE] mean and std.dev: (1270.07, 862.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 396.596 CPU sec, 40.097 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519465, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 861, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3046)
[0000][PE] mean and std.dev: (936.79, 651.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 394.246 CPU sec, 39.771 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519534, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 397, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2778)
[0000][PE] mean and std.dev: (575.00, 471.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.49, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1843, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5381)
[0000][PE] mean and std.dev: (1561.88, 772.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 397.750 CPU sec, 48.740 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519191, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 473, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4892)
[0000][PE] mean and std.dev: (809.75, 748.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.56, 117.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1264, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2354)
[0000][PE] mean and std.dev: (1057.76, 444.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 398.602 CPU sec, 46.645 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205006
	[0000][ M::kt_pipeline] read 1205006 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519263, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 372, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1795)
[0000][PE] mean and std.dev: (467.24, 348.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1565, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5915)
[0000][PE] mean and std.dev: (1504.27, 825.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 394.146 CPU sec, 39.202 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519015, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 387, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2748)
[0000][PE] mean and std.dev: (515.32, 443.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.27, 117.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1025, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (1254.38, 719.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205006 reads in 393.537 CPU sec, 43.619 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519458, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 468, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2161)
[0000][PE] mean and std.dev: (614.82, 459.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.07, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1109, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (1104.93, 367.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 399.796 CPU sec, 43.897 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519186, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 446, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4278)
[0000][PE] mean and std.dev: (930.42, 940.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.72, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1454, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (1391.40, 670.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 396.557 CPU sec, 45.368 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204940
	[0000][ M::kt_pipeline] read 1204940 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519674, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 356, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2600)
[0000][PE] mean and std.dev: (678.64, 694.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (497.25, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1250, 1620, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (1682.69, 763.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 422.726 CPU sec, 47.460 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205168
	[0000][ M::kt_pipeline] read 1205168 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519044, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 432, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (747.19, 579.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1763, 3946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9670)
[0000][PE] mean and std.dev: (2266.08, 1851.41)
[0000][PE] low and high boundaries for proper pairs: (1, 12532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204940 reads in 422.318 CPU sec, 46.967 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519434, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 372, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2639)
[0000][PE] mean and std.dev: (671.87, 617.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1198, 2324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5156)
[0000][PE] mean and std.dev: (1638.07, 1277.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205168 reads in 419.362 CPU sec, 48.431 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519049, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 1207, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6016)
[0000][PE] mean and std.dev: (1306.29, 1160.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.50, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1250, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2677)
[0000][PE] mean and std.dev: (1155.70, 405.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 392.573 CPU sec, 46.426 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519198, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 528, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3068)
[0000][PE] mean and std.dev: (592.67, 411.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (555, 1316, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7089)
[0000][PE] mean and std.dev: (1490.86, 1192.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 396.046 CPU sec, 46.301 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519193, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 325, 545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1255)
[0000][PE] mean and std.dev: (315.75, 233.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1610)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.65, 118.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1199, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4719)
[0000][PE] mean and std.dev: (1158.38, 586.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 396.841 CPU sec, 40.819 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204984
	[0000][ M::kt_pipeline] read 1204984 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519428, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 463, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (725.60, 748.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.45, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1245, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (1293.95, 495.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 500.966 CPU sec, 69.637 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519417, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 413, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (795.08, 755.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1639, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (1329.23, 963.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204984 reads in 397.249 CPU sec, 51.427 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205116
	[0000][ M::kt_pipeline] read 1205116 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519358, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 315, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2384)
[0000][PE] mean and std.dev: (384.19, 469.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.53, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1390, 1437, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4546)
[0000][PE] mean and std.dev: (1676.50, 883.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 409.547 CPU sec, 50.321 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518993, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 438, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2834)
[0000][PE] mean and std.dev: (796.74, 796.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.53, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1441, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (1248.67, 754.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205116 reads in 403.880 CPU sec, 47.598 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204922
	[0000][ M::kt_pipeline] read 1204922 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519010, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 451, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2583)
[0000][PE] mean and std.dev: (631.47, 601.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.35, 117.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1359, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (1176.92, 432.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 402.304 CPU sec, 45.962 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204922
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519377, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 459, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1964)
[0000][PE] mean and std.dev: (580.96, 374.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1763, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4449)
[0000][PE] mean and std.dev: (1541.00, 654.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204922 reads in 402.336 CPU sec, 46.661 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519130, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 486, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4671)
[0000][PE] mean and std.dev: (661.19, 605.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.36, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1613, 3727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9545)
[0000][PE] mean and std.dev: (2111.78, 1541.71)
[0000][PE] low and high boundaries for proper pairs: (1, 12454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 441.807 CPU sec, 59.869 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205126
	[0000][ M::kt_pipeline] read 1205126 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519233, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 330, 888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2142)
[0000][PE] mean and std.dev: (416.47, 317.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.51, 118.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 399.195 CPU sec, 42.548 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519243, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 426, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2332)
[0000][PE] mean and std.dev: (555.79, 387.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.77, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1410, 1591, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4113)
[0000][PE] mean and std.dev: (1684.08, 911.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205126 reads in 401.196 CPU sec, 54.113 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519309, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 377, 789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1865)
[0000][PE] mean and std.dev: (484.00, 414.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.36, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1359, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4815)
[0000][PE] mean and std.dev: (1576.92, 883.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 405.180 CPU sec, 43.877 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519559, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 725, 2983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8281)
[0000][PE] mean and std.dev: (1746.21, 2103.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.20, 117.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1323, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (1240.05, 566.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 401.126 CPU sec, 44.537 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519184, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 640, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (912.72, 963.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1123, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (1207.65, 584.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 389.731 CPU sec, 39.403 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519416, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 383, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2028)
[0000][PE] mean and std.dev: (466.05, 413.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1327, 2430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5400)
[0000][PE] mean and std.dev: (1462.73, 876.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 405.016 CPU sec, 43.998 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204960
	[0000][ M::kt_pipeline] read 1204960 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 519194, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 535, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (1212.38, 1301.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.31, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1381, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (1405.54, 665.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 397.963 CPU sec, 55.908 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519014, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 448, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2507)
[0000][PE] mean and std.dev: (582.06, 436.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.54, 118.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 911, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4462)
[0000][PE] mean and std.dev: (1303.00, 767.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204960 reads in 396.679 CPU sec, 40.727 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519244, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 412, 1045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2541)
[0000][PE] mean and std.dev: (579.44, 427.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.42, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (543, 1119, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5979)
[0000][PE] mean and std.dev: (1215.53, 904.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 393.636 CPU sec, 35.776 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1204930
	[0000][ M::kt_pipeline] read 1204930 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519394, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 795, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4495)
[0000][PE] mean and std.dev: (937.16, 842.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.24, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1524, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3735)
[0000][PE] mean and std.dev: (1237.56, 664.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 401.366 CPU sec, 47.807 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519709, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 384, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (582.96, 508.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1432, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3038)
[0000][PE] mean and std.dev: (1179.20, 488.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204930 reads in 400.727 CPU sec, 37.619 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519107, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 478, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3243)
[0000][PE] mean and std.dev: (766.58, 747.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.44, 117.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1174, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (506, 2041)
[0000][PE] mean and std.dev: (1160.90, 142.68)
[0000][PE] low and high boundaries for proper pairs: (199, 2348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 393.907 CPU sec, 43.046 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519548, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 445, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3191)
[0000][PE] mean and std.dev: (783.36, 736.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.60, 117.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1425, 1633, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4119)
[0000][PE] mean and std.dev: (1680.57, 521.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 398.893 CPU sec, 51.337 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204944
	[0000][ M::kt_pipeline] read 1204944 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519129, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 533, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4734)
[0000][PE] mean and std.dev: (1056.20, 1069.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.56, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1469, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5079)
[0000][PE] mean and std.dev: (1558.71, 796.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 399.302 CPU sec, 42.294 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205220
	[0000][ M::kt_pipeline] read 1205220 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519256, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 460, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (678.92, 561.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.37, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1351, 1805, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4579)
[0000][PE] mean and std.dev: (1692.31, 795.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204944 reads in 396.568 CPU sec, 37.678 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1204968
	[0000][ M::kt_pipeline] read 1204968 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519365, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 376, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (789.32, 872.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 118.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1639, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5039)
[0000][PE] mean and std.dev: (1468.44, 915.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205220 reads in 397.803 CPU sec, 43.197 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519570, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 748, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4730)
[0000][PE] mean and std.dev: (947.96, 875.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.59, 118.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1324, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4696)
[0000][PE] mean and std.dev: (1295.50, 804.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204968 reads in 395.517 CPU sec, 35.597 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519368, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 435, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2267)
[0000][PE] mean and std.dev: (658.67, 523.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.49, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1319, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (1374.20, 751.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 397.670 CPU sec, 50.646 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519095, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 426, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4901)
[0000][PE] mean and std.dev: (742.45, 653.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.54, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1250, 3724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9484)
[0000][PE] mean and std.dev: (1880.80, 2058.38)
[0000][PE] low and high boundaries for proper pairs: (1, 12364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 418.920 CPU sec, 49.191 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519714, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 419, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3093)
[0000][PE] mean and std.dev: (711.00, 757.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.28, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1337, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (1214.33, 469.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 393.477 CPU sec, 39.557 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518903, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 1136, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (1085.24, 904.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.40, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1346, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4070)
[0000][PE] mean and std.dev: (1456.25, 725.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 389.431 CPU sec, 39.683 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204982
	[0000][ M::kt_pipeline] read 1204982 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518721, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 619, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2294)
[0000][PE] mean and std.dev: (556.89, 480.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.48, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1411, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (21, 2706)
[0000][PE] mean and std.dev: (1267.36, 350.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 402.046 CPU sec, 47.199 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519485, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 439, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (706.39, 748.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.47, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1455, 1815, 2674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5112)
[0000][PE] mean and std.dev: (2104.27, 1242.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204982 reads in 388.031 CPU sec, 39.691 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519706, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 442, 844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2026)
[0000][PE] mean and std.dev: (439.39, 297.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.33, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1260, 1737, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1847.73, 787.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 405.951 CPU sec, 45.969 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204914
	[0000][ M::kt_pipeline] read 1204914 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519633, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 414, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2450)
[0000][PE] mean and std.dev: (622.23, 570.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.65, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1131, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3154)
[0000][PE] mean and std.dev: (1065.00, 508.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 402.261 CPU sec, 42.936 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519867, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 386, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (612.85, 618.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.57, 117.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1267, 2974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7258)
[0000][PE] mean and std.dev: (1685.24, 1246.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204914 reads in 395.755 CPU sec, 42.548 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519117, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 444, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (706.74, 775.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.46, 117.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1629, 3144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7026)
[0000][PE] mean and std.dev: (2069.64, 1147.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 404.811 CPU sec, 48.300 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519701, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 373, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4542)
[0000][PE] mean and std.dev: (939.00, 1026.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.93, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 391.960 CPU sec, 50.836 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518958, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 941, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4546)
[0000][PE] mean and std.dev: (1009.88, 731.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.46, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (683, 1833, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5006)
[0000][PE] mean and std.dev: (1419.94, 824.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 389.712 CPU sec, 42.308 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519748, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 378, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2434)
[0000][PE] mean and std.dev: (524.11, 494.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.30, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 388.988 CPU sec, 40.132 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519130, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 635, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4394)
[0000][PE] mean and std.dev: (864.74, 647.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.45, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1885, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5450)
[0000][PE] mean and std.dev: (1899.50, 1076.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 394.220 CPU sec, 44.012 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205144
	[0000][ M::kt_pipeline] read 1205144 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519472, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 626, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (873.03, 924.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.29, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1285, 1876, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4909)
[0000][PE] mean and std.dev: (1855.14, 818.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 387.570 CPU sec, 38.361 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519111, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 818, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4158)
[0000][PE] mean and std.dev: (925.40, 760.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.34, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1218, 1701, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4518)
[0000][PE] mean and std.dev: (1635.40, 532.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205144 reads in 398.418 CPU sec, 39.538 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519200, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 514, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (833.03, 799.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.50, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (722, 1515, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4574)
[0000][PE] mean and std.dev: (1406.41, 925.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 397.993 CPU sec, 44.541 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519265, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 440, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2472)
[0000][PE] mean and std.dev: (520.69, 386.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.42, 118.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (501, 1249, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4446)
[0000][PE] mean and std.dev: (1368.53, 922.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 399.277 CPU sec, 49.877 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519435, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 479, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4823)
[0000][PE] mean and std.dev: (1042.83, 1256.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.51, 117.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1179, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (29, 2664)
[0000][PE] mean and std.dev: (1308.17, 519.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 393.399 CPU sec, 45.444 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519380, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 422, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4810)
[0000][PE] mean and std.dev: (995.21, 916.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 1546, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (1704.42, 1041.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 398.754 CPU sec, 39.201 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519327, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 708, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (710.55, 533.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (600, 1612, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5352)
[0000][PE] mean and std.dev: (1516.40, 932.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 394.749 CPU sec, 38.961 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1204852
	[0000][ M::kt_pipeline] read 1204852 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519049, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 510, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3113)
[0000][PE] mean and std.dev: (800.11, 657.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.33, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1414, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (1378.21, 549.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 390.681 CPU sec, 41.681 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1204940
	[0000][ M::kt_pipeline] read 1204940 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204852
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518856, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 682, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2267)
[0000][PE] mean and std.dev: (595.71, 294.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1450, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4627)
[0000][PE] mean and std.dev: (1506.50, 890.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204852 reads in 388.082 CPU sec, 36.432 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518822, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 683, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (777.04, 569.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.30, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (411, 1005, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2700)
[0000][PE] mean and std.dev: (837.25, 413.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204940 reads in 395.896 CPU sec, 47.291 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204894
	[0000][ M::kt_pipeline] read 1204894 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519406, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 343, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2936)
[0000][PE] mean and std.dev: (566.15, 527.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.32, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1719, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4806)
[0000][PE] mean and std.dev: (1829.54, 1190.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 388.181 CPU sec, 44.237 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204894
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519227, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 500, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4403)
[0000][PE] mean and std.dev: (960.17, 970.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.75, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1283, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2854)
[0000][PE] mean and std.dev: (1142.92, 337.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204894 reads in 392.002 CPU sec, 43.335 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204974
	[0000][ M::kt_pipeline] read 1204974 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519091, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 383, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3277)
[0000][PE] mean and std.dev: (554.18, 481.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.13, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 1323, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (1237.10, 630.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 400.769 CPU sec, 48.437 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519160, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 360, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (677.76, 712.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.86, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204974 reads in 389.317 CPU sec, 36.151 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519560, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 366, 526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1140)
[0000][PE] mean and std.dev: (333.45, 192.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.02, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1481, 3110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7840)
[0000][PE] mean and std.dev: (1741.42, 1273.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 397.446 CPU sec, 47.043 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519587, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 942, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5002)
[0000][PE] mean and std.dev: (1271.07, 1121.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1645, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3213)
[0000][PE] mean and std.dev: (1414.67, 523.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 396.259 CPU sec, 49.012 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519550, 1, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 651, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (841.61, 682.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 406.139 CPU sec, 49.906 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519490, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 425, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2894)
[0000][PE] mean and std.dev: (593.48, 545.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.46, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1785, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4867)
[0000][PE] mean and std.dev: (1631.75, 738.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 397.820 CPU sec, 50.774 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518928, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 353, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2196)
[0000][PE] mean and std.dev: (432.87, 369.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.59, 118.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1435, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5623)
[0000][PE] mean and std.dev: (1344.87, 818.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 399.102 CPU sec, 46.883 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519366, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 793, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6094)
[0000][PE] mean and std.dev: (1285.78, 1300.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.64, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1120, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2871)
[0000][PE] mean and std.dev: (1161.00, 521.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 405.665 CPU sec, 44.977 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519196, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 497, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2489)
[0000][PE] mean and std.dev: (647.33, 553.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.41, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (637, 1413, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4765)
[0000][PE] mean and std.dev: (1310.84, 909.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 395.240 CPU sec, 37.424 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519003, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 456, 825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1885)
[0000][PE] mean and std.dev: (541.48, 392.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1411, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (1446.26, 895.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 394.040 CPU sec, 38.103 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1204886
	[0000][ M::kt_pipeline] read 1204886 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519532, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 447, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3871)
[0000][PE] mean and std.dev: (796.93, 770.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.64, 118.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (281, 1696, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7004)
[0000][PE] mean and std.dev: (1553.80, 1126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9245)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1357, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1461.91, 471.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 397.411 CPU sec, 44.032 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519770, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 343, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (592.80, 625.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.66, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204886 reads in 396.875 CPU sec, 41.710 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519376, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 454, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (749.23, 708.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.48, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1166, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3913)
[0000][PE] mean and std.dev: (1258.71, 619.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 409.096 CPU sec, 46.865 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519570, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 458, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3242)
[0000][PE] mean and std.dev: (671.34, 556.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.52, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1251, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3831)
[0000][PE] mean and std.dev: (1287.38, 781.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 397.728 CPU sec, 46.481 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518983, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 452, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2903)
[0000][PE] mean and std.dev: (712.73, 573.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.31, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1306, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3695)
[0000][PE] mean and std.dev: (1535.88, 877.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 397.205 CPU sec, 48.891 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 519300, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 392, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (678.00, 633.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.49, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1308, 1582, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4131)
[0000][PE] mean and std.dev: (1398.45, 610.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 395.161 CPU sec, 39.211 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519545, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 760, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (1153.56, 1169.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.50, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1455, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4699)
[0000][PE] mean and std.dev: (1258.45, 548.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 394.414 CPU sec, 44.451 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205000
	[0000][ M::kt_pipeline] read 1205000 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518980, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 385, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1199)
[0000][PE] mean and std.dev: (346.06, 244.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1567, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3397)
[0000][PE] mean and std.dev: (1341.76, 760.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 397.220 CPU sec, 41.654 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519258, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 930, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (1042.56, 820.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.52, 118.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1424, 2299, 6335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16157)
[0000][PE] mean and std.dev: (3407.00, 2878.52)
[0000][PE] low and high boundaries for proper pairs: (1, 21068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205000 reads in 411.900 CPU sec, 41.637 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519518, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 647, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (721.70, 597.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.23, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1373, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2960)
[0000][PE] mean and std.dev: (1220.00, 514.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 396.800 CPU sec, 43.654 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519146, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 633, 2421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6501)
[0000][PE] mean and std.dev: (1347.13, 1253.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.51, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1503, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2944)
[0000][PE] mean and std.dev: (1262.50, 589.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 392.023 CPU sec, 40.284 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519689, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 410, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (668.50, 605.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.48, 117.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1230, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2791)
[0000][PE] mean and std.dev: (1276.54, 354.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 388.211 CPU sec, 37.884 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519333, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 394, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (603.71, 464.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.55, 117.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1508, 6094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15954)
[0000][PE] mean and std.dev: (2708.17, 2784.41)
[0000][PE] low and high boundaries for proper pairs: (1, 20884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 393.568 CPU sec, 37.972 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519583, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 608, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2578)
[0000][PE] mean and std.dev: (628.00, 497.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.12, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1074, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (1120.62, 509.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 403.212 CPU sec, 45.460 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519334, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 393, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2661)
[0000][PE] mean and std.dev: (546.50, 495.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1248, 1367, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (1581.57, 666.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 402.011 CPU sec, 57.232 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1204850
	[0000][ M::kt_pipeline] read 1204850 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519150, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 439, 881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2133)
[0000][PE] mean and std.dev: (505.43, 359.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.42, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 2504, 3867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9447)
[0000][PE] mean and std.dev: (2616.22, 2123.09)
[0000][PE] low and high boundaries for proper pairs: (1, 12237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 392.460 CPU sec, 43.240 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205182
	[0000][ M::kt_pipeline] read 1205182 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519311, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 390, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (764.86, 825.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.67, 117.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 1608, 2761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5899)
[0000][PE] mean and std.dev: (2051.80, 1365.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204850 reads in 389.001 CPU sec, 42.440 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519232, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 441, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (709.23, 693.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.18, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205182 reads in 392.238 CPU sec, 44.072 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518849, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 840, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4190)
[0000][PE] mean and std.dev: (1012.36, 873.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.89, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1259, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5749)
[0000][PE] mean and std.dev: (1815.67, 1479.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 397.263 CPU sec, 45.777 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519572, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 398, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4335)
[0000][PE] mean and std.dev: (782.61, 885.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.31, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1677, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (1715.36, 752.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 392.991 CPU sec, 43.652 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 519459, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 955, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (825.50, 690.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.92, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1556, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (1272.65, 675.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 403.567 CPU sec, 48.478 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519458, 0, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 713, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3236)
[0000][PE] mean and std.dev: (747.00, 525.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.73, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1317, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (1337.24, 710.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 396.275 CPU sec, 45.559 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519309, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 429, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5879)
[0000][PE] mean and std.dev: (1118.90, 1147.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.30, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (444, 968, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6474)
[0000][PE] mean and std.dev: (1227.07, 1120.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 406.400 CPU sec, 49.649 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519004, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 469, 766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1794)
[0000][PE] mean and std.dev: (488.16, 383.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.59, 118.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1442, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (1122.50, 509.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 406.082 CPU sec, 42.059 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1204972
	[0000][ M::kt_pipeline] read 1204972 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519334, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 540, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (936.39, 838.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.47, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1270, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4766)
[0000][PE] mean and std.dev: (1515.93, 1113.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 399.601 CPU sec, 47.838 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205258
	[0000][ M::kt_pipeline] read 1205258 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519199, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 392, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (666.85, 679.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.29, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1265, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4697)
[0000][PE] mean and std.dev: (1754.11, 1106.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204972 reads in 384.728 CPU sec, 31.348 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1204962
	[0000][ M::kt_pipeline] read 1204962 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519516, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 438, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1869)
[0000][PE] mean and std.dev: (508.14, 338.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.57, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1004, 3097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7821)
[0000][PE] mean and std.dev: (1715.60, 1485.49)
[0000][PE] low and high boundaries for proper pairs: (1, 10183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205258 reads in 402.254 CPU sec, 47.376 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519268, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 365, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (547.60, 589.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.50, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1825, 4778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11904)
[0000][PE] mean and std.dev: (2427.85, 1711.62)
[0000][PE] low and high boundaries for proper pairs: (1, 15467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204962 reads in 397.278 CPU sec, 39.910 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519228, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 574, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4060)
[0000][PE] mean and std.dev: (927.52, 952.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1165, 2565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5849)
[0000][PE] mean and std.dev: (1672.86, 1151.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 402.040 CPU sec, 47.051 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519290, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 473, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (653.83, 514.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.66, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1152, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (1343.70, 901.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4951)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 396.299 CPU sec, 45.355 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519376, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 477, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (715.77, 646.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.24, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1286, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (207, 2562)
[0000][PE] mean and std.dev: (1233.23, 361.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 405.379 CPU sec, 53.133 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519819, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 338, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2704)
[0000][PE] mean and std.dev: (684.58, 629.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.46, 118.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1351, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5017)
[0000][PE] mean and std.dev: (1686.57, 969.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 397.545 CPU sec, 49.522 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1204944
	[0000][ M::kt_pipeline] read 1204944 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519307, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 478, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2176)
[0000][PE] mean and std.dev: (558.64, 482.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.48, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1479, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (50, 2750)
[0000][PE] mean and std.dev: (1204.67, 480.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 398.958 CPU sec, 50.617 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519485, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 397, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1397)
[0000][PE] mean and std.dev: (434.83, 272.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.21, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1450, 2090, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4564)
[0000][PE] mean and std.dev: (1704.80, 601.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204944 reads in 400.982 CPU sec, 47.690 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518985, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 398, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6192)
[0000][PE] mean and std.dev: (983.71, 1043.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.21, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1213, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4509)
[0000][PE] mean and std.dev: (1237.46, 657.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 398.957 CPU sec, 47.747 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519193, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 616, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2695)
[0000][PE] mean and std.dev: (676.30, 529.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.20, 117.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1296, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (203, 2538)
[0000][PE] mean and std.dev: (1287.87, 309.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 398.045 CPU sec, 51.104 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204938
	[0000][ M::kt_pipeline] read 1204938 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518974, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 293, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2969)
[0000][PE] mean and std.dev: (640.83, 808.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.18, 118.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1770, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5737)
[0000][PE] mean and std.dev: (1787.50, 999.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 394.719 CPU sec, 38.309 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519502, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 486, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2949)
[0000][PE] mean and std.dev: (772.10, 763.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1421, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (1534.61, 715.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204938 reads in 391.855 CPU sec, 39.914 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205212
	[0000][ M::kt_pipeline] read 1205212 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519051, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 545, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2994)
[0000][PE] mean and std.dev: (701.18, 575.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1495, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6009)
[0000][PE] mean and std.dev: (1491.00, 1134.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 394.895 CPU sec, 44.615 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519097, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 407, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2707)
[0000][PE] mean and std.dev: (601.93, 584.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.42, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1207, 4171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10615)
[0000][PE] mean and std.dev: (2209.92, 2184.80)
[0000][PE] low and high boundaries for proper pairs: (1, 13837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205212 reads in 408.135 CPU sec, 67.241 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519243, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 435, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3202)
[0000][PE] mean and std.dev: (696.40, 742.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.49, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 2431, 4229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10801)
[0000][PE] mean and std.dev: (3093.36, 2734.83)
[0000][PE] low and high boundaries for proper pairs: (1, 14087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 399.540 CPU sec, 44.673 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519200, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 461, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2059)
[0000][PE] mean and std.dev: (493.37, 306.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.69, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 402.697 CPU sec, 52.415 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1204938
	[0000][ M::kt_pipeline] read 1204938 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519626, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 382, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (611.89, 616.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1046, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2779)
[0000][PE] mean and std.dev: (954.40, 337.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 389.496 CPU sec, 36.416 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204952
	[0000][ M::kt_pipeline] read 1204952 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519119, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 494, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (877.70, 867.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1222, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2686)
[0000][PE] mean and std.dev: (1134.20, 398.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204938 reads in 418.820 CPU sec, 50.659 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519156, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 335, 749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1753)
[0000][PE] mean and std.dev: (330.28, 218.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.16, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1631, 2540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6036)
[0000][PE] mean and std.dev: (1634.23, 862.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204952 reads in 400.289 CPU sec, 51.017 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519214, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 433, 536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1120)
[0000][PE] mean and std.dev: (327.54, 139.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.28, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1432, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (1404.12, 713.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 397.715 CPU sec, 46.559 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519092, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 444, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (644.76, 438.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.42, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1524, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4736)
[0000][PE] mean and std.dev: (1390.50, 728.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 391.703 CPU sec, 46.852 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518679, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 949, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (918.54, 809.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.46, 118.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1140, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4483)
[0000][PE] mean and std.dev: (1367.44, 720.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 394.326 CPU sec, 38.226 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519250, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 418, 715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1819)
[0000][PE] mean and std.dev: (423.27, 364.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1807, 2690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5664)
[0000][PE] mean and std.dev: (1995.58, 1285.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 396.326 CPU sec, 36.856 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 519833, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 792, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5744)
[0000][PE] mean and std.dev: (955.50, 837.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.51, 117.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1594, 2467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5721)
[0000][PE] mean and std.dev: (1684.67, 1035.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 397.434 CPU sec, 45.281 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1204842
	[0000][ M::kt_pipeline] read 1204842 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519199, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 830, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3937)
[0000][PE] mean and std.dev: (960.86, 844.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.85, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1329, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (1370.71, 692.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 401.587 CPU sec, 50.556 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519498, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 634, 3079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8603)
[0000][PE] mean and std.dev: (1150.50, 1250.68)
[0000][PE] low and high boundaries for proper pairs: (1, 11365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.59, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1355, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (1473.23, 586.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204842 reads in 401.503 CPU sec, 48.461 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518728, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 369, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (732.57, 759.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.17, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1110, 2374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5382)
[0000][PE] mean and std.dev: (1435.47, 976.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 403.314 CPU sec, 42.925 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519505, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 979, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (1130.97, 926.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.52, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1338, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (1271.27, 566.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 397.145 CPU sec, 56.402 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518855, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 475, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (725.80, 619.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.56, 118.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1404, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4283)
[0000][PE] mean and std.dev: (1330.27, 664.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 397.486 CPU sec, 40.367 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519606, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 404, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2439)
[0000][PE] mean and std.dev: (448.17, 312.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1093, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4171)
[0000][PE] mean and std.dev: (1067.25, 557.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 409.308 CPU sec, 51.317 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519372, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 400, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1617)
[0000][PE] mean and std.dev: (441.30, 241.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.07, 117.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 405.670 CPU sec, 44.066 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518859, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 716, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2634)
[0000][PE] mean and std.dev: (748.00, 443.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.48, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1267, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (1268.09, 830.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 405.890 CPU sec, 47.484 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519563, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 363, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1202)
[0000][PE] mean and std.dev: (301.86, 163.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.98, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 1353, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3551)
[0000][PE] mean and std.dev: (1191.12, 683.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 403.936 CPU sec, 46.706 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518788, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 423, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2615)
[0000][PE] mean and std.dev: (674.11, 597.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.32, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1674, 3094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7330)
[0000][PE] mean and std.dev: (1813.33, 1661.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 404.520 CPU sec, 48.772 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519656, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 394, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3278)
[0000][PE] mean and std.dev: (628.95, 602.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.76, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1558, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5034)
[0000][PE] mean and std.dev: (1722.56, 1004.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 410.499 CPU sec, 45.039 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519306, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 384, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2725)
[0000][PE] mean and std.dev: (593.00, 419.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 1309, 2554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6460)
[0000][PE] mean and std.dev: (1307.20, 1032.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 400.176 CPU sec, 39.635 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1204906
	[0000][ M::kt_pipeline] read 1204906 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518953, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 365, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (449.87, 381.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.52, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1206, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (1191.90, 578.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 391.747 CPU sec, 42.428 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205022
	[0000][ M::kt_pipeline] read 1205022 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518783, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 375, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (599.85, 520.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.36, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1679, 3135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7495)
[0000][PE] mean and std.dev: (2151.56, 1812.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204906 reads in 395.197 CPU sec, 46.576 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204944
	[0000][ M::kt_pipeline] read 1204944 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519139, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 818, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4789)
[0000][PE] mean and std.dev: (1040.29, 979.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.19, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1426, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5827)
[0000][PE] mean and std.dev: (1704.47, 1181.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205022 reads in 399.080 CPU sec, 49.002 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519285, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 612, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5293)
[0000][PE] mean and std.dev: (1126.55, 1225.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.32, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1594, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4094)
[0000][PE] mean and std.dev: (1319.40, 593.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204944 reads in 400.685 CPU sec, 46.339 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519508, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 536, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2439)
[0000][PE] mean and std.dev: (626.58, 479.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.56, 118.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1341, 1869, 2640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5238)
[0000][PE] mean and std.dev: (1940.33, 894.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 395.205 CPU sec, 47.900 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519035, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 321, 638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1466)
[0000][PE] mean and std.dev: (315.93, 185.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 2005, 3472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8320)
[0000][PE] mean and std.dev: (2554.95, 1984.61)
[0000][PE] low and high boundaries for proper pairs: (1, 10744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 408.580 CPU sec, 57.696 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1204954
	[0000][ M::kt_pipeline] read 1204954 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519506, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 484, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (862.68, 686.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (566, 1134, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4619)
[0000][PE] mean and std.dev: (1221.11, 842.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 404.496 CPU sec, 46.443 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519254, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 829, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (710.59, 438.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.49, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1422, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (1758.31, 1077.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6333)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204954 reads in 418.412 CPU sec, 45.374 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519396, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 763, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (909.61, 790.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.54, 118.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1608, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4378)
[0000][PE] mean and std.dev: (1526.92, 585.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 393.198 CPU sec, 41.539 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204970
	[0000][ M::kt_pipeline] read 1204970 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519605, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 654, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (898.42, 766.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.34, 117.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1362, 2871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7231)
[0000][PE] mean and std.dev: (1615.00, 1047.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 403.229 CPU sec, 47.469 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205216
	[0000][ M::kt_pipeline] read 1205216 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519254, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 989, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5052)
[0000][PE] mean and std.dev: (1117.78, 923.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1282, 1869, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4009)
[0000][PE] mean and std.dev: (1688.29, 851.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204970 reads in 403.013 CPU sec, 41.662 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519178, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 454, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4654)
[0000][PE] mean and std.dev: (983.35, 1160.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.45, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1652, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4121)
[0000][PE] mean and std.dev: (1515.90, 855.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205216 reads in 399.657 CPU sec, 38.684 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519414, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 401, 867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2171)
[0000][PE] mean and std.dev: (560.75, 513.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.54, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1286, 1699, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5021)
[0000][PE] mean and std.dev: (1850.00, 878.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 401.412 CPU sec, 50.050 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205206
	[0000][ M::kt_pipeline] read 1205206 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519425, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 765, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3327)
[0000][PE] mean and std.dev: (858.11, 698.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.30, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1929, 2856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6264)
[0000][PE] mean and std.dev: (1942.36, 1170.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 388.129 CPU sec, 38.921 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204936
	[0000][ M::kt_pipeline] read 1204936 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519154, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 516, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2047)
[0000][PE] mean and std.dev: (635.87, 463.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.60, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1473, 2561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5553)
[0000][PE] mean and std.dev: (1712.00, 1120.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205206 reads in 401.246 CPU sec, 47.162 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1204980
	[0000][ M::kt_pipeline] read 1204980 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519190, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 394, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2180)
[0000][PE] mean and std.dev: (600.45, 445.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.76, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1319, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (1327.79, 523.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204936 reads in 399.186 CPU sec, 52.866 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519388, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 813, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6366)
[0000][PE] mean and std.dev: (855.47, 1153.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.62, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1350, 1639, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4323)
[0000][PE] mean and std.dev: (1749.80, 1012.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204980 reads in 393.085 CPU sec, 45.185 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1204912
	[0000][ M::kt_pipeline] read 1204912 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519532, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 321, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1089)
[0000][PE] mean and std.dev: (286.54, 166.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.47, 117.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1174, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (1228.70, 649.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 399.386 CPU sec, 50.088 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204912
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519241, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 414, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4066)
[0000][PE] mean and std.dev: (769.76, 697.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.42, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1483, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4822)
[0000][PE] mean and std.dev: (1431.44, 859.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204912 reads in 395.335 CPU sec, 44.762 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519313, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 401, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2932)
[0000][PE] mean and std.dev: (776.70, 674.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.26, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1428, 2799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6943)
[0000][PE] mean and std.dev: (1559.30, 898.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 417.289 CPU sec, 54.865 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519157, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 448, 3053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8723)
[0000][PE] mean and std.dev: (1405.04, 1669.87)
[0000][PE] low and high boundaries for proper pairs: (1, 11558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.22, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 2011, 3103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7109)
[0000][PE] mean and std.dev: (2065.91, 1113.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 395.921 CPU sec, 49.491 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519732, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 440, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (788.38, 1004.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.77, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 2137, 3009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7027)
[0000][PE] mean and std.dev: (2039.10, 1148.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 395.588 CPU sec, 43.211 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519065, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 609, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (867.37, 637.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.83, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1359, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (1141.53, 543.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 395.355 CPU sec, 46.172 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205204
	[0000][ M::kt_pipeline] read 1205204 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519277, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 504, 695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1445)
[0000][PE] mean and std.dev: (527.72, 260.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1552, 3318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8250)
[0000][PE] mean and std.dev: (1937.91, 1530.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 401.588 CPU sec, 46.748 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205024
	[0000][ M::kt_pipeline] read 1205024 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519447, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 650, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4570)
[0000][PE] mean and std.dev: (964.62, 946.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.56, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1360, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (3, 2718)
[0000][PE] mean and std.dev: (1251.36, 485.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205204 reads in 407.888 CPU sec, 53.889 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519288, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 553, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2567)
[0000][PE] mean and std.dev: (722.10, 573.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.57, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1206, 2180, 4651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11541)
[0000][PE] mean and std.dev: (2606.50, 1908.08)
[0000][PE] low and high boundaries for proper pairs: (1, 14986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205024 reads in 394.216 CPU sec, 46.590 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204934
	[0000][ M::kt_pipeline] read 1204934 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519376, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 367, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (636.50, 623.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.51, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 398.233 CPU sec, 42.301 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518984, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 398, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2735)
[0000][PE] mean and std.dev: (623.60, 608.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.36, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (441, 1058, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (991.36, 544.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204934 reads in 401.509 CPU sec, 44.568 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204934
	[0000][ M::kt_pipeline] read 1204934 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518896, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 289, 844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2174)
[0000][PE] mean and std.dev: (414.53, 348.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.69, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 421.517 CPU sec, 50.540 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205196
	[0000][ M::kt_pipeline] read 1205196 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519485, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 359, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6145)
[0000][PE] mean and std.dev: (1085.35, 1391.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.72, 118.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1281, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4446)
[0000][PE] mean and std.dev: (1488.42, 771.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204934 reads in 409.300 CPU sec, 51.097 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519422, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 358, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4393)
[0000][PE] mean and std.dev: (922.54, 992.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205196 reads in 418.167 CPU sec, 57.665 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518969, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 547, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3433)
[0000][PE] mean and std.dev: (790.52, 668.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.86, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1007, 2885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7047)
[0000][PE] mean and std.dev: (1619.00, 1305.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 407.110 CPU sec, 49.525 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519412, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 729, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3042)
[0000][PE] mean and std.dev: (736.11, 565.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.47, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1245, 1798, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3711)
[0000][PE] mean and std.dev: (1600.83, 568.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 396.309 CPU sec, 47.984 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519391, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 328, 752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1782)
[0000][PE] mean and std.dev: (386.90, 269.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.66, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1235, 1523, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4346)
[0000][PE] mean and std.dev: (1634.47, 843.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 399.073 CPU sec, 40.306 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519464, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 555, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3100)
[0000][PE] mean and std.dev: (613.36, 440.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.39, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1389, 1489, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4503)
[0000][PE] mean and std.dev: (1491.36, 768.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 397.534 CPU sec, 42.415 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205184
	[0000][ M::kt_pipeline] read 1205184 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518860, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 450, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6020)
[0000][PE] mean and std.dev: (1216.05, 1547.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.22, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1519, 2593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5709)
[0000][PE] mean and std.dev: (1943.72, 1146.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 399.780 CPU sec, 51.924 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519194, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 770, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (769.62, 501.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.58, 117.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1059, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4722)
[0000][PE] mean and std.dev: (1253.22, 666.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205184 reads in 397.130 CPU sec, 46.559 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518838, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 418, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2586)
[0000][PE] mean and std.dev: (704.35, 583.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.08, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1450, 3000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7252)
[0000][PE] mean and std.dev: (1854.10, 1248.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 393.118 CPU sec, 43.037 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1204956
	[0000][ M::kt_pipeline] read 1204956 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519182, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 515, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2427)
[0000][PE] mean and std.dev: (635.77, 460.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.42, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1360, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (149, 2654)
[0000][PE] mean and std.dev: (1206.90, 430.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 399.057 CPU sec, 43.977 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519427, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 425, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3033)
[0000][PE] mean and std.dev: (769.25, 811.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.40, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (661, 1678, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5302)
[0000][PE] mean and std.dev: (1387.90, 872.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204956 reads in 393.156 CPU sec, 35.925 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1204940
	[0000][ M::kt_pipeline] read 1204940 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518950, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 416, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (755.88, 732.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1855, 2340, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (385, 4060)
[0000][PE] mean and std.dev: (1934.55, 709.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 409.135 CPU sec, 48.287 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1204982
	[0000][ M::kt_pipeline] read 1204982 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519747, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 644, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (805.90, 834.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1479, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5873)
[0000][PE] mean and std.dev: (1640.23, 1061.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204940 reads in 396.043 CPU sec, 42.105 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518906, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 426, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2721)
[0000][PE] mean and std.dev: (604.93, 550.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.53, 118.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1208, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4307)
[0000][PE] mean and std.dev: (1246.25, 628.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204982 reads in 396.780 CPU sec, 45.289 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519613, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 544, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2825)
[0000][PE] mean and std.dev: (746.20, 503.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.56, 118.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1480, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5942)
[0000][PE] mean and std.dev: (1451.56, 943.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 412.823 CPU sec, 53.018 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1204906
	[0000][ M::kt_pipeline] read 1204906 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519465, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 415, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3603)
[0000][PE] mean and std.dev: (633.50, 531.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.81, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1444, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (1357.29, 737.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 406.512 CPU sec, 51.860 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519462, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 754, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (732.24, 484.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.55, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1868, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5808)
[0000][PE] mean and std.dev: (1824.00, 967.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204906 reads in 406.706 CPU sec, 51.117 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519108, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 572, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (786.95, 684.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.46, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1522, 3369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8191)
[0000][PE] mean and std.dev: (2022.68, 1600.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 405.048 CPU sec, 53.603 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518551, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 645, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (868.05, 743.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.22, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1386, 1733, 2758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5502)
[0000][PE] mean and std.dev: (2130.64, 1024.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 394.066 CPU sec, 48.279 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519034, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 541, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2818)
[0000][PE] mean and std.dev: (817.59, 595.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.57, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1193, 1719, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (1668.07, 654.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 395.051 CPU sec, 49.368 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518998, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 322, 423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 747)
[0000][PE] mean and std.dev: (306.50, 110.82)
[0000][PE] low and high boundaries for proper pairs: (1, 909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.66, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 962, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2586)
[0000][PE] mean and std.dev: (971.60, 540.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 396.264 CPU sec, 45.061 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519185, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 471, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4655)
[0000][PE] mean and std.dev: (839.15, 870.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.28, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 395.251 CPU sec, 31.147 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519094, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 411, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2541)
[0000][PE] mean and std.dev: (621.30, 522.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.48, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1158, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (1346.15, 843.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 398.201 CPU sec, 47.356 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205292
	[0000][ M::kt_pipeline] read 1205292 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519402, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 405, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3733)
[0000][PE] mean and std.dev: (718.21, 700.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.47, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1875, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1624.28, 663.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 407.124 CPU sec, 46.683 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519305, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 420, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (825.52, 875.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1815, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4422)
[0000][PE] mean and std.dev: (1525.80, 757.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205292 reads in 395.850 CPU sec, 45.623 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519314, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 366, 639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1343)
[0000][PE] mean and std.dev: (378.78, 196.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.47, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 942, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3526)
[0000][PE] mean and std.dev: (1109.25, 569.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 400.890 CPU sec, 41.592 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518863, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 416, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3977)
[0000][PE] mean and std.dev: (877.94, 980.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.35, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1783, 4025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9875)
[0000][PE] mean and std.dev: (2801.17, 2470.44)
[0000][PE] low and high boundaries for proper pairs: (1, 12800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 397.367 CPU sec, 47.584 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519177, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 661, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (824.68, 814.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1291, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (1175.88, 697.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 397.370 CPU sec, 45.812 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519215, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 498, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2768)
[0000][PE] mean and std.dev: (675.04, 452.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1337, 3168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7892)
[0000][PE] mean and std.dev: (1766.08, 1406.29)
[0000][PE] low and high boundaries for proper pairs: (1, 10254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 398.038 CPU sec, 43.785 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519288, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 391, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3014)
[0000][PE] mean and std.dev: (638.54, 497.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.40, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1241, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3189)
[0000][PE] mean and std.dev: (1356.43, 567.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3926)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 396.540 CPU sec, 52.565 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205000
	[0000][ M::kt_pipeline] read 1205000 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518949, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 439, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3897)
[0000][PE] mean and std.dev: (836.88, 810.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.79, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1563, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4534)
[0000][PE] mean and std.dev: (1397.83, 931.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 395.026 CPU sec, 43.142 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205244
	[0000][ M::kt_pipeline] read 1205244 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519577, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 316, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1515)
[0000][PE] mean and std.dev: (465.58, 409.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.64, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1556, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3786)
[0000][PE] mean and std.dev: (1402.33, 588.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205000 reads in 394.521 CPU sec, 49.081 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519218, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 411, 842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1938)
[0000][PE] mean and std.dev: (529.17, 393.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.40, 117.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205244 reads in 397.403 CPU sec, 50.595 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519355, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 415, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2558)
[0000][PE] mean and std.dev: (630.44, 518.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.48, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 398.118 CPU sec, 50.633 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519402, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 458, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (879.92, 809.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.62, 118.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1332, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5221)
[0000][PE] mean and std.dev: (1566.77, 1057.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 413.762 CPU sec, 54.319 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204918
	[0000][ M::kt_pipeline] read 1204918 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519298, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 338, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1476)
[0000][PE] mean and std.dev: (365.79, 234.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.20, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1327, 3206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7396)
[0000][PE] mean and std.dev: (1764.57, 1037.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 416.747 CPU sec, 46.582 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1204920
	[0000][ M::kt_pipeline] read 1204920 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204918
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519335, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 370, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2086)
[0000][PE] mean and std.dev: (540.04, 438.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 118.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1246, 2798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6492)
[0000][PE] mean and std.dev: (1839.12, 1376.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204918 reads in 408.593 CPU sec, 53.045 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519528, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 367, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2036)
[0000][PE] mean and std.dev: (567.00, 432.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.35, 117.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (628, 1096, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5074)
[0000][PE] mean and std.dev: (1328.07, 1136.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204920 reads in 403.296 CPU sec, 45.706 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519466, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 550, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5171)
[0000][PE] mean and std.dev: (1045.62, 1028.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.40, 117.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 1027, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (900.11, 444.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 399.073 CPU sec, 46.305 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1204956
	[0000][ M::kt_pipeline] read 1204956 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519096, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 389, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3663)
[0000][PE] mean and std.dev: (917.43, 952.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.52, 118.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1488, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5557)
[0000][PE] mean and std.dev: (1484.25, 1012.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 403.196 CPU sec, 50.693 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519623, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 409, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2149)
[0000][PE] mean and std.dev: (611.86, 548.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.57, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1609, 3088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6952)
[0000][PE] mean and std.dev: (2273.75, 1806.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204956 reads in 391.998 CPU sec, 34.312 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519468, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 886, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (906.73, 841.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.19, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1650, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5554)
[0000][PE] mean and std.dev: (1521.07, 794.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 396.324 CPU sec, 48.639 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519948, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 625, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4832)
[0000][PE] mean and std.dev: (1082.52, 1072.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.42, 117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1279, 2820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6818)
[0000][PE] mean and std.dev: (1662.25, 1181.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 394.242 CPU sec, 47.058 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519331, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 339, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3768)
[0000][PE] mean and std.dev: (595.65, 613.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.78, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1359, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (1383.62, 573.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 393.310 CPU sec, 45.959 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1204924
	[0000][ M::kt_pipeline] read 1204924 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518849, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 372, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (747.04, 752.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.48, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1664, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4820)
[0000][PE] mean and std.dev: (1480.89, 684.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 402.528 CPU sec, 50.794 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519125, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 473, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (760.91, 598.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.55, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1047, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (1239.36, 796.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204924 reads in 394.785 CPU sec, 40.621 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519393, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 334, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (547.32, 574.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.35, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1996, 4277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11025)
[0000][PE] mean and std.dev: (2314.47, 1665.37)
[0000][PE] low and high boundaries for proper pairs: (1, 14399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 395.005 CPU sec, 45.777 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205004
	[0000][ M::kt_pipeline] read 1205004 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519495, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 383, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (536.91, 442.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.91, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 2650, 3703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8891)
[0000][PE] mean and std.dev: (2652.00, 1425.41)
[0000][PE] low and high boundaries for proper pairs: (1, 11485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 397.432 CPU sec, 49.104 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205176
	[0000][ M::kt_pipeline] read 1205176 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205004
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519748, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 1236, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4396)
[0000][PE] mean and std.dev: (1146.18, 939.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.25, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1321, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2927)
[0000][PE] mean and std.dev: (1153.74, 490.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205004 reads in 394.052 CPU sec, 54.538 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519610, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 515, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6022)
[0000][PE] mean and std.dev: (1078.04, 1282.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.29, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1430, 3445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8137)
[0000][PE] mean and std.dev: (1958.54, 1424.59)
[0000][PE] low and high boundaries for proper pairs: (1, 10483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205176 reads in 413.149 CPU sec, 48.397 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519393, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 513, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5267)
[0000][PE] mean and std.dev: (1054.36, 1007.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.28, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1017, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2747)
[0000][PE] mean and std.dev: (978.81, 339.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 406.103 CPU sec, 53.153 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519429, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 564, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (735.04, 629.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1305, 1745, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3465)
[0000][PE] mean and std.dev: (1471.27, 406.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 395.977 CPU sec, 43.019 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204988
	[0000][ M::kt_pipeline] read 1204988 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519153, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 316, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2818)
[0000][PE] mean and std.dev: (592.19, 657.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.30, 117.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1321, 3324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8408)
[0000][PE] mean and std.dev: (2291.64, 2210.74)
[0000][PE] low and high boundaries for proper pairs: (1, 11135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 411.248 CPU sec, 55.262 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519020, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 413, 628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1380)
[0000][PE] mean and std.dev: (402.05, 245.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.48, 117.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1626, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (1585.50, 562.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204988 reads in 395.360 CPU sec, 45.242 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519626, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 380, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1838)
[0000][PE] mean and std.dev: (426.19, 407.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.91, 117.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 981, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2142)
[0000][PE] mean and std.dev: (893.93, 394.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 395.729 CPU sec, 55.189 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519590, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 713, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (676.44, 447.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.39, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 396.692 CPU sec, 49.997 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519737, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 652, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3066)
[0000][PE] mean and std.dev: (625.40, 558.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.23, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 2067, 3145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7413)
[0000][PE] mean and std.dev: (1840.91, 1100.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 396.521 CPU sec, 51.349 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519569, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 319, 582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1354)
[0000][PE] mean and std.dev: (338.68, 248.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.58, 118.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1947, 3020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7186)
[0000][PE] mean and std.dev: (1862.09, 1279.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 396.250 CPU sec, 46.112 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519517, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 585, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (774.00, 700.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 396.103 CPU sec, 37.722 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519455, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 411, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (720.32, 601.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.64, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 400.132 CPU sec, 49.621 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1204884
	[0000][ M::kt_pipeline] read 1204884 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519360, 5, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 404, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (686.32, 591.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 411.137 CPU sec, 46.624 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519219, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 401, 829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2159)
[0000][PE] mean and std.dev: (454.64, 367.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 929, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3976)
[0000][PE] mean and std.dev: (1229.64, 642.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204884 reads in 395.858 CPU sec, 46.283 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519903, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 600, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4471)
[0000][PE] mean and std.dev: (960.00, 970.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.41, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1148, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4997)
[0000][PE] mean and std.dev: (1522.71, 938.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 403.216 CPU sec, 58.116 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519553, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 979, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (1035.31, 1076.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1306, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3845)
[0000][PE] mean and std.dev: (1555.38, 815.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 390.100 CPU sec, 37.070 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519316, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 474, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (725.19, 677.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.51, 117.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1472, 3097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7119)
[0000][PE] mean and std.dev: (2235.79, 1706.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 393.894 CPU sec, 49.448 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204968
	[0000][ M::kt_pipeline] read 1204968 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519228, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 731, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3281)
[0000][PE] mean and std.dev: (736.25, 593.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.49, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1025, 2547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5889)
[0000][PE] mean and std.dev: (1524.10, 1003.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 397.008 CPU sec, 48.176 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1204960
	[0000][ M::kt_pipeline] read 1204960 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519579, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 433, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4209)
[0000][PE] mean and std.dev: (922.67, 864.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.80, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 2088, 2623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5435)
[0000][PE] mean and std.dev: (1925.44, 1011.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204968 reads in 397.700 CPU sec, 44.562 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205006
	[0000][ M::kt_pipeline] read 1205006 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519317, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 445, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2636)
[0000][PE] mean and std.dev: (651.85, 569.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.67, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1231, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3927)
[0000][PE] mean and std.dev: (1307.59, 749.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204960 reads in 398.584 CPU sec, 46.122 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1204980
	[0000][ M::kt_pipeline] read 1204980 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519254, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 517, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4883)
[0000][PE] mean and std.dev: (1006.33, 1093.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.89, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1226, 2176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5164)
[0000][PE] mean and std.dev: (1462.62, 1117.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205006 reads in 400.041 CPU sec, 46.581 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519205, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 617, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (751.11, 575.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.46, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1718, 2828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6388)
[0000][PE] mean and std.dev: (2081.42, 1585.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204980 reads in 412.133 CPU sec, 58.288 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519686, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 498, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (713.32, 617.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.28, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1123, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3224)
[0000][PE] mean and std.dev: (1131.40, 545.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 396.853 CPU sec, 52.123 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519382, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 925, 2573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6995)
[0000][PE] mean and std.dev: (1440.88, 1797.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.31, 117.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1731, 3541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8681)
[0000][PE] mean and std.dev: (2212.80, 1819.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 393.355 CPU sec, 39.465 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518893, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 652, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (943.16, 828.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.36, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1578, 4427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11617)
[0000][PE] mean and std.dev: (2279.67, 1978.12)
[0000][PE] low and high boundaries for proper pairs: (1, 15212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 398.552 CPU sec, 41.182 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519392, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 373, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2645)
[0000][PE] mean and std.dev: (549.92, 463.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.66, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1038, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4223)
[0000][PE] mean and std.dev: (1091.00, 499.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 388.463 CPU sec, 28.627 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519127, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 682, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (802.52, 630.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.47, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1465, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4928)
[0000][PE] mean and std.dev: (1732.29, 1066.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 390.548 CPU sec, 45.637 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518966, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 494, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3028)
[0000][PE] mean and std.dev: (781.22, 624.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.88, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1223, 1970, 3057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6725)
[0000][PE] mean and std.dev: (1875.07, 900.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 397.205 CPU sec, 43.872 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519210, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 455, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2942)
[0000][PE] mean and std.dev: (648.29, 597.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.56, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1873, 4568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12220)
[0000][PE] mean and std.dev: (2342.06, 1947.09)
[0000][PE] low and high boundaries for proper pairs: (1, 16046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 391.781 CPU sec, 47.404 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204920
	[0000][ M::kt_pipeline] read 1204920 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518918, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 720, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (751.82, 670.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.26, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1430, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5028)
[0000][PE] mean and std.dev: (1759.28, 1082.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 399.436 CPU sec, 48.023 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205226
	[0000][ M::kt_pipeline] read 1205226 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519211, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 452, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4252)
[0000][PE] mean and std.dev: (787.10, 826.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.91, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1582, 3088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7278)
[0000][PE] mean and std.dev: (2073.88, 1606.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204920 reads in 403.479 CPU sec, 54.220 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204924
	[0000][ M::kt_pipeline] read 1204924 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519060, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 585, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (880.40, 772.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.38, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1397, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4497)
[0000][PE] mean and std.dev: (1380.86, 920.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5662)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205226 reads in 408.737 CPU sec, 52.890 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519345, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 346, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (367.42, 317.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1409, 3492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9144)
[0000][PE] mean and std.dev: (2015.19, 1772.83)
[0000][PE] low and high boundaries for proper pairs: (1, 11970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204924 reads in 399.009 CPU sec, 52.044 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519869, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 418, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3878)
[0000][PE] mean and std.dev: (751.75, 602.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.44, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1212, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3638)
[0000][PE] mean and std.dev: (1267.45, 638.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 397.176 CPU sec, 49.572 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518984, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 517, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5123)
[0000][PE] mean and std.dev: (960.09, 1007.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1357, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3372)
[0000][PE] mean and std.dev: (1297.31, 690.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 392.067 CPU sec, 41.059 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205174
	[0000][ M::kt_pipeline] read 1205174 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519473, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 515, 870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2190)
[0000][PE] mean and std.dev: (577.17, 490.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.40, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1818, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5040)
[0000][PE] mean and std.dev: (1760.50, 918.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 393.847 CPU sec, 44.946 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204936
	[0000][ M::kt_pipeline] read 1204936 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519568, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 432, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2596)
[0000][PE] mean and std.dev: (599.52, 482.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.35, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1205, 1593, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4640)
[0000][PE] mean and std.dev: (1590.91, 976.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205174 reads in 394.779 CPU sec, 42.612 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519215, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 419, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (561.47, 500.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.65, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1516, 2673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6229)
[0000][PE] mean and std.dev: (1467.55, 989.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204936 reads in 403.510 CPU sec, 46.084 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518827, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 366, 799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1873)
[0000][PE] mean and std.dev: (443.77, 356.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.40, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1515, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4988)
[0000][PE] mean and std.dev: (1562.25, 900.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 402.524 CPU sec, 45.782 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205002
	[0000][ M::kt_pipeline] read 1205002 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519536, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 629, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3496)
[0000][PE] mean and std.dev: (899.00, 836.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.58, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1305, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (1220.58, 540.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 399.741 CPU sec, 46.280 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1204858
	[0000][ M::kt_pipeline] read 1204858 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519418, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 495, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2753)
[0000][PE] mean and std.dev: (670.36, 611.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205002 reads in 395.393 CPU sec, 45.144 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204858
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519190, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 424, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2095)
[0000][PE] mean and std.dev: (480.19, 384.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.64, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1565, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4118)
[0000][PE] mean and std.dev: (1337.88, 656.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204858 reads in 394.807 CPU sec, 46.971 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519062, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 371, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2025)
[0000][PE] mean and std.dev: (483.19, 341.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1351, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3208)
[0000][PE] mean and std.dev: (1296.45, 446.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 398.665 CPU sec, 50.531 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205262
	[0000][ M::kt_pipeline] read 1205262 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519466, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 407, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2299)
[0000][PE] mean and std.dev: (565.70, 581.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.57, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 954, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (183, 1733)
[0000][PE] mean and std.dev: (961.92, 217.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 403.871 CPU sec, 51.988 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1204928
	[0000][ M::kt_pipeline] read 1204928 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519523, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 399, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1313)
[0000][PE] mean and std.dev: (395.81, 346.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.48, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1578, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (1588.00, 779.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205262 reads in 392.918 CPU sec, 50.401 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518937, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 502, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3282)
[0000][PE] mean and std.dev: (688.83, 494.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204928 reads in 407.266 CPU sec, 53.251 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519309, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 427, 891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2021)
[0000][PE] mean and std.dev: (599.50, 515.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.78, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1314, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2719)
[0000][PE] mean and std.dev: (1154.08, 515.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 404.896 CPU sec, 54.598 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519052, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 604, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5490)
[0000][PE] mean and std.dev: (1166.42, 1342.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.54, 118.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1136, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2687)
[0000][PE] mean and std.dev: (1132.15, 590.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 404.058 CPU sec, 45.993 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519415, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 929, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3520)
[0000][PE] mean and std.dev: (1139.33, 940.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.81, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 389.614 CPU sec, 43.320 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205048
	[0000][ M::kt_pipeline] read 1205048 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519050, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 1242, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3938)
[0000][PE] mean and std.dev: (1077.95, 843.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.63, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 399.378 CPU sec, 53.793 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205170
	[0000][ M::kt_pipeline] read 1205170 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519575, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 472, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3762)
[0000][PE] mean and std.dev: (823.15, 870.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.49, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1415, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6559)
[0000][PE] mean and std.dev: (1443.11, 930.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205048 reads in 407.145 CPU sec, 48.414 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519336, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 1138, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3747)
[0000][PE] mean and std.dev: (809.19, 596.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1232, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (1322.09, 558.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205170 reads in 408.047 CPU sec, 45.435 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519426, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 488, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (843.14, 826.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.55, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1720, 3012, 3757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7831)
[0000][PE] mean and std.dev: (2662.33, 1186.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 395.793 CPU sec, 45.998 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519061, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 502, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (856.97, 811.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.33, 117.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1659, 3136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7600)
[0000][PE] mean and std.dev: (2165.22, 1514.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 404.451 CPU sec, 51.969 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518978, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 550, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2842)
[0000][PE] mean and std.dev: (650.85, 594.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.66, 118.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1629, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3262)
[0000][PE] mean and std.dev: (1318.14, 553.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 415.023 CPU sec, 43.166 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519437, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 746, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3334)
[0000][PE] mean and std.dev: (761.96, 621.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.66, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1011, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4038)
[0000][PE] mean and std.dev: (1270.57, 798.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 398.676 CPU sec, 44.536 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519843, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (564, 990, 2111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5205)
[0000][PE] mean and std.dev: (1138.56, 826.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.45, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 401.719 CPU sec, 54.121 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204968
	[0000][ M::kt_pipeline] read 1204968 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519135, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 551, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5074)
[0000][PE] mean and std.dev: (1099.19, 1060.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.80, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1278, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4480)
[0000][PE] mean and std.dev: (1414.31, 817.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 396.413 CPU sec, 52.188 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519077, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 450, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4030)
[0000][PE] mean and std.dev: (874.75, 875.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204968 reads in 410.788 CPU sec, 51.437 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519292, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 361, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4840)
[0000][PE] mean and std.dev: (960.68, 1117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.81, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1488, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3061)
[0000][PE] mean and std.dev: (1293.33, 437.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 417.787 CPU sec, 48.319 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 519087, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 484, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2583)
[0000][PE] mean and std.dev: (694.51, 460.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.48, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1254, 3056, 4620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11352)
[0000][PE] mean and std.dev: (3048.46, 2417.94)
[0000][PE] low and high boundaries for proper pairs: (1, 14718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 399.923 CPU sec, 51.194 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1204948
	[0000][ M::kt_pipeline] read 1204948 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519293, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 668, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (816.74, 763.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.29, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1381, 3932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9898)
[0000][PE] mean and std.dev: (2385.33, 2037.93)
[0000][PE] low and high boundaries for proper pairs: (1, 12881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 401.701 CPU sec, 47.095 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205122
	[0000][ M::kt_pipeline] read 1205122 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204948
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519447, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 938, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4984)
[0000][PE] mean and std.dev: (1177.00, 924.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.85, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1266, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3001)
[0000][PE] mean and std.dev: (1320.00, 479.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204948 reads in 395.503 CPU sec, 51.986 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205110
	[0000][ M::kt_pipeline] read 1205110 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519267, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 440, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3149)
[0000][PE] mean and std.dev: (594.12, 565.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1211, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2773)
[0000][PE] mean and std.dev: (1263.00, 636.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205122 reads in 397.669 CPU sec, 44.767 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519361, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 612, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2695)
[0000][PE] mean and std.dev: (640.38, 462.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.83, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 1573, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (241, 2626)
[0000][PE] mean and std.dev: (1291.62, 415.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205110 reads in 405.830 CPU sec, 55.192 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1204996
	[0000][ M::kt_pipeline] read 1204996 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519378, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 716, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (960.65, 832.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.42, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1655, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5086)
[0000][PE] mean and std.dev: (1721.18, 1183.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 397.195 CPU sec, 46.799 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519516, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 644, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (951.30, 733.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.51, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1126, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2981)
[0000][PE] mean and std.dev: (1013.94, 499.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204996 reads in 392.625 CPU sec, 53.036 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519242, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 647, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (752.41, 590.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.44, 118.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (568, 1244, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (1308.35, 752.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 409.564 CPU sec, 51.758 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1204966
	[0000][ M::kt_pipeline] read 1204966 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519162, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 320, 790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1924)
[0000][PE] mean and std.dev: (393.68, 328.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 406.228 CPU sec, 48.103 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519118, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 891, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (1080.90, 1017.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.76, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1317, 1878, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3891)
[0000][PE] mean and std.dev: (1694.29, 727.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204966 reads in 394.389 CPU sec, 45.505 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204946
	[0000][ M::kt_pipeline] read 1204946 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519377, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 296, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (630.85, 663.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.30, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (572, 1084, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3890)
[0000][PE] mean and std.dev: (1076.08, 757.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 404.143 CPU sec, 46.689 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1204988
	[0000][ M::kt_pipeline] read 1204988 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519416, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 769, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4288)
[0000][PE] mean and std.dev: (1021.59, 1007.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.69, 118.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1017, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4626)
[0000][PE] mean and std.dev: (1452.20, 1198.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204946 reads in 398.026 CPU sec, 39.822 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518957, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 529, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (867.12, 721.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.49, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1269, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (1542.56, 865.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204988 reads in 398.568 CPU sec, 47.557 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519195, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 384, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2426)
[0000][PE] mean and std.dev: (675.50, 659.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1493, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (1491.54, 792.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 397.565 CPU sec, 53.987 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519225, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 505, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (785.46, 868.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.87, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1356, 2601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5535)
[0000][PE] mean and std.dev: (1531.56, 763.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 396.348 CPU sec, 44.243 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519374, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 626, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (1087.77, 1116.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.65, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1220, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (998.55, 358.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 397.710 CPU sec, 54.661 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518940, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 360, 486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1048)
[0000][PE] mean and std.dev: (323.48, 206.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.50, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1364, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4830)
[0000][PE] mean and std.dev: (1472.29, 893.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 397.953 CPU sec, 56.354 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519218, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 1078, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3716)
[0000][PE] mean and std.dev: (901.81, 626.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.51, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1592, 2070, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (274, 3569)
[0000][PE] mean and std.dev: (1967.60, 589.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 397.720 CPU sec, 49.301 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518893, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 415, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (811.54, 871.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.52, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1136, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4719)
[0000][PE] mean and std.dev: (1469.18, 784.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 395.810 CPU sec, 44.873 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519162, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 553, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3741)
[0000][PE] mean and std.dev: (787.61, 642.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.37, 117.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1563, 3415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8059)
[0000][PE] mean and std.dev: (2292.62, 1685.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 392.441 CPU sec, 40.154 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519031, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 354, 634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1400)
[0000][PE] mean and std.dev: (366.91, 231.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.43, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1223, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (1392.20, 927.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 413.156 CPU sec, 50.674 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204972
	[0000][ M::kt_pipeline] read 1204972 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519124, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 692, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4637)
[0000][PE] mean and std.dev: (952.88, 812.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.51, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1525, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3732)
[0000][PE] mean and std.dev: (1518.54, 731.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 402.717 CPU sec, 47.580 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519395, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 369, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (635.62, 625.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.45, 118.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (699, 1417, 3076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7830)
[0000][PE] mean and std.dev: (1747.46, 1369.99)
[0000][PE] low and high boundaries for proper pairs: (1, 10207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204972 reads in 385.068 CPU sec, 33.537 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1204980
	[0000][ M::kt_pipeline] read 1204980 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519582, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 414, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3016)
[0000][PE] mean and std.dev: (811.95, 824.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.53, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1027, 2686, 4336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10954)
[0000][PE] mean and std.dev: (2667.50, 2034.89)
[0000][PE] low and high boundaries for proper pairs: (1, 14263)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1252, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5071)
[0000][PE] mean and std.dev: (1480.24, 1082.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 391.602 CPU sec, 44.338 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519413, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 406, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2583)
[0000][PE] mean and std.dev: (626.25, 462.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.47, 117.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1068, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (306, 2041)
[0000][PE] mean and std.dev: (1005.33, 243.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204980 reads in 399.176 CPU sec, 46.881 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519410, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 366, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1922)
[0000][PE] mean and std.dev: (494.56, 376.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.22, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1554, 2675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5851)
[0000][PE] mean and std.dev: (1815.55, 1088.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 410.727 CPU sec, 51.562 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519140, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 428, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6427)
[0000][PE] mean and std.dev: (1074.53, 1261.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.27, 117.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 855, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (921.36, 436.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 402.246 CPU sec, 51.367 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1204914
	[0000][ M::kt_pipeline] read 1204914 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519107, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 458, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2985)
[0000][PE] mean and std.dev: (664.71, 661.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.92, 117.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1680, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3131)
[0000][PE] mean and std.dev: (1406.33, 439.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 399.969 CPU sec, 50.945 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519326, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 352, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3899)
[0000][PE] mean and std.dev: (847.45, 1063.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.62, 118.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1487, 3044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7196)
[0000][PE] mean and std.dev: (2054.65, 1278.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204914 reads in 409.036 CPU sec, 52.156 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518960, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 754, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (897.18, 878.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.44, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1098, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2840)
[0000][PE] mean and std.dev: (1124.00, 524.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 408.664 CPU sec, 44.320 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519220, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 670, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2720)
[0000][PE] mean and std.dev: (686.71, 565.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.39, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (500, 723, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4694)
[0000][PE] mean and std.dev: (1078.08, 819.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 395.291 CPU sec, 48.476 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205068
	[0000][ M::kt_pipeline] read 1205068 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519447, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 324, 736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1698)
[0000][PE] mean and std.dev: (401.50, 284.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.59, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1326, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5368)
[0000][PE] mean and std.dev: (1532.58, 739.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 391.477 CPU sec, 50.454 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519101, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 552, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4494)
[0000][PE] mean and std.dev: (947.50, 920.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 985, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (988.18, 554.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205068 reads in 394.139 CPU sec, 51.407 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519270, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 534, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2711)
[0000][PE] mean and std.dev: (659.67, 476.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 925, 2712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6304)
[0000][PE] mean and std.dev: (1420.82, 987.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 395.216 CPU sec, 41.096 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519908, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 489, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3559)
[0000][PE] mean and std.dev: (864.16, 871.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.59, 118.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1500, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4013)
[0000][PE] mean and std.dev: (1425.69, 682.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 404.662 CPU sec, 53.685 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 519616, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 336, 687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1495)
[0000][PE] mean and std.dev: (408.59, 309.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.48, 117.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1208, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3901)
[0000][PE] mean and std.dev: (1337.83, 827.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 402.647 CPU sec, 54.313 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519359, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 402, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (547.71, 480.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 986, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (1067.55, 678.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 398.325 CPU sec, 52.000 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204974
	[0000][ M::kt_pipeline] read 1204974 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519062, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 737, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3913)
[0000][PE] mean and std.dev: (880.47, 851.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.50, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1193, 1854, 3154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7076)
[0000][PE] mean and std.dev: (1862.43, 1177.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 393.324 CPU sec, 50.146 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519545, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 411, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (800.30, 860.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.35, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1487, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5761)
[0000][PE] mean and std.dev: (1617.00, 1039.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204974 reads in 393.647 CPU sec, 46.437 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519701, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 979, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (864.89, 731.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 1090, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (1317.45, 820.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 398.659 CPU sec, 44.745 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1204944
	[0000][ M::kt_pipeline] read 1204944 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519312, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 372, 540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1102)
[0000][PE] mean and std.dev: (369.22, 233.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.37, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1382, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (1294.73, 426.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 410.481 CPU sec, 54.090 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205160
	[0000][ M::kt_pipeline] read 1205160 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519342, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 463, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3512)
[0000][PE] mean and std.dev: (780.14, 661.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.38, 117.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1562, 3002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7440)
[0000][PE] mean and std.dev: (1897.92, 1384.75)
[0000][PE] low and high boundaries for proper pairs: (1, 9659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204944 reads in 406.001 CPU sec, 56.295 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519367, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 460, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2877)
[0000][PE] mean and std.dev: (710.04, 657.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.48, 118.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1951, 2637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5843)
[0000][PE] mean and std.dev: (1790.21, 945.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205160 reads in 400.373 CPU sec, 54.680 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205052
	[0000][ M::kt_pipeline] read 1205052 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519247, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 649, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3161)
[0000][PE] mean and std.dev: (675.43, 547.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.55, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1395, 1595, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4740)
[0000][PE] mean and std.dev: (1857.50, 955.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 402.712 CPU sec, 47.691 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205052
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519070, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 679, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (827.35, 576.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.32, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1392, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (1215.68, 594.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205052 reads in 405.104 CPU sec, 51.106 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1204916
	[0000][ M::kt_pipeline] read 1204916 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519764, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 482, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (895.47, 648.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.16, 117.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1089, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2561)
[0000][PE] mean and std.dev: (1076.47, 521.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 394.533 CPU sec, 46.871 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205012
	[0000][ M::kt_pipeline] read 1205012 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204916
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519259, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 584, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3189)
[0000][PE] mean and std.dev: (807.55, 761.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.22, 117.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1608, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3804)
[0000][PE] mean and std.dev: (1535.56, 898.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204916 reads in 395.906 CPU sec, 44.159 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204996
	[0000][ M::kt_pipeline] read 1204996 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519548, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 768, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3551)
[0000][PE] mean and std.dev: (797.35, 547.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1356, 1506, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (1612.14, 809.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205012 reads in 411.957 CPU sec, 43.882 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205040
	[0000][ M::kt_pipeline] read 1205040 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519008, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 393, 513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1071)
[0000][PE] mean and std.dev: (319.57, 171.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.35, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1726, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4882)
[0000][PE] mean and std.dev: (1748.36, 874.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204996 reads in 418.948 CPU sec, 56.204 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519628, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 367, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2309)
[0000][PE] mean and std.dev: (598.43, 395.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1714, 2930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7458)
[0000][PE] mean and std.dev: (1821.47, 1650.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205040 reads in 397.868 CPU sec, 48.670 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519290, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 372, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2167)
[0000][PE] mean and std.dev: (567.29, 527.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.62, 118.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1067, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5472)
[0000][PE] mean and std.dev: (1653.32, 1287.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 391.505 CPU sec, 37.945 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519121, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 432, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (741.46, 691.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.30, 117.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1381, 1559, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3865)
[0000][PE] mean and std.dev: (1762.19, 704.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 410.222 CPU sec, 50.118 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519070, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 350, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2307)
[0000][PE] mean and std.dev: (606.96, 553.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.56, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1682, 3084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7406)
[0000][PE] mean and std.dev: (1831.73, 1095.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 399.504 CPU sec, 55.382 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518819, 14, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 469, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2311)
[0000][PE] mean and std.dev: (493.71, 324.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.92, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (756, 1819, 3661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9471)
[0000][PE] mean and std.dev: (2770.57, 2606.65)
[0000][PE] low and high boundaries for proper pairs: (1, 13197)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1322, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4286)
[0000][PE] mean and std.dev: (1313.45, 828.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 397.298 CPU sec, 54.785 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1204980
	[0000][ M::kt_pipeline] read 1204980 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519109, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 317, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1878)
[0000][PE] mean and std.dev: (358.81, 279.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.40, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 400.770 CPU sec, 44.843 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519555, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 541, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2723)
[0000][PE] mean and std.dev: (771.04, 650.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.38, 118.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1644, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4192)
[0000][PE] mean and std.dev: (1596.45, 599.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204980 reads in 392.430 CPU sec, 46.355 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518671, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 430, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (785.22, 784.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.56, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1235, 2150, 4161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10013)
[0000][PE] mean and std.dev: (2452.50, 1799.98)
[0000][PE] low and high boundaries for proper pairs: (1, 12939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 401.490 CPU sec, 49.002 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519233, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 322, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2082)
[0000][PE] mean and std.dev: (532.81, 457.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.54, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1189, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (1111.42, 666.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 387.619 CPU sec, 40.303 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519673, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 496, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2269)
[0000][PE] mean and std.dev: (555.43, 437.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.11, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1271, 1986, 3103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6767)
[0000][PE] mean and std.dev: (2083.92, 997.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 396.708 CPU sec, 52.827 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518972, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 424, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (692.41, 661.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.76, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1272, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (1229.36, 624.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 417.593 CPU sec, 54.754 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519279, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 422, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (612.08, 531.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.51, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1536, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4736)
[0000][PE] mean and std.dev: (1444.93, 889.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 409.370 CPU sec, 54.630 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1204980
	[0000][ M::kt_pipeline] read 1204980 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519400, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 364, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 885)
[0000][PE] mean and std.dev: (332.10, 139.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1383, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4912)
[0000][PE] mean and std.dev: (1498.80, 874.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 408.026 CPU sec, 56.513 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1204966
	[0000][ M::kt_pipeline] read 1204966 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519193, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 372, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4506)
[0000][PE] mean and std.dev: (811.16, 779.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.42, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1629, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (1774.10, 600.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204980 reads in 397.377 CPU sec, 50.720 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519556, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 416, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3168)
[0000][PE] mean and std.dev: (657.19, 705.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.31, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1305, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5441)
[0000][PE] mean and std.dev: (1399.87, 1001.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204966 reads in 396.335 CPU sec, 48.972 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518930, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 428, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3663)
[0000][PE] mean and std.dev: (849.92, 923.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.19, 117.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1021, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (1022.73, 395.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 407.200 CPU sec, 42.332 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205100
	[0000][ M::kt_pipeline] read 1205100 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519350, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 324, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3817)
[0000][PE] mean and std.dev: (751.04, 877.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.57, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1340, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5826)
[0000][PE] mean and std.dev: (1684.72, 1251.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 395.278 CPU sec, 49.104 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205044
	[0000][ M::kt_pipeline] read 1205044 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519421, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 542, 1892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5064)
[0000][PE] mean and std.dev: (894.83, 974.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.60, 117.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1467, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4563)
[0000][PE] mean and std.dev: (1442.38, 878.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205100 reads in 399.329 CPU sec, 49.837 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519810, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 338, 491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 915)
[0000][PE] mean and std.dev: (304.11, 103.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1327, 2480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5444)
[0000][PE] mean and std.dev: (1579.58, 992.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6926)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205044 reads in 410.478 CPU sec, 47.119 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519427, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 426, 868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2246)
[0000][PE] mean and std.dev: (479.88, 477.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1362, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3223)
[0000][PE] mean and std.dev: (1352.60, 517.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 400.549 CPU sec, 44.598 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518937, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 556, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (926.86, 968.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.16, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (516, 892, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4314)
[0000][PE] mean and std.dev: (1282.54, 1046.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 403.584 CPU sec, 44.457 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205018
	[0000][ M::kt_pipeline] read 1205018 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519451, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 319, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2545)
[0000][PE] mean and std.dev: (408.07, 366.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.72, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1829, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5193)
[0000][PE] mean and std.dev: (1786.78, 1134.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 390.916 CPU sec, 39.079 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205018
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518937, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 385, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2571)
[0000][PE] mean and std.dev: (528.09, 471.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1368, 1720, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (1552.87, 787.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205018 reads in 395.866 CPU sec, 51.646 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519521, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 392, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2820)
[0000][PE] mean and std.dev: (569.05, 490.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.56, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1001, 2349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5493)
[0000][PE] mean and std.dev: (1377.94, 884.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 395.267 CPU sec, 43.266 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1204980
	[0000][ M::kt_pipeline] read 1204980 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519431, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 422, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4709)
[0000][PE] mean and std.dev: (874.23, 831.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.78, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1225, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5813)
[0000][PE] mean and std.dev: (1644.00, 1092.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 391.760 CPU sec, 46.541 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1204982
	[0000][ M::kt_pipeline] read 1204982 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518814, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 784, 2679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7427)
[0000][PE] mean and std.dev: (1514.04, 1751.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.82, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1751, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3630)
[0000][PE] mean and std.dev: (1363.56, 522.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204980 reads in 387.807 CPU sec, 44.998 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1204958
	[0000][ M::kt_pipeline] read 1204958 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519663, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 402, 857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1987)
[0000][PE] mean and std.dev: (549.82, 391.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1650, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (1663.80, 899.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204982 reads in 392.631 CPU sec, 47.846 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519300, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 356, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 917)
[0000][PE] mean and std.dev: (346.28, 215.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.37, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1575, 2498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (1712.62, 777.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204958 reads in 386.234 CPU sec, 37.274 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205024
	[0000][ M::kt_pipeline] read 1205024 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519184, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 647, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2648)
[0000][PE] mean and std.dev: (688.36, 586.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.61, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1442, 1636, 3869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8723)
[0000][PE] mean and std.dev: (2628.14, 2303.45)
[0000][PE] low and high boundaries for proper pairs: (1, 11842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 389.534 CPU sec, 44.754 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519194, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 528, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (686.78, 734.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.57, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1346, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (1140.33, 564.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205024 reads in 391.860 CPU sec, 48.084 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1204942
	[0000][ M::kt_pipeline] read 1204942 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518666, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 399, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2223)
[0000][PE] mean and std.dev: (605.00, 516.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1317, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (1465.00, 780.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 404.173 CPU sec, 48.014 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205032
	[0000][ M::kt_pipeline] read 1205032 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519335, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 434, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2659)
[0000][PE] mean and std.dev: (562.12, 451.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1571, 1929, 3687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7919)
[0000][PE] mean and std.dev: (2650.27, 1525.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204942 reads in 392.852 CPU sec, 46.438 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519296, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (584, 942, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4355)
[0000][PE] mean and std.dev: (1089.57, 857.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.60, 118.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1108, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3211)
[0000][PE] mean and std.dev: (1182.70, 492.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205032 reads in 389.065 CPU sec, 41.123 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205132
	[0000][ M::kt_pipeline] read 1205132 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519241, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 451, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (635.76, 458.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1276, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4995)
[0000][PE] mean and std.dev: (1702.61, 1044.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 397.462 CPU sec, 41.060 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518772, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 547, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3842)
[0000][PE] mean and std.dev: (957.86, 970.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.56, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1437, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3229)
[0000][PE] mean and std.dev: (1440.07, 649.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205132 reads in 396.058 CPU sec, 41.692 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204956
	[0000][ M::kt_pipeline] read 1204956 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519601, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 1072, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3653)
[0000][PE] mean and std.dev: (1071.94, 804.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.84, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 2069, 2798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6228)
[0000][PE] mean and std.dev: (2474.18, 1780.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 388.101 CPU sec, 40.914 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519363, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 377, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3766)
[0000][PE] mean and std.dev: (816.11, 825.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.24, 117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204956 reads in 390.158 CPU sec, 43.036 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1204928
	[0000][ M::kt_pipeline] read 1204928 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519353, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 999, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6067)
[0000][PE] mean and std.dev: (1159.52, 1089.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.43, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1580, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4807)
[0000][PE] mean and std.dev: (1650.25, 772.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 396.172 CPU sec, 47.291 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518980, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 489, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2066)
[0000][PE] mean and std.dev: (606.12, 445.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.53, 117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (595, 1084, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6196)
[0000][PE] mean and std.dev: (1316.56, 1032.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204928 reads in 395.783 CPU sec, 41.993 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205000
	[0000][ M::kt_pipeline] read 1205000 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519017, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 469, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2935)
[0000][PE] mean and std.dev: (765.19, 619.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.77, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1369, 1866, 2849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5809)
[0000][PE] mean and std.dev: (2169.26, 1316.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 396.033 CPU sec, 41.428 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204962
	[0000][ M::kt_pipeline] read 1204962 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519182, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 747, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (1059.78, 1038.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.44, 118.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205000 reads in 398.052 CPU sec, 46.583 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518947, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 373, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2348)
[0000][PE] mean and std.dev: (511.10, 449.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1257, 1499, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3225)
[0000][PE] mean and std.dev: (1429.44, 572.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204962 reads in 399.227 CPU sec, 45.562 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519564, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 362, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5377)
[0000][PE] mean and std.dev: (931.65, 1209.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.41, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1515, 3258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7856)
[0000][PE] mean and std.dev: (2092.39, 1484.39)
[0000][PE] low and high boundaries for proper pairs: (1, 10155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 392.618 CPU sec, 41.300 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205030
	[0000][ M::kt_pipeline] read 1205030 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519080, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 446, 721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1769)
[0000][PE] mean and std.dev: (492.19, 339.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.46, 117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 408.272 CPU sec, 53.173 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205118
	[0000][ M::kt_pipeline] read 1205118 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519278, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 424, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2662)
[0000][PE] mean and std.dev: (750.53, 598.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1262, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1318.79, 717.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205030 reads in 408.673 CPU sec, 50.519 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519331, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 554, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3518)
[0000][PE] mean and std.dev: (771.57, 638.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.50, 118.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1409, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (1237.86, 501.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205118 reads in 391.941 CPU sec, 41.158 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204880
	[0000][ M::kt_pipeline] read 1204880 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519289, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 683, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (773.64, 735.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.67, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1467, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4218)
[0000][PE] mean and std.dev: (1448.94, 597.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 394.466 CPU sec, 40.909 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519256, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 321, 698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1706)
[0000][PE] mean and std.dev: (368.91, 307.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.90, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1224, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3382)
[0000][PE] mean and std.dev: (1150.31, 655.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204880 reads in 391.168 CPU sec, 40.803 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519196, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 636, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3394)
[0000][PE] mean and std.dev: (825.50, 704.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1693, 2430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5504)
[0000][PE] mean and std.dev: (1698.71, 996.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 400.547 CPU sec, 46.571 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205156
	[0000][ M::kt_pipeline] read 1205156 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519399, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 691, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (821.93, 731.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.72, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1530, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5538)
[0000][PE] mean and std.dev: (1818.00, 1332.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 394.925 CPU sec, 47.764 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519363, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 395, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (835.50, 892.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.56, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1571, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3210)
[0000][PE] mean and std.dev: (1381.75, 692.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205156 reads in 393.955 CPU sec, 36.661 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205106
	[0000][ M::kt_pipeline] read 1205106 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519727, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 409, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3698)
[0000][PE] mean and std.dev: (806.63, 844.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.35, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1294, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3017)
[0000][PE] mean and std.dev: (1228.50, 584.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 392.571 CPU sec, 47.307 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1204996
	[0000][ M::kt_pipeline] read 1204996 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519022, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 410, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2754)
[0000][PE] mean and std.dev: (568.08, 449.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.32, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1522, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5497)
[0000][PE] mean and std.dev: (2004.21, 1438.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205106 reads in 392.550 CPU sec, 43.054 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519168, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 351, 816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1862)
[0000][PE] mean and std.dev: (562.23, 476.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.45, 117.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1189, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3512)
[0000][PE] mean and std.dev: (1393.27, 691.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204996 reads in 389.249 CPU sec, 37.874 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205002
	[0000][ M::kt_pipeline] read 1205002 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518936, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 455, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (865.42, 755.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.53, 117.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1878, 3055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7165)
[0000][PE] mean and std.dev: (2008.44, 1467.75)
[0000][PE] low and high boundaries for proper pairs: (1, 9220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 398.578 CPU sec, 41.863 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204944
	[0000][ M::kt_pipeline] read 1204944 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519352, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 440, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (771.65, 785.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.49, 118.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1153, 3967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10323)
[0000][PE] mean and std.dev: (2302.00, 2643.46)
[0000][PE] low and high boundaries for proper pairs: (1, 13501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205002 reads in 406.333 CPU sec, 50.426 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204944
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519660, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 446, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2470)
[0000][PE] mean and std.dev: (579.43, 486.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.35, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204944 reads in 393.164 CPU sec, 47.848 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519447, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 388, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (597.21, 562.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.29, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1318, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (1522.06, 732.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 402.000 CPU sec, 52.435 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519428, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 523, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6036)
[0000][PE] mean and std.dev: (1178.79, 1426.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.63, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1377, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3144)
[0000][PE] mean and std.dev: (1305.82, 730.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 403.501 CPU sec, 43.941 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205138
	[0000][ M::kt_pipeline] read 1205138 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519363, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 536, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4191)
[0000][PE] mean and std.dev: (874.59, 914.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.82, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1362, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3759)
[0000][PE] mean and std.dev: (1573.95, 791.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 397.480 CPU sec, 53.535 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205098
	[0000][ M::kt_pipeline] read 1205098 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519470, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 449, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4078)
[0000][PE] mean and std.dev: (770.61, 789.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.52, 118.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1476, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (1256.00, 585.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205138 reads in 392.068 CPU sec, 48.962 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1204880
	[0000][ M::kt_pipeline] read 1204880 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519307, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 472, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (767.36, 638.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.69, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205098 reads in 409.021 CPU sec, 38.587 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519400, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 421, 1281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (701.94, 569.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1290, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2410)
[0000][PE] mean and std.dev: (1054.89, 614.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204880 reads in 410.138 CPU sec, 54.201 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519208, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 362, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (913.63, 1092.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.45, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1338, 2862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6204)
[0000][PE] mean and std.dev: (1894.18, 915.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 413.134 CPU sec, 48.286 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205236
	[0000][ M::kt_pipeline] read 1205236 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518986, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 295, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 589)
[0000][PE] mean and std.dev: (260.20, 81.99)
[0000][PE] low and high boundaries for proper pairs: (1, 708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.59, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1653, 2776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6562)
[0000][PE] mean and std.dev: (1923.90, 1127.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 405.302 CPU sec, 44.633 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519237, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 745, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4598)
[0000][PE] mean and std.dev: (1031.79, 1004.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.81, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (519, 2919, 6374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18084)
[0000][PE] mean and std.dev: (3645.40, 3435.78)
[0000][PE] low and high boundaries for proper pairs: (1, 23939)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1349, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5181)
[0000][PE] mean and std.dev: (1430.79, 1009.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205236 reads in 409.748 CPU sec, 54.036 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205228
	[0000][ M::kt_pipeline] read 1205228 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519306, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 402, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4968)
[0000][PE] mean and std.dev: (840.84, 738.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.72, 117.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1564, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (1427.00, 703.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 399.108 CPU sec, 47.612 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519472, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 294, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (640.78, 604.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.42, 117.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1219, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2767)
[0000][PE] mean and std.dev: (1184.87, 643.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205228 reads in 393.759 CPU sec, 44.619 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1204914
	[0000][ M::kt_pipeline] read 1204914 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519137, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 391, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2662)
[0000][PE] mean and std.dev: (660.59, 645.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.20, 117.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1376, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1546.91, 780.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 392.509 CPU sec, 43.498 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205060
	[0000][ M::kt_pipeline] read 1205060 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519053, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 374, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1987)
[0000][PE] mean and std.dev: (450.38, 402.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.45, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1393, 2725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5851)
[0000][PE] mean and std.dev: (1711.60, 1195.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204914 reads in 393.865 CPU sec, 49.212 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204956
	[0000][ M::kt_pipeline] read 1204956 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519065, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 461, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5541)
[0000][PE] mean and std.dev: (1057.79, 1231.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1561, 2908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6806)
[0000][PE] mean and std.dev: (1922.53, 1281.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205060 reads in 397.610 CPU sec, 51.544 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1204996
	[0000][ M::kt_pipeline] read 1204996 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 519482, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 329, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2400)
[0000][PE] mean and std.dev: (538.28, 496.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1606, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3566)
[0000][PE] mean and std.dev: (1475.20, 658.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204956 reads in 393.075 CPU sec, 41.727 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519074, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 470, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (798.68, 745.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.35, 117.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204996 reads in 391.990 CPU sec, 38.720 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1204974
	[0000][ M::kt_pipeline] read 1204974 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519202, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 307, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (732.32, 755.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.53, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1230, 1709, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (1566.50, 458.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 392.394 CPU sec, 40.785 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205234
	[0000][ M::kt_pipeline] read 1205234 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519560, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 466, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2530)
[0000][PE] mean and std.dev: (571.41, 488.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.38, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1512, 3347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7743)
[0000][PE] mean and std.dev: (2319.53, 2152.45)
[0000][PE] low and high boundaries for proper pairs: (1, 10929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204974 reads in 407.600 CPU sec, 51.691 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519570, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 519, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (674.26, 584.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.57, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (489, 1351, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4071)
[0000][PE] mean and std.dev: (1282.93, 874.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205234 reads in 400.350 CPU sec, 47.962 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519065, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 389, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6467)
[0000][PE] mean and std.dev: (977.40, 902.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.58, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1440, 1958, 3398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7314)
[0000][PE] mean and std.dev: (2278.20, 1323.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 401.563 CPU sec, 50.691 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205152
	[0000][ M::kt_pipeline] read 1205152 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519030, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 604, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2675)
[0000][PE] mean and std.dev: (656.93, 496.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.22, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1527, 2423, 3593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7725)
[0000][PE] mean and std.dev: (2240.10, 1232.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 411.892 CPU sec, 50.466 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519350, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 448, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2872)
[0000][PE] mean and std.dev: (611.82, 494.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.51, 117.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1737, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (1321.85, 529.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205152 reads in 399.565 CPU sec, 45.558 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519394, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 416, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (629.18, 556.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (461, 1162, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (970.00, 538.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 396.121 CPU sec, 45.634 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519322, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 566, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2325)
[0000][PE] mean and std.dev: (715.76, 582.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.45, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 2339, 2813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5941)
[0000][PE] mean and std.dev: (2051.00, 1471.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 401.419 CPU sec, 45.914 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519644, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 547, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2232)
[0000][PE] mean and std.dev: (702.46, 526.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.53, 117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1147, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (1193.09, 619.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 405.411 CPU sec, 48.675 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519395, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 659, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5359)
[0000][PE] mean and std.dev: (1041.09, 1096.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (632, 1419, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (1355.79, 905.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 405.712 CPU sec, 48.851 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204958
	[0000][ M::kt_pipeline] read 1204958 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 519427, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 396, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (903.25, 1003.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.49, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 407.989 CPU sec, 51.826 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519236, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 451, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2701)
[0000][PE] mean and std.dev: (700.85, 653.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.34, 117.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 1276, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4223)
[0000][PE] mean and std.dev: (1402.07, 918.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5430)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204958 reads in 396.856 CPU sec, 51.292 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1204942
	[0000][ M::kt_pipeline] read 1204942 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519281, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 368, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2706)
[0000][PE] mean and std.dev: (505.61, 468.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.27, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1189, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5681)
[0000][PE] mean and std.dev: (1529.62, 947.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 407.784 CPU sec, 60.052 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205102
	[0000][ M::kt_pipeline] read 1205102 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204942
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519209, 11, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 694, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (886.76, 815.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.40, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (195, 381, 5342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15636)
[0000][PE] mean and std.dev: (2274.64, 2770.88)
[0000][PE] low and high boundaries for proper pairs: (1, 20783)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1292, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (1563.32, 1045.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204942 reads in 399.049 CPU sec, 46.075 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1204950
	[0000][ M::kt_pipeline] read 1204950 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519573, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 537, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3224)
[0000][PE] mean and std.dev: (841.35, 748.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.78, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1305, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3443)
[0000][PE] mean and std.dev: (1333.64, 691.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205102 reads in 390.249 CPU sec, 39.182 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205124
	[0000][ M::kt_pipeline] read 1205124 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204950
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519534, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 334, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3210)
[0000][PE] mean and std.dev: (667.89, 594.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.34, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 2122, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5849)
[0000][PE] mean and std.dev: (2015.79, 947.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204950 reads in 398.737 CPU sec, 41.084 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519423, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 490, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2076)
[0000][PE] mean and std.dev: (645.13, 471.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.74, 118.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1073, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (1112.69, 645.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205124 reads in 395.717 CPU sec, 48.249 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519614, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 277, 455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 931)
[0000][PE] mean and std.dev: (254.08, 101.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.74, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1114, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4257)
[0000][PE] mean and std.dev: (1096.60, 773.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 393.858 CPU sec, 43.531 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519398, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 365, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2577)
[0000][PE] mean and std.dev: (628.07, 536.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.64, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (521, 883, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3233)
[0000][PE] mean and std.dev: (1040.67, 620.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 394.201 CPU sec, 50.756 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205088
	[0000][ M::kt_pipeline] read 1205088 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519211, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 398, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (782.03, 851.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1289, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (1407.89, 686.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 410.377 CPU sec, 56.309 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519711, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 474, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6009)
[0000][PE] mean and std.dev: (1102.59, 1168.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1248, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5447)
[0000][PE] mean and std.dev: (1478.25, 836.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205088 reads in 394.059 CPU sec, 46.680 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519485, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 505, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3151)
[0000][PE] mean and std.dev: (782.14, 707.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.65, 117.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1157, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1383.42, 955.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 406.536 CPU sec, 59.195 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519317, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 751, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (769.00, 591.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.36, 117.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1080, 1654, 2268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (1580.20, 966.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5832)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1560, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5299)
[0000][PE] mean and std.dev: (1591.05, 1037.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 405.375 CPU sec, 44.509 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519052, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 399, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (757.68, 802.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.39, 117.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1191, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (217, 2132)
[0000][PE] mean and std.dev: (1141.44, 429.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 391.910 CPU sec, 41.904 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205008
	[0000][ M::kt_pipeline] read 1205008 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519307, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 1238, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1145.96, 1109.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.41, 118.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 893, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (1284.35, 954.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 409.720 CPU sec, 54.009 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205008
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519242, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 343, 643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1431)
[0000][PE] mean and std.dev: (458.31, 349.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.32, 117.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1521, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (1483.50, 537.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205008 reads in 400.565 CPU sec, 44.757 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519178, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 853, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4594)
[0000][PE] mean and std.dev: (1001.00, 766.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.50, 117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1454, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2875)
[0000][PE] mean and std.dev: (1196.18, 528.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 410.850 CPU sec, 46.850 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519623, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 672, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6004)
[0000][PE] mean and std.dev: (1470.29, 1742.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.69, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1007, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (1165.60, 591.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 401.329 CPU sec, 51.232 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519185, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 378, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (687.55, 670.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.45, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1733, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (1522.08, 1095.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 402.258 CPU sec, 53.384 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205166
	[0000][ M::kt_pipeline] read 1205166 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 519290, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 680, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (728.92, 755.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.53, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1341, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4203)
[0000][PE] mean and std.dev: (1223.33, 591.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 416.653 CPU sec, 53.079 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519474, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 556, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (872.58, 764.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.77, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (603, 904, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (1165.58, 718.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205166 reads in 391.006 CPU sec, 42.801 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519561, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 504, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6840)
[0000][PE] mean and std.dev: (1209.32, 1333.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.56, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 1340, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5638)
[0000][PE] mean and std.dev: (1249.47, 713.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 406.531 CPU sec, 49.604 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205108
	[0000][ M::kt_pipeline] read 1205108 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519298, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 601, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2541)
[0000][PE] mean and std.dev: (684.69, 463.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.83, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1023, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3032)
[0000][PE] mean and std.dev: (1158.06, 502.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 391.126 CPU sec, 45.101 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519130, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 635, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (806.05, 677.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.37, 118.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1368, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (1400.61, 765.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205108 reads in 403.795 CPU sec, 41.293 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519140, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 288, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1320)
[0000][PE] mean and std.dev: (339.28, 195.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.52, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 1267, 2550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6352)
[0000][PE] mean and std.dev: (1419.42, 1173.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 395.528 CPU sec, 55.464 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204968
	[0000][ M::kt_pipeline] read 1204968 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519047, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 378, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1882)
[0000][PE] mean and std.dev: (405.24, 337.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.81, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1586, 3145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7269)
[0000][PE] mean and std.dev: (2070.77, 1550.43)
[0000][PE] low and high boundaries for proper pairs: (1, 9331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 395.722 CPU sec, 45.423 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519019, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 456, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5668)
[0000][PE] mean and std.dev: (1070.20, 1324.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.34, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1119, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5165)
[0000][PE] mean and std.dev: (1313.62, 693.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6620)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204968 reads in 391.754 CPU sec, 40.576 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518856, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 453, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2766)
[0000][PE] mean and std.dev: (555.09, 402.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.63, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (665, 1505, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4598)
[0000][PE] mean and std.dev: (1543.29, 1098.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 401.442 CPU sec, 43.170 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518880, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 425, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2655)
[0000][PE] mean and std.dev: (668.58, 551.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.82, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1174, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1203.25, 616.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 406.271 CPU sec, 53.296 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518979, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 555, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4378)
[0000][PE] mean and std.dev: (777.07, 678.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.14, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1146, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (1204.33, 542.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 391.782 CPU sec, 40.505 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205056
	[0000][ M::kt_pipeline] read 1205056 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519066, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 287, 642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1412)
[0000][PE] mean and std.dev: (347.05, 231.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.22, 117.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 400.711 CPU sec, 48.684 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204968
	[0000][ M::kt_pipeline] read 1204968 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519219, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 293, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3924)
[0000][PE] mean and std.dev: (771.96, 935.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.28, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1383, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3956)
[0000][PE] mean and std.dev: (1179.83, 682.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205056 reads in 397.830 CPU sec, 50.056 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1204934
	[0000][ M::kt_pipeline] read 1204934 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519291, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 566, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (787.58, 796.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.40, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1315, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5801)
[0000][PE] mean and std.dev: (1537.09, 1058.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204968 reads in 394.183 CPU sec, 45.081 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205042
	[0000][ M::kt_pipeline] read 1205042 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519420, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 522, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4041)
[0000][PE] mean and std.dev: (941.53, 915.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.59, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1237, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (1151.62, 617.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204934 reads in 396.262 CPU sec, 50.655 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519242, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 671, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3281)
[0000][PE] mean and std.dev: (819.89, 659.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1677, 2758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5950)
[0000][PE] mean and std.dev: (1988.53, 1278.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205042 reads in 399.242 CPU sec, 52.959 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205062
	[0000][ M::kt_pipeline] read 1205062 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519157, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 469, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4353)
[0000][PE] mean and std.dev: (694.40, 554.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.86, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1180, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (1411.73, 752.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 401.415 CPU sec, 47.439 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205134
	[0000][ M::kt_pipeline] read 1205134 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519209, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 460, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3701)
[0000][PE] mean and std.dev: (763.41, 738.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.97, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1242, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4346)
[0000][PE] mean and std.dev: (1357.36, 737.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205062 reads in 418.422 CPU sec, 43.752 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205164
	[0000][ M::kt_pipeline] read 1205164 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519468, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 412, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2061)
[0000][PE] mean and std.dev: (569.24, 504.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (640, 1356, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6232)
[0000][PE] mean and std.dev: (1385.27, 933.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205134 reads in 398.349 CPU sec, 45.552 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1204976
	[0000][ M::kt_pipeline] read 1204976 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519562, 4, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 338, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1652)
[0000][PE] mean and std.dev: (490.95, 426.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.64, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205164 reads in 397.997 CPU sec, 51.025 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1204920
	[0000][ M::kt_pipeline] read 1204920 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204976
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519310, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 403, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3011)
[0000][PE] mean and std.dev: (618.32, 611.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.88, 117.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1482, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2942)
[0000][PE] mean and std.dev: (1299.00, 448.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204976 reads in 395.234 CPU sec, 39.333 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1204958
	[0000][ M::kt_pipeline] read 1204958 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204920
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519212, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 396, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2784)
[0000][PE] mean and std.dev: (639.82, 662.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.72, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204920 reads in 403.074 CPU sec, 48.856 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1204994
	[0000][ M::kt_pipeline] read 1204994 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204958
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518914, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 455, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2639)
[0000][PE] mean and std.dev: (695.44, 597.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.62, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1238, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4603)
[0000][PE] mean and std.dev: (1333.40, 793.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204958 reads in 401.498 CPU sec, 51.117 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519565, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 459, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3319)
[0000][PE] mean and std.dev: (731.16, 623.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.69, 117.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1697, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4188)
[0000][PE] mean and std.dev: (1628.79, 554.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204994 reads in 400.713 CPU sec, 50.169 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519203, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 438, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (728.53, 624.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.92, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1194, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4958)
[0000][PE] mean and std.dev: (1377.17, 937.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 396.670 CPU sec, 45.590 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1204974
	[0000][ M::kt_pipeline] read 1204974 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519011, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 495, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (827.04, 777.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.33, 117.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1471, 3122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7448)
[0000][PE] mean and std.dev: (1947.53, 1664.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 404.084 CPU sec, 49.859 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204934
	[0000][ M::kt_pipeline] read 1204934 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518895, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 755, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4538)
[0000][PE] mean and std.dev: (878.60, 675.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204974 reads in 406.520 CPU sec, 48.594 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1204990
	[0000][ M::kt_pipeline] read 1204990 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204934
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519272, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 1061, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (1043.06, 787.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.66, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1434, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5284)
[0000][PE] mean and std.dev: (1573.29, 1133.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204934 reads in 405.099 CPU sec, 45.217 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520114, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 870, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (1041.61, 869.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.35, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1269, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (1423.50, 758.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204990 reads in 409.117 CPU sec, 42.812 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205036
	[0000][ M::kt_pipeline] read 1205036 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519667, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 303, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2010)
[0000][PE] mean and std.dev: (408.45, 333.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.77, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 1487, 3595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9439)
[0000][PE] mean and std.dev: (2249.29, 2266.35)
[0000][PE] low and high boundaries for proper pairs: (1, 12361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 399.367 CPU sec, 44.730 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205036
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519589, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 541, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (770.06, 844.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.36, 117.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1283, 1973, 2948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6278)
[0000][PE] mean and std.dev: (1928.53, 866.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205036 reads in 402.484 CPU sec, 46.486 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1204966
	[0000][ M::kt_pipeline] read 1204966 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519419, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 489, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3417)
[0000][PE] mean and std.dev: (760.61, 634.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.34, 117.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1261, 1605, 2315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (1483.92, 640.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 407.150 CPU sec, 49.976 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1204970
	[0000][ M::kt_pipeline] read 1204970 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204966
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519741, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 519, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3734)
[0000][PE] mean and std.dev: (928.68, 882.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.47, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1483, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4561)
[0000][PE] mean and std.dev: (1740.06, 1300.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204966 reads in 397.261 CPU sec, 52.266 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204970
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519702, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 398, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3334)
[0000][PE] mean and std.dev: (680.15, 769.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.50, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204970 reads in 403.931 CPU sec, 44.779 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205104
	[0000][ M::kt_pipeline] read 1205104 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519318, 11, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 385, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3007)
[0000][PE] mean and std.dev: (668.25, 566.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.55, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (269, 1286, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4769)
[0000][PE] mean and std.dev: (735.56, 663.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6269)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1188, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5968)
[0000][PE] mean and std.dev: (1514.76, 1078.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 410.078 CPU sec, 46.570 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519368, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 368, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3720)
[0000][PE] mean and std.dev: (735.00, 638.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.69, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1449, 2315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (1660.25, 1014.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205104 reads in 391.054 CPU sec, 44.224 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1204972
	[0000][ M::kt_pipeline] read 1204972 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 519402, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 644, 700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1408)
[0000][PE] mean and std.dev: (553.86, 304.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.31, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1253, 2176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4428)
[0000][PE] mean and std.dev: (1514.62, 821.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 395.491 CPU sec, 36.594 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 519106, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 423, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (747.88, 730.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.36, 117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1332, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4143)
[0000][PE] mean and std.dev: (1311.06, 631.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204972 reads in 392.445 CPU sec, 39.918 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1204946
	[0000][ M::kt_pipeline] read 1204946 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519418, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 457, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3862)
[0000][PE] mean and std.dev: (813.15, 886.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.46, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 395.400 CPU sec, 40.027 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205158
	[0000][ M::kt_pipeline] read 1205158 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 520017, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 331, 437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 995)
[0000][PE] mean and std.dev: (246.41, 133.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.78, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (609, 1417, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (1472.65, 1015.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204946 reads in 394.286 CPU sec, 44.822 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519056, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 442, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (754.93, 748.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.25, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1740, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4351)
[0000][PE] mean and std.dev: (1528.31, 880.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205158 reads in 393.995 CPU sec, 43.839 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1204938
	[0000][ M::kt_pipeline] read 1204938 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519122, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 417, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2774)
[0000][PE] mean and std.dev: (692.40, 480.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 975, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3528)
[0000][PE] mean and std.dev: (1066.58, 587.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 395.176 CPU sec, 47.144 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205066
	[0000][ M::kt_pipeline] read 1205066 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518613, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 378, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2751)
[0000][PE] mean and std.dev: (775.48, 715.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.54, 118.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1453, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (88, 2818)
[0000][PE] mean and std.dev: (1433.46, 490.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204938 reads in 392.154 CPU sec, 44.044 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1204946
	[0000][ M::kt_pipeline] read 1204946 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519350, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 406, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1948)
[0000][PE] mean and std.dev: (611.54, 496.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.52, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1733, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4667)
[0000][PE] mean and std.dev: (1622.67, 860.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205066 reads in 403.561 CPU sec, 50.070 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204946
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519406, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 402, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (531.60, 353.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.42, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1230, 2772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6756)
[0000][PE] mean and std.dev: (1594.47, 1123.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204946 reads in 406.903 CPU sec, 45.224 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205024
	[0000][ M::kt_pipeline] read 1205024 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518934, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 403, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2091)
[0000][PE] mean and std.dev: (449.79, 475.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.47, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 402.487 CPU sec, 50.162 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519090, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 336, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (542.88, 486.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.25, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (662, 969, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2987)
[0000][PE] mean and std.dev: (1025.45, 677.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205024 reads in 401.844 CPU sec, 50.973 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205046
	[0000][ M::kt_pipeline] read 1205046 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519400, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 1044, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5686)
[0000][PE] mean and std.dev: (1151.56, 1149.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.59, 118.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 401.856 CPU sec, 42.313 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204974
	[0000][ M::kt_pipeline] read 1204974 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519091, 10, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 332, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (713.07, 774.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.53, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (355, 1772, 3092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8566)
[0000][PE] mean and std.dev: (1952.40, 1940.88)
[0000][PE] low and high boundaries for proper pairs: (1, 11303)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1320, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (182, 2427)
[0000][PE] mean and std.dev: (1088.11, 366.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205046 reads in 390.157 CPU sec, 43.943 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519244, 7, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 400, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (834.88, 816.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.60, 117.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1212, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (1322.08, 872.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204974 reads in 391.209 CPU sec, 36.820 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1204974
	[0000][ M::kt_pipeline] read 1204974 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519015, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 382, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3154)
[0000][PE] mean and std.dev: (639.10, 615.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.28, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1328, 1739, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3917)
[0000][PE] mean and std.dev: (1616.93, 807.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 391.975 CPU sec, 33.447 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1204962
	[0000][ M::kt_pipeline] read 1204962 sequences (180000070 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204974
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518786, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 601, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4060)
[0000][PE] mean and std.dev: (947.63, 917.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.18, 117.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1358, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3189)
[0000][PE] mean and std.dev: (1381.29, 806.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204974 reads in 408.860 CPU sec, 50.002 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205146
	[0000][ M::kt_pipeline] read 1205146 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519157, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 544, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (851.92, 803.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.52, 117.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1076, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (1384.94, 955.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204962 reads in 402.494 CPU sec, 42.893 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205096
	[0000][ M::kt_pipeline] read 1205096 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519411, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 667, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2691)
[0000][PE] mean and std.dev: (698.71, 484.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.47, 118.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1239, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3656)
[0000][PE] mean and std.dev: (1465.06, 813.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205146 reads in 395.960 CPU sec, 49.586 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205090
	[0000][ M::kt_pipeline] read 1205090 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519506, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1132, 2719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7537)
[0000][PE] mean and std.dev: (1652.97, 1516.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.84, 117.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1329, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4685)
[0000][PE] mean and std.dev: (1514.15, 765.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205096 reads in 410.234 CPU sec, 47.299 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519019, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 668, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2792)
[0000][PE] mean and std.dev: (678.96, 558.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.38, 117.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1545, 2872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6446)
[0000][PE] mean and std.dev: (1938.14, 1297.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205090 reads in 407.838 CPU sec, 44.674 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205084
	[0000][ M::kt_pipeline] read 1205084 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519188, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 501, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5135)
[0000][PE] mean and std.dev: (992.79, 790.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.44, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1375, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (1415.80, 377.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 400.955 CPU sec, 42.463 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205190
	[0000][ M::kt_pipeline] read 1205190 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205084
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519180, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 529, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (991.38, 814.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.55, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 1533, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5077)
[0000][PE] mean and std.dev: (1727.67, 792.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205084 reads in 401.556 CPU sec, 45.357 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519421, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 504, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (873.52, 731.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3870)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.35, 117.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205190 reads in 394.673 CPU sec, 45.648 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205150
	[0000][ M::kt_pipeline] read 1205150 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 519630, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 510, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5896)
[0000][PE] mean and std.dev: (1397.00, 1596.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.26, 117.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1271, 2813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6349)
[0000][PE] mean and std.dev: (1941.89, 1496.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 394.047 CPU sec, 46.865 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518698, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 363, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4170)
[0000][PE] mean and std.dev: (684.48, 698.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.28, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (617, 1141, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4808)
[0000][PE] mean and std.dev: (1453.00, 992.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205150 reads in 395.940 CPU sec, 39.189 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205142
	[0000][ M::kt_pipeline] read 1205142 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519316, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 365, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (839.21, 855.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.82, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 728, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2110)
[0000][PE] mean and std.dev: (788.11, 532.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 386.606 CPU sec, 32.828 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205086
	[0000][ M::kt_pipeline] read 1205086 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519695, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 423, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2430)
[0000][PE] mean and std.dev: (621.33, 462.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.54, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1410, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 2781)
[0000][PE] mean and std.dev: (1337.58, 552.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205142 reads in 402.938 CPU sec, 49.492 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1204954
	[0000][ M::kt_pipeline] read 1204954 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518922, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 385, 911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2281)
[0000][PE] mean and std.dev: (589.64, 524.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1568, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4247)
[0000][PE] mean and std.dev: (1470.10, 907.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205086 reads in 394.027 CPU sec, 41.700 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205054
	[0000][ M::kt_pipeline] read 1205054 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519177, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 470, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2739)
[0000][PE] mean and std.dev: (573.47, 491.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.41, 117.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (469, 1265, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4465)
[0000][PE] mean and std.dev: (1303.44, 896.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204954 reads in 400.060 CPU sec, 44.011 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519448, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 705, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2981)
[0000][PE] mean and std.dev: (764.91, 479.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.55, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1598, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3725)
[0000][PE] mean and std.dev: (1334.12, 671.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4662)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205054 reads in 414.568 CPU sec, 44.696 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519147, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 275, 765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1973)
[0000][PE] mean and std.dev: (383.69, 363.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1835, 2538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5986)
[0000][PE] mean and std.dev: (1798.24, 1432.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 394.448 CPU sec, 45.940 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204902
	[0000][ M::kt_pipeline] read 1204902 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519401, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 359, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2326)
[0000][PE] mean and std.dev: (423.68, 373.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.41, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1589, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4985)
[0000][PE] mean and std.dev: (1745.81, 1082.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 390.774 CPU sec, 45.720 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204902
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519059, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 345, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1265)
[0000][PE] mean and std.dev: (330.30, 242.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.48, 117.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1738, 2779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6009)
[0000][PE] mean and std.dev: (2101.85, 1415.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7765)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204902 reads in 404.188 CPU sec, 47.454 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204954
	[0000][ M::kt_pipeline] read 1204954 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519538, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 451, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (563.05, 507.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.27, 117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1387, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (1443.78, 585.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 398.427 CPU sec, 46.691 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205114
	[0000][ M::kt_pipeline] read 1205114 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204954
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518942, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 398, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2208)
[0000][PE] mean and std.dev: (430.80, 327.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.68, 117.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1262, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (1320.88, 767.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204954 reads in 404.801 CPU sec, 43.915 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205002
	[0000][ M::kt_pipeline] read 1205002 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519146, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 383, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (609.19, 463.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.41, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1761, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5294)
[0000][PE] mean and std.dev: (1532.29, 868.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205114 reads in 408.270 CPU sec, 54.711 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204952
	[0000][ M::kt_pipeline] read 1204952 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519501, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 429, 594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1114)
[0000][PE] mean and std.dev: (419.21, 241.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.28, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1071, 2878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6984)
[0000][PE] mean and std.dev: (1464.87, 1023.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205002 reads in 396.483 CPU sec, 39.516 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205112
	[0000][ M::kt_pipeline] read 1205112 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204952
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519721, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 1104, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4031)
[0000][PE] mean and std.dev: (1080.93, 749.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1451, 2074, 2735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5303)
[0000][PE] mean and std.dev: (1991.15, 635.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204952 reads in 388.406 CPU sec, 38.025 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519220, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 495, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (582.74, 465.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.79, 117.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1364, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2835)
[0000][PE] mean and std.dev: (1282.09, 573.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205112 reads in 392.678 CPU sec, 47.291 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1204996
	[0000][ M::kt_pipeline] read 1204996 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519217, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 410, 694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1492)
[0000][PE] mean and std.dev: (482.24, 366.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.38, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1149, 2662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6526)
[0000][PE] mean and std.dev: (1580.79, 1055.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 394.160 CPU sec, 52.039 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1204936
	[0000][ M::kt_pipeline] read 1204936 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204996
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519218, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 302, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3297)
[0000][PE] mean and std.dev: (510.18, 549.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.72, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1318, 1624, 3090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6634)
[0000][PE] mean and std.dev: (2156.53, 1151.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204996 reads in 403.166 CPU sec, 46.057 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519154, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 371, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2541)
[0000][PE] mean and std.dev: (628.73, 658.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.77, 117.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204936 reads in 395.646 CPU sec, 41.780 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519321, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 400, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3627)
[0000][PE] mean and std.dev: (676.57, 697.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.53, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1574, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4870)
[0000][PE] mean and std.dev: (1555.86, 781.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 388.567 CPU sec, 49.473 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205080
	[0000][ M::kt_pipeline] read 1205080 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518967, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 456, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3860)
[0000][PE] mean and std.dev: (755.47, 681.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.64, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1257, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2738)
[0000][PE] mean and std.dev: (1171.24, 508.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 407.672 CPU sec, 44.902 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518633, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 402, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (595.19, 564.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.24, 117.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1269, 2748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6430)
[0000][PE] mean and std.dev: (1843.67, 1365.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205080 reads in 402.884 CPU sec, 58.439 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205136
	[0000][ M::kt_pipeline] read 1205136 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518919, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 344, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2959)
[0000][PE] mean and std.dev: (683.07, 687.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.27, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1592, 1847, 2620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4676)
[0000][PE] mean and std.dev: (1662.22, 611.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 397.489 CPU sec, 43.670 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205094
	[0000][ M::kt_pipeline] read 1205094 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519293, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 449, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2212)
[0000][PE] mean and std.dev: (502.09, 373.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.42, 117.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1471, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6331)
[0000][PE] mean and std.dev: (1828.29, 1341.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205136 reads in 399.719 CPU sec, 43.583 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1204992
	[0000][ M::kt_pipeline] read 1204992 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519166, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 833, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4184)
[0000][PE] mean and std.dev: (993.12, 842.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.55, 117.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1604, 1970, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (254, 3629)
[0000][PE] mean and std.dev: (1868.58, 736.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205094 reads in 392.700 CPU sec, 47.195 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519686, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 438, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5155)
[0000][PE] mean and std.dev: (1093.71, 1165.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (646, 1153, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (1042.00, 663.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204992 reads in 396.796 CPU sec, 41.826 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205180
	[0000][ M::kt_pipeline] read 1205180 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519359, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 325, 601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1253)
[0000][PE] mean and std.dev: (346.18, 201.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.44, 117.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (566, 986, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4874)
[0000][PE] mean and std.dev: (911.64, 464.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 401.345 CPU sec, 47.498 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205148
	[0000][ M::kt_pipeline] read 1205148 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519086, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 371, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3226)
[0000][PE] mean and std.dev: (644.89, 626.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.48, 117.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1493, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (1648.54, 905.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205180 reads in 394.582 CPU sec, 45.748 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205010
	[0000][ M::kt_pipeline] read 1205010 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519300, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 568, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2015)
[0000][PE] mean and std.dev: (678.26, 511.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1464, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (1328.18, 578.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205148 reads in 407.472 CPU sec, 46.624 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1204982
	[0000][ M::kt_pipeline] read 1204982 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519439, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 593, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5653)
[0000][PE] mean and std.dev: (972.53, 1131.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.70, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1511, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4399)
[0000][PE] mean and std.dev: (1687.86, 893.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205010 reads in 412.982 CPU sec, 49.671 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1204936
	[0000][ M::kt_pipeline] read 1204936 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 519414, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (438, 758, 871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1737)
[0000][PE] mean and std.dev: (697.43, 363.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.36, 117.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1540, 1806, 2834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5422)
[0000][PE] mean and std.dev: (2017.17, 904.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204982 reads in 409.117 CPU sec, 53.124 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205082
	[0000][ M::kt_pipeline] read 1205082 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204936
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519227, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 665, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2368)
[0000][PE] mean and std.dev: (691.70, 458.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.44, 118.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1513, 2635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5643)
[0000][PE] mean and std.dev: (1737.83, 1262.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204936 reads in 408.083 CPU sec, 49.124 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205002
	[0000][ M::kt_pipeline] read 1205002 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519438, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 531, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3926)
[0000][PE] mean and std.dev: (923.00, 866.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.69, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1245, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4848)
[0000][PE] mean and std.dev: (1356.15, 652.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205082 reads in 407.483 CPU sec, 55.562 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1204986
	[0000][ M::kt_pipeline] read 1204986 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519552, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 561, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5588)
[0000][PE] mean and std.dev: (1072.95, 1046.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1258, 2776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6760)
[0000][PE] mean and std.dev: (1789.54, 1223.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205002 reads in 392.280 CPU sec, 47.013 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205140
	[0000][ M::kt_pipeline] read 1205140 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519321, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 288, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4313)
[0000][PE] mean and std.dev: (778.05, 898.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.30, 117.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1346, 2610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5890)
[0000][PE] mean and std.dev: (1606.95, 915.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204986 reads in 403.171 CPU sec, 50.845 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205034
	[0000][ M::kt_pipeline] read 1205034 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519340, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 377, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3495)
[0000][PE] mean and std.dev: (834.33, 909.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.76, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1374, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (1309.75, 608.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205140 reads in 407.621 CPU sec, 54.397 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519090, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 823, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (1032.00, 991.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.36, 117.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1461, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4257)
[0000][PE] mean and std.dev: (1611.53, 726.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205034 reads in 412.222 CPU sec, 47.762 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205198
	[0000][ M::kt_pipeline] read 1205198 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519177, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 414, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5865)
[0000][PE] mean and std.dev: (1069.19, 1222.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.86, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1911, 4077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10153)
[0000][PE] mean and std.dev: (2233.44, 1578.34)
[0000][PE] low and high boundaries for proper pairs: (1, 13191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 395.558 CPU sec, 41.215 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205038
	[0000][ M::kt_pipeline] read 1205038 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518745, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 465, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2888)
[0000][PE] mean and std.dev: (668.17, 552.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.55, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1161, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (1333.21, 652.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205198 reads in 407.001 CPU sec, 52.633 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519162, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 547, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3879)
[0000][PE] mean and std.dev: (801.81, 778.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.40, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1362, 1441, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5538)
[0000][PE] mean and std.dev: (1972.00, 1275.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205038 reads in 394.293 CPU sec, 43.254 real sec
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205020
	[0000][ M::kt_pipeline] read 1205020 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519213, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 895, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3491)
[0000][PE] mean and std.dev: (906.95, 713.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.65, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1367, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5630)
[0000][PE] mean and std.dev: (1588.06, 901.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 393.159 CPU sec, 50.034 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1204960
	[0000][ M::kt_pipeline] read 1204960 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205020
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518932, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 771, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4600)
[0000][PE] mean and std.dev: (1068.04, 845.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.41, 117.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1833, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (1502.00, 568.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205020 reads in 397.410 CPU sec, 43.131 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205120
	[0000][ M::kt_pipeline] read 1205120 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204960
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519459, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 800, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (832.17, 853.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.82, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1619, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5177)
[0000][PE] mean and std.dev: (1671.47, 1125.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204960 reads in 399.747 CPU sec, 48.619 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519022, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 432, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3566)
[0000][PE] mean and std.dev: (805.17, 686.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.48, 117.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1553, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (1346.20, 544.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205120 reads in 401.677 CPU sec, 45.221 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205070
	[0000][ M::kt_pipeline] read 1205070 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519449, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 754, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3188)
[0000][PE] mean and std.dev: (914.69, 756.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.38, 117.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 883, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (1003.20, 398.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 390.791 CPU sec, 42.017 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1204982
	[0000][ M::kt_pipeline] read 1204982 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519562, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 384, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3024)
[0000][PE] mean and std.dev: (690.00, 734.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.31, 117.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1087, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2796)
[0000][PE] mean and std.dev: (1115.18, 541.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205070 reads in 395.990 CPU sec, 50.148 real sec
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518968, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 666, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3301)
[0000][PE] mean and std.dev: (735.61, 569.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.35, 117.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1197, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3417)
[0000][PE] mean and std.dev: (1199.80, 510.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204982 reads in 396.498 CPU sec, 47.940 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519152, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 408, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2337)
[0000][PE] mean and std.dev: (607.96, 501.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.85, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (384, 910, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4518)
[0000][PE] mean and std.dev: (920.18, 565.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 390.244 CPU sec, 41.431 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518955, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 384, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2930)
[0000][PE] mean and std.dev: (684.34, 659.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.73, 117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1276, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3831)
[0000][PE] mean and std.dev: (1291.30, 667.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 391.258 CPU sec, 41.547 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1204928
	[0000][ M::kt_pipeline] read 1204928 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 519721, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 511, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7601)
[0000][PE] mean and std.dev: (1514.71, 1870.76)
[0000][PE] low and high boundaries for proper pairs: (1, 10035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.43, 117.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1220, 1526, 2605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5375)
[0000][PE] mean and std.dev: (1712.75, 842.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 401.590 CPU sec, 46.760 real sec
[0000] Calling mem_process_seqs.., task: 1066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519937, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 788, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4031)
[0000][PE] mean and std.dev: (954.56, 807.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.34, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204928 reads in 393.492 CPU sec, 45.897 real sec
[0000] Calling mem_process_seqs.., task: 1067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1204940
	[0000][ M::kt_pipeline] read 1204940 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519038, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (441, 718, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5304)
[0000][PE] mean and std.dev: (1081.20, 791.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.66, 117.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1350, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (292, 2362)
[0000][PE] mean and std.dev: (1186.76, 436.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 405.486 CPU sec, 48.656 real sec
[0000] Calling mem_process_seqs.., task: 1068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205074
	[0000][ M::kt_pipeline] read 1205074 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519410, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 409, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (836.71, 735.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204940 reads in 394.077 CPU sec, 44.700 real sec
[0000] Calling mem_process_seqs.., task: 1069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205016
	[0000][ M::kt_pipeline] read 1205016 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519063, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 534, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (826.86, 840.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.48, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1416, 2640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5998)
[0000][PE] mean and std.dev: (1776.47, 1297.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205074 reads in 403.606 CPU sec, 45.885 real sec
[0000] Calling mem_process_seqs.., task: 1070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205016
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519846, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 496, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4387)
[0000][PE] mean and std.dev: (1016.46, 980.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.36, 117.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1501, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5215)
[0000][PE] mean and std.dev: (1591.62, 960.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205016 reads in 395.265 CPU sec, 43.911 real sec
[0000] Calling mem_process_seqs.., task: 1071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205130
	[0000][ M::kt_pipeline] read 1205130 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518970, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 922, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (957.19, 754.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.45, 117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1459, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4444)
[0000][PE] mean and std.dev: (1128.09, 581.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 402.087 CPU sec, 59.285 real sec
[0000] Calling mem_process_seqs.., task: 1072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1204964
	[0000][ M::kt_pipeline] read 1204964 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519615, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 354, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (612.67, 658.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.17, 117.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1375, 2074, 3959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9127)
[0000][PE] mean and std.dev: (2474.47, 1724.17)
[0000][PE] low and high boundaries for proper pairs: (1, 11711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205130 reads in 403.139 CPU sec, 52.369 real sec
[0000] Calling mem_process_seqs.., task: 1073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205006
	[0000][ M::kt_pipeline] read 1205006 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204964
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519434, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 333, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3203)
[0000][PE] mean and std.dev: (642.00, 638.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.30, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1336, 3062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6854)
[0000][PE] mean and std.dev: (1778.93, 1361.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204964 reads in 400.079 CPU sec, 50.567 real sec
[0000] Calling mem_process_seqs.., task: 1074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205076
	[0000][ M::kt_pipeline] read 1205076 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519275, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (486, 1258, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (1430.76, 1359.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.31, 117.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1329, 1531, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (461, 2631)
[0000][PE] mean and std.dev: (1516.50, 397.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205006 reads in 400.365 CPU sec, 45.440 real sec
[0000] Calling mem_process_seqs.., task: 1075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205092
	[0000][ M::kt_pipeline] read 1205092 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519124, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 391, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2423)
[0000][PE] mean and std.dev: (515.33, 363.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.88, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1990, 2626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5386)
[0000][PE] mean and std.dev: (1878.87, 689.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205076 reads in 399.831 CPU sec, 43.920 real sec
[0000] Calling mem_process_seqs.., task: 1076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205064
	[0000][ M::kt_pipeline] read 1205064 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519406, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (482, 1426, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4181)
[0000][PE] mean and std.dev: (1187.00, 728.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.71, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205092 reads in 393.661 CPU sec, 45.068 real sec
[0000] Calling mem_process_seqs.., task: 1077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205000
	[0000][ M::kt_pipeline] read 1205000 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 519364, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 469, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2346)
[0000][PE] mean and std.dev: (621.28, 533.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.24, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1561, 2316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4970)
[0000][PE] mean and std.dev: (1444.57, 1013.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205064 reads in 394.959 CPU sec, 48.359 real sec
[0000] Calling mem_process_seqs.., task: 1078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1204962
	[0000][ M::kt_pipeline] read 1204962 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518800, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 440, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3415)
[0000][PE] mean and std.dev: (751.96, 702.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (497.07, 117.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1627, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (95, 2755)
[0000][PE] mean and std.dev: (1264.88, 467.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205000 reads in 394.304 CPU sec, 41.877 real sec
[0000] Calling mem_process_seqs.., task: 1079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205026
	[0000][ M::kt_pipeline] read 1205026 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204962
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 519339, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 435, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (882.86, 768.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.25, 117.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1274, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4805)
[0000][PE] mean and std.dev: (1445.69, 991.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204962 reads in 404.293 CPU sec, 53.044 real sec
[0000] Calling mem_process_seqs.., task: 1080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205128
	[0000][ M::kt_pipeline] read 1205128 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205026
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519462, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 433, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5377)
[0000][PE] mean and std.dev: (1027.77, 1194.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.28, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1353, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4714)
[0000][PE] mean and std.dev: (1205.56, 743.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205026 reads in 389.903 CPU sec, 41.572 real sec
[0000] Calling mem_process_seqs.., task: 1081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1204998
	[0000][ M::kt_pipeline] read 1204998 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519303, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 622, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4993)
[0000][PE] mean and std.dev: (1014.70, 929.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.32, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1472, 1618, 3020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6116)
[0000][PE] mean and std.dev: (2094.35, 1030.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205128 reads in 406.416 CPU sec, 49.274 real sec
[0000] Calling mem_process_seqs.., task: 1082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205072
	[0000][ M::kt_pipeline] read 1205072 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204998
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519204, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 458, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (671.84, 584.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.47, 117.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1296, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2906)
[0000][PE] mean and std.dev: (1135.88, 492.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204998 reads in 397.522 CPU sec, 49.797 real sec
[0000] Calling mem_process_seqs.., task: 1083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205028
	[0000][ M::kt_pipeline] read 1205028 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518987, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 461, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3735)
[0000][PE] mean and std.dev: (825.34, 833.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.37, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1322, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5186)
[0000][PE] mean and std.dev: (1473.38, 729.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205072 reads in 409.349 CPU sec, 42.461 real sec
[0000] Calling mem_process_seqs.., task: 1084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205210
	[0000][ M::kt_pipeline] read 1205210 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 519304, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 376, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2870)
[0000][PE] mean and std.dev: (553.33, 488.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 879)
[0000][PE] mean and std.dev: (496.56, 118.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1033)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1732, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5728)
[0000][PE] mean and std.dev: (1668.68, 1230.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205028 reads in 404.263 CPU sec, 42.506 real sec
[0000] Calling mem_process_seqs.., task: 1085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1204940
	[0000][ M::kt_pipeline] read 1204940 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518922, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 637, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (910.60, 802.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.46, 117.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1714, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5181)
[0000][PE] mean and std.dev: (1696.15, 855.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205210 reads in 394.993 CPU sec, 50.724 real sec
[0000] Calling mem_process_seqs.., task: 1086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205242
	[0000][ M::kt_pipeline] read 1205242 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 519198, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 398, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4461)
[0000][PE] mean and std.dev: (970.15, 998.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.60, 117.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 959, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (1117.19, 809.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204940 reads in 408.223 CPU sec, 51.551 real sec
[0000] Calling mem_process_seqs.., task: 1087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205000
	[0000][ M::kt_pipeline] read 1205000 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519213, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 411, 745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1679)
[0000][PE] mean and std.dev: (469.57, 302.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.50, 117.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1498, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4238)
[0000][PE] mean and std.dev: (1438.91, 633.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205242 reads in 401.087 CPU sec, 50.541 real sec
[0000] Calling mem_process_seqs.., task: 1088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1204978
	[0000][ M::kt_pipeline] read 1204978 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205000
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519486, 14, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 526, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2487)
[0000][PE] mean and std.dev: (671.90, 506.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.33, 117.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (404, 1635, 3482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9638)
[0000][PE] mean and std.dev: (1871.14, 1603.63)
[0000][PE] low and high boundaries for proper pairs: (1, 12716)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1155, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2522)
[0000][PE] mean and std.dev: (861.67, 415.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205000 reads in 407.719 CPU sec, 49.327 real sec
[0000] Calling mem_process_seqs.., task: 1089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205078
	[0000][ M::kt_pipeline] read 1205078 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204978
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519006, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 401, 798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1828)
[0000][PE] mean and std.dev: (466.95, 319.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.67, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1483, 2950, 3271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6847)
[0000][PE] mean and std.dev: (2446.60, 1045.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204978 reads in 406.363 CPU sec, 45.487 real sec
[0000] Calling mem_process_seqs.., task: 1090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205050
	[0000][ M::kt_pipeline] read 1205050 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518763, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 443, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2544)
[0000][PE] mean and std.dev: (639.13, 524.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.51, 117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1376, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4047)
[0000][PE] mean and std.dev: (1318.41, 583.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205078 reads in 412.743 CPU sec, 51.519 real sec
[0000] Calling mem_process_seqs.., task: 1091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1204984
	[0000][ M::kt_pipeline] read 1204984 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519316, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 846, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3883)
[0000][PE] mean and std.dev: (956.17, 739.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (417, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 876)
[0000][PE] mean and std.dev: (496.35, 117.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1029)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1503, 3274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7688)
[0000][PE] mean and std.dev: (2059.68, 1307.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205050 reads in 408.520 CPU sec, 56.645 real sec
[0000] Calling mem_process_seqs.., task: 1092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205014
	[0000][ M::kt_pipeline] read 1205014 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204984
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519671, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 436, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (749.43, 648.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.29, 117.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (533, 1564, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (1277.54, 765.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204984 reads in 391.579 CPU sec, 49.675 real sec
[0000] Calling mem_process_seqs.., task: 1093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205178
	[0000][ M::kt_pipeline] read 1205178 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519445, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 399, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2596)
[0000][PE] mean and std.dev: (487.63, 408.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.63, 117.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1212, 2713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5799)
[0000][PE] mean and std.dev: (1843.13, 1439.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205014 reads in 391.564 CPU sec, 51.644 real sec
[0000] Calling mem_process_seqs.., task: 1094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205058
	[0000][ M::kt_pipeline] read 1205058 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518861, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 1135, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5409)
[0000][PE] mean and std.dev: (1354.93, 1175.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.13, 117.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 983, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4373)
[0000][PE] mean and std.dev: (1226.93, 781.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205178 reads in 394.914 CPU sec, 44.364 real sec
[0000] Calling mem_process_seqs.., task: 1095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1204994
	[0000][ M::kt_pipeline] read 1204994 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519411, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 515, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2340)
[0000][PE] mean and std.dev: (615.10, 360.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 488, 570)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 874)
[0000][PE] mean and std.dev: (496.61, 117.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1026)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1496, 2907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6375)
[0000][PE] mean and std.dev: (1965.94, 1152.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205058 reads in 391.849 CPU sec, 50.190 real sec
[0000] Calling mem_process_seqs.., task: 1096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 170518638, nseq: 1141602
	[0000][ M::kt_pipeline] read 1141602 sequences (170518638 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1204994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519299, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 442, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (780.26, 563.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.58, 117.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1674, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (1523.10, 744.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1204994 reads in 398.688 CPU sec, 52.905 real sec
[0000] Calling mem_process_seqs.., task: 1097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1141602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 491817, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 380, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (651.97, 680.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (418, 489, 571)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 877)
[0000][PE] mean and std.dev: (496.66, 117.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1030)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1141602 reads in 384.063 CPU sec, 51.319 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.035730 MHz
Runtime profile:

	Time taken for main_mem function: 56339.02 sec

	IO times (sec) :
	Reading IO time (reads) avg: 2240.60, (2240.60, 2240.60)
	Writing IO time (SAM) avg: 5241.15, (5241.15, 5241.15)
	Reading IO time (Reference Genome) avg: 20.36, (20.36, 20.36)
	Index read time avg: 29.36, (29.36, 29.36)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 56287.89
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 56280.91, (56280.91, 56280.91)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 19202.02, (19202.02, 19202.02)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 36938.57, (36938.57, 36938.57)
		SMEM compute avg: 12868.89, (12898.24, 12835.92)
		SAL compute avg: 6489.16, (6523.02, 6436.66)
				MEM_SA avg: 3646.95, (3670.17, 3616.79)

		BSW time, avg: 11459.17, (11481.81, 11434.09)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
