Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000130 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000212 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518216, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 779, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3914)
[0000][PE] mean and std.dev: (804.47, 711.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.70, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1723, 1948, 3939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8371)
[0000][PE] mean and std.dev: (2327.56, 1397.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 437.295 CPU sec, 165.257 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518110, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 429, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2607)
[0000][PE] mean and std.dev: (637.78, 644.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.71, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1910, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5336)
[0000][PE] mean and std.dev: (1667.38, 736.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 418.481 CPU sec, 73.111 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517897, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 506, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2460)
[0000][PE] mean and std.dev: (706.58, 496.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.65, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1233, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5104)
[0000][PE] mean and std.dev: (1380.75, 752.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 407.645 CPU sec, 62.741 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518066, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 409, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2925)
[0000][PE] mean and std.dev: (563.36, 522.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.51, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1476, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4031)
[0000][PE] mean and std.dev: (1596.41, 847.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 404.832 CPU sec, 65.862 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517839, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 316, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (762.83, 711.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.52, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1492, 2670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6252)
[0000][PE] mean and std.dev: (1774.95, 1019.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 395.545 CPU sec, 70.223 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518710, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 567, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2643)
[0000][PE] mean and std.dev: (745.63, 602.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.31, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 2292, 6008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15678)
[0000][PE] mean and std.dev: (3304.92, 2994.71)
[0000][PE] low and high boundaries for proper pairs: (1, 20513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 395.105 CPU sec, 63.308 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518714, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 424, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2841)
[0000][PE] mean and std.dev: (509.40, 387.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.33, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1538, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4166)
[0000][PE] mean and std.dev: (1557.64, 855.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 392.147 CPU sec, 65.042 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518459, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 701, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4037)
[0000][PE] mean and std.dev: (941.29, 759.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.24, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1378, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (1360.80, 866.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 388.919 CPU sec, 60.070 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518004, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 549, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5201)
[0000][PE] mean and std.dev: (1242.40, 1353.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.51, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1256, 1631, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4931)
[0000][PE] mean and std.dev: (1631.00, 704.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 392.651 CPU sec, 70.130 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518164, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 805, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4236)
[0000][PE] mean and std.dev: (829.36, 668.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 846)
[0000][PE] mean and std.dev: (482.95, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1467, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4094)
[0000][PE] mean and std.dev: (1424.67, 451.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 396.114 CPU sec, 69.378 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518513, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 732, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5355)
[0000][PE] mean and std.dev: (1070.64, 1015.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7021)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.32, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1208, 1437, 3018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6638)
[0000][PE] mean and std.dev: (1942.80, 1165.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 396.715 CPU sec, 59.963 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518177, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 387, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4825)
[0000][PE] mean and std.dev: (785.80, 827.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.64, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1027, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (1088.64, 498.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 394.488 CPU sec, 63.543 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518313, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 308, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2776)
[0000][PE] mean and std.dev: (549.59, 501.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.77, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1377, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2924)
[0000][PE] mean and std.dev: (1215.06, 402.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 406.271 CPU sec, 69.091 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518242, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 874, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6371)
[0000][PE] mean and std.dev: (1485.39, 1704.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.36, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 870, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4210)
[0000][PE] mean and std.dev: (1223.46, 1030.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 405.614 CPU sec, 75.568 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517768, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 709, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4026)
[0000][PE] mean and std.dev: (954.03, 880.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.76, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1099, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4460)
[0000][PE] mean and std.dev: (1060.07, 516.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 408.869 CPU sec, 77.158 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518484, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 564, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3937)
[0000][PE] mean and std.dev: (894.48, 948.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.45, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1360, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4963)
[0000][PE] mean and std.dev: (1435.71, 840.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 399.437 CPU sec, 67.041 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518834, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 834, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4165)
[0000][PE] mean and std.dev: (997.74, 810.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.45, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1046, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3751)
[0000][PE] mean and std.dev: (1114.80, 519.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 397.495 CPU sec, 76.920 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518172, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 283, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5201)
[0000][PE] mean and std.dev: (1001.52, 1293.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 1463, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4354)
[0000][PE] mean and std.dev: (1368.47, 993.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 410.500 CPU sec, 64.977 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518401, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 554, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3531)
[0000][PE] mean and std.dev: (667.58, 591.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.57, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1526, 3514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8646)
[0000][PE] mean and std.dev: (2476.67, 2097.74)
[0000][PE] low and high boundaries for proper pairs: (1, 11212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 400.171 CPU sec, 62.115 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518609, 8, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 1080, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (1030.05, 893.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.55, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 412.006 CPU sec, 76.726 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518443, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 975, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4622)
[0000][PE] mean and std.dev: (1105.88, 1069.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1222, 5212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13628)
[0000][PE] mean and std.dev: (2567.35, 2471.66)
[0000][PE] low and high boundaries for proper pairs: (1, 17836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 412.915 CPU sec, 61.578 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518533, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 483, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2858)
[0000][PE] mean and std.dev: (702.44, 607.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.33, 111.02)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1494, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (1398.92, 477.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 419.551 CPU sec, 78.089 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518519, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 612, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3281)
[0000][PE] mean and std.dev: (801.55, 699.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.38, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1264, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2924)
[0000][PE] mean and std.dev: (1267.64, 569.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 419.452 CPU sec, 68.054 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518575, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 659, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6817)
[0000][PE] mean and std.dev: (1223.79, 1341.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.68, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1562, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (1545.21, 540.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 410.992 CPU sec, 71.685 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517842, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 481, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (798.07, 796.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.29, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1251, 1583, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4494)
[0000][PE] mean and std.dev: (1817.67, 924.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 414.941 CPU sec, 79.452 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518383, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 347, 780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1750)
[0000][PE] mean and std.dev: (434.73, 319.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.74, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1453, 2678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5774)
[0000][PE] mean and std.dev: (1906.20, 1297.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 414.095 CPU sec, 72.169 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518520, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 449, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2360)
[0000][PE] mean and std.dev: (549.59, 417.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.88, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1563, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (1429.50, 698.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 418.965 CPU sec, 67.548 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518147, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 394, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2244)
[0000][PE] mean and std.dev: (492.62, 360.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 2095, 3559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9103)
[0000][PE] mean and std.dev: (1907.75, 1270.46)
[0000][PE] low and high boundaries for proper pairs: (1, 11875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 423.085 CPU sec, 83.815 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518027, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 411, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4178)
[0000][PE] mean and std.dev: (830.91, 633.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.57, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1184, 3016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7408)
[0000][PE] mean and std.dev: (1538.29, 961.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 416.203 CPU sec, 76.142 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517853, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 609, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (870.71, 895.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.27, 110.90)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1527, 2861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7013)
[0000][PE] mean and std.dev: (2019.64, 1599.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 416.517 CPU sec, 79.405 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518333, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 594, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2916)
[0000][PE] mean and std.dev: (741.43, 658.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.68, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1348, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (1337.06, 479.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 415.064 CPU sec, 76.493 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518450, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 702, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5484)
[0000][PE] mean and std.dev: (1251.62, 1354.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.56, 110.99)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1279, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (1253.38, 563.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 417.199 CPU sec, 75.207 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518353, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 599, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3992)
[0000][PE] mean and std.dev: (957.59, 1034.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.31, 111.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 420.357 CPU sec, 69.112 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517840, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 629, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (765.11, 560.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 110.92)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1809, 3146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7114)
[0000][PE] mean and std.dev: (2093.76, 1334.27)
[0000][PE] low and high boundaries for proper pairs: (1, 9098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 426.073 CPU sec, 75.695 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518220, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 371, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (742.96, 763.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.74, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1412, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (1276.36, 420.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 425.371 CPU sec, 85.642 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518543, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 648, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (957.82, 901.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.19, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1359, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3443)
[0000][PE] mean and std.dev: (1212.69, 423.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 423.324 CPU sec, 83.438 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518739, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 304, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5753)
[0000][PE] mean and std.dev: (927.92, 1206.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.75, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1242, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3217)
[0000][PE] mean and std.dev: (1275.00, 676.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 423.281 CPU sec, 86.117 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518446, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 981, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (909.32, 692.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.03, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1441, 1885, 4002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9124)
[0000][PE] mean and std.dev: (2831.45, 2367.12)
[0000][PE] low and high boundaries for proper pairs: (1, 12300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 421.431 CPU sec, 82.109 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518342, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 733, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3822)
[0000][PE] mean and std.dev: (949.76, 897.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.24, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1994, 3036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7276)
[0000][PE] mean and std.dev: (1922.60, 1486.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 415.634 CPU sec, 79.796 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518203, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 519, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4497)
[0000][PE] mean and std.dev: (893.38, 717.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.49, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1269, 2845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6897)
[0000][PE] mean and std.dev: (1457.31, 940.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 420.675 CPU sec, 75.260 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517997, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 486, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4726)
[0000][PE] mean and std.dev: (771.54, 755.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 110.75)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1064, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2733)
[0000][PE] mean and std.dev: (1058.00, 530.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 417.174 CPU sec, 81.320 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518404, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 471, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (631.95, 494.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.28, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1396, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (1341.83, 422.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 418.840 CPU sec, 84.292 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518428, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 314, 453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 995)
[0000][PE] mean and std.dev: (285.06, 194.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.42, 111.00)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1111, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (1165.36, 657.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 418.064 CPU sec, 88.998 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518349, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 654, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3312)
[0000][PE] mean and std.dev: (852.45, 686.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.53, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1283, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (1333.70, 675.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 414.210 CPU sec, 76.422 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518537, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 492, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5572)
[0000][PE] mean and std.dev: (929.78, 1029.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.38, 111.44)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1755, 3110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7358)
[0000][PE] mean and std.dev: (1898.59, 1229.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 419.600 CPU sec, 81.341 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518327, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 447, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2553)
[0000][PE] mean and std.dev: (594.44, 523.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.69, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (2033, 2254, 4075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8159)
[0000][PE] mean and std.dev: (2704.70, 1739.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 414.631 CPU sec, 70.597 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 518350, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 768, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4114)
[0000][PE] mean and std.dev: (871.57, 836.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.55, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1408, 2584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5504)
[0000][PE] mean and std.dev: (1752.15, 989.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 417.667 CPU sec, 71.149 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518246, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 404, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2044)
[0000][PE] mean and std.dev: (494.23, 413.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1439, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4255)
[0000][PE] mean and std.dev: (1405.15, 745.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 411.720 CPU sec, 61.364 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518501, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 1338, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5163)
[0000][PE] mean and std.dev: (1214.57, 1097.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.30, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (401, 898, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2651)
[0000][PE] mean and std.dev: (743.00, 405.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 414.681 CPU sec, 77.679 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518017, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 416, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1163)
[0000][PE] mean and std.dev: (418.67, 237.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1476)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.53)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1207, 3117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7301)
[0000][PE] mean and std.dev: (1448.38, 956.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 418.879 CPU sec, 83.473 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518357, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 502, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3008)
[0000][PE] mean and std.dev: (707.85, 643.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1565, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1367.06, 684.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 412.837 CPU sec, 88.545 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518253, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 326, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3912)
[0000][PE] mean and std.dev: (651.32, 643.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1579, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (1510.06, 562.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 418.862 CPU sec, 96.682 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518415, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 367, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3246)
[0000][PE] mean and std.dev: (595.96, 663.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1425, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (1340.14, 599.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 418.985 CPU sec, 91.729 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518096, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 1053, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1140.85, 866.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.77, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1883, 2285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5011)
[0000][PE] mean and std.dev: (1562.00, 747.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 417.108 CPU sec, 94.280 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518632, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 434, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3190)
[0000][PE] mean and std.dev: (804.53, 801.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.24, 110.98)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1444, 2364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5100)
[0000][PE] mean and std.dev: (1454.06, 1006.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 413.945 CPU sec, 107.997 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518222, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 786, 1197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (755.06, 526.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (619, 1121, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5545)
[0000][PE] mean and std.dev: (1512.81, 1215.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 419.343 CPU sec, 90.156 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517833, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 524, 2870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8082)
[0000][PE] mean and std.dev: (1681.96, 2031.63)
[0000][PE] low and high boundaries for proper pairs: (1, 10688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1300, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (1255.19, 695.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 410.898 CPU sec, 84.588 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517981, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 705, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5178)
[0000][PE] mean and std.dev: (1090.38, 1084.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.57, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1175, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3318)
[0000][PE] mean and std.dev: (1166.65, 701.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 415.248 CPU sec, 92.185 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518377, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 531, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4769)
[0000][PE] mean and std.dev: (1030.52, 947.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.70, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1179, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (1377.45, 776.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 417.586 CPU sec, 90.028 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518586, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 792, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4503)
[0000][PE] mean and std.dev: (1029.53, 1053.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.73, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1371, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3769)
[0000][PE] mean and std.dev: (1301.15, 622.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 412.704 CPU sec, 96.474 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518295, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 317, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (662.43, 699.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1385, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5408)
[0000][PE] mean and std.dev: (1766.06, 1191.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 421.529 CPU sec, 95.510 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518463, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 791, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5306)
[0000][PE] mean and std.dev: (1045.44, 908.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.44, 110.99)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1397, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (161, 2666)
[0000][PE] mean and std.dev: (1414.73, 433.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 414.508 CPU sec, 81.477 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518780, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 493, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3229)
[0000][PE] mean and std.dev: (856.82, 773.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1381, 1612, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (1663.89, 514.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 414.092 CPU sec, 87.768 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518324, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 518, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4250)
[0000][PE] mean and std.dev: (915.63, 891.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1367, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3614)
[0000][PE] mean and std.dev: (1413.24, 597.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 420.785 CPU sec, 102.672 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518409, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 1236, 2748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7554)
[0000][PE] mean and std.dev: (1474.89, 1245.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.75, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1586, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3830)
[0000][PE] mean and std.dev: (1599.25, 783.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 412.507 CPU sec, 93.546 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518337, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 333, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1470)
[0000][PE] mean and std.dev: (318.68, 185.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1424, 2606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5888)
[0000][PE] mean and std.dev: (1574.40, 984.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 413.028 CPU sec, 93.517 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518192, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 948, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5193)
[0000][PE] mean and std.dev: (1088.45, 796.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1554, 3364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7562)
[0000][PE] mean and std.dev: (1808.56, 1062.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 412.016 CPU sec, 85.024 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518591, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 478, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5122)
[0000][PE] mean and std.dev: (809.12, 742.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 110.99)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1352, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (1392.47, 873.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 415.687 CPU sec, 92.337 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518113, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 806, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5009)
[0000][PE] mean and std.dev: (1002.78, 800.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1433, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5091)
[0000][PE] mean and std.dev: (1622.00, 1033.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 419.625 CPU sec, 89.305 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518526, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 393, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (797.31, 878.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.57, 110.98)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1197, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5739)
[0000][PE] mean and std.dev: (1928.33, 1539.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 414.775 CPU sec, 86.811 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518438, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 887, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (847.21, 735.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.18, 110.93)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1590, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5134)
[0000][PE] mean and std.dev: (1944.80, 1127.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 414.293 CPU sec, 87.198 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518025, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 675, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (879.60, 720.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.14, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1335, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (1401.75, 708.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 416.237 CPU sec, 83.841 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518501, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 460, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4430)
[0000][PE] mean and std.dev: (861.09, 923.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.63, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1431, 2692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6188)
[0000][PE] mean and std.dev: (1805.46, 1239.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 408.109 CPU sec, 79.196 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518461, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 387, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2654)
[0000][PE] mean and std.dev: (524.38, 492.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (519, 967, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (943.06, 571.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 420.848 CPU sec, 98.056 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518126, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 532, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2999)
[0000][PE] mean and std.dev: (656.42, 500.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.49, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1087, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2773)
[0000][PE] mean and std.dev: (1019.37, 524.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 420.239 CPU sec, 92.724 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518237, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 531, 2207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5973)
[0000][PE] mean and std.dev: (1054.36, 1158.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.50, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1394, 1737, 3022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6278)
[0000][PE] mean and std.dev: (2096.09, 1328.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 417.005 CPU sec, 88.402 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518363, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 553, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2643)
[0000][PE] mean and std.dev: (797.41, 689.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.35, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1326, 2611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5981)
[0000][PE] mean and std.dev: (1826.58, 1428.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 417.414 CPU sec, 92.189 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518539, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 358, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2473)
[0000][PE] mean and std.dev: (684.14, 595.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.63, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1182, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (1010.00, 449.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 415.363 CPU sec, 88.728 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518061, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 403, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3190)
[0000][PE] mean and std.dev: (627.61, 552.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 1882, 2565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5231)
[0000][PE] mean and std.dev: (1746.00, 884.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 419.642 CPU sec, 99.833 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518213, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (479, 1009, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2612)
[0000][PE] mean and std.dev: (881.00, 516.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.64, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1587, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4554)
[0000][PE] mean and std.dev: (1456.23, 668.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 412.433 CPU sec, 88.541 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518709, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 477, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (795.88, 715.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.49, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1474, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (1377.00, 817.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 414.800 CPU sec, 87.174 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518001, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 359, 656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1466)
[0000][PE] mean and std.dev: (460.81, 367.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.74, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1345, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (1308.25, 601.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 416.910 CPU sec, 80.078 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518444, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 401, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2436)
[0000][PE] mean and std.dev: (605.56, 564.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1353, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (142, 2382)
[0000][PE] mean and std.dev: (1253.44, 472.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 410.533 CPU sec, 84.118 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518574, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 395, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (815.08, 793.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.43, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1253, 2390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5146)
[0000][PE] mean and std.dev: (1625.48, 1013.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 419.403 CPU sec, 100.596 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518331, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 1153, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5466)
[0000][PE] mean and std.dev: (1223.70, 1053.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.53, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1228, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4245)
[0000][PE] mean and std.dev: (1320.85, 597.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 418.464 CPU sec, 88.454 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518646, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 392, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (673.96, 590.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 2380, 4655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12133)
[0000][PE] mean and std.dev: (2648.20, 1915.21)
[0000][PE] low and high boundaries for proper pairs: (1, 15872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 418.228 CPU sec, 95.699 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518387, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 741, 2569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7065)
[0000][PE] mean and std.dev: (1187.07, 1128.44)
[0000][PE] low and high boundaries for proper pairs: (1, 9313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.31, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1269, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (1101.24, 503.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 420.263 CPU sec, 100.751 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518138, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 525, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (657.70, 534.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.59, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1412, 2527, 3139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6593)
[0000][PE] mean and std.dev: (2215.33, 848.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 416.250 CPU sec, 90.861 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518159, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 531, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3250)
[0000][PE] mean and std.dev: (706.71, 519.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.35, 110.89)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1179, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4739)
[0000][PE] mean and std.dev: (1483.09, 916.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 418.261 CPU sec, 86.561 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518363, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 367, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (795.62, 843.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1737, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4651)
[0000][PE] mean and std.dev: (1765.46, 1046.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 417.411 CPU sec, 100.938 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518549, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 928, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (860.69, 621.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.24, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 961, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (1262.29, 911.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 417.100 CPU sec, 86.938 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518242, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 583, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4682)
[0000][PE] mean and std.dev: (1038.48, 980.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1151, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (1362.67, 887.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 411.446 CPU sec, 85.020 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517898, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 411, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (751.96, 765.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1610, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5363)
[0000][PE] mean and std.dev: (1689.57, 1090.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 418.827 CPU sec, 93.995 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518024, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 693, 2165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5933)
[0000][PE] mean and std.dev: (1396.03, 1498.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (709, 1159, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (1161.33, 692.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 413.422 CPU sec, 90.987 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518574, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 605, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3108)
[0000][PE] mean and std.dev: (710.72, 605.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.26, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1188, 3801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10131)
[0000][PE] mean and std.dev: (2124.19, 2141.77)
[0000][PE] low and high boundaries for proper pairs: (1, 13296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 415.359 CPU sec, 79.938 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518354, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 519, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (651.35, 527.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1773, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5937)
[0000][PE] mean and std.dev: (1988.50, 1050.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 417.028 CPU sec, 90.592 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518698, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 592, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4823)
[0000][PE] mean and std.dev: (999.24, 871.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1518, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (1500.38, 1089.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 416.955 CPU sec, 85.845 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518521, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 736, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5248)
[0000][PE] mean and std.dev: (1172.69, 1232.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.40, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1195, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (386, 1886)
[0000][PE] mean and std.dev: (1088.38, 153.51)
[0000][PE] low and high boundaries for proper pairs: (86, 2186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 413.451 CPU sec, 86.593 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518243, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 495, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (863.08, 824.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.60, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1360, 1674, 2649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5227)
[0000][PE] mean and std.dev: (1789.93, 907.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 419.574 CPU sec, 91.034 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518102, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 425, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2243)
[0000][PE] mean and std.dev: (507.67, 378.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.30, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1128, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5428)
[0000][PE] mean and std.dev: (1588.81, 1108.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 417.553 CPU sec, 81.449 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518417, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 1036, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5762)
[0000][PE] mean and std.dev: (1225.22, 1149.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.20, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1173, 1956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4228)
[0000][PE] mean and std.dev: (1263.16, 761.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 421.443 CPU sec, 92.366 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518422, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 496, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (942.00, 892.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1531, 2739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5823)
[0000][PE] mean and std.dev: (2047.93, 1478.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 419.629 CPU sec, 92.784 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518362, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 478, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (686.81, 687.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1406, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3497)
[0000][PE] mean and std.dev: (1410.69, 572.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 419.181 CPU sec, 94.284 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518593, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (567, 1018, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (1290.83, 1104.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.45)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1785, 2827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6271)
[0000][PE] mean and std.dev: (1755.22, 963.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 412.606 CPU sec, 82.786 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517815, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 364, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2398)
[0000][PE] mean and std.dev: (592.75, 561.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.26, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1713, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4883)
[0000][PE] mean and std.dev: (1706.04, 958.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 420.718 CPU sec, 103.200 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518114, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 434, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (687.75, 593.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1241, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1271.75, 622.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 418.511 CPU sec, 88.730 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518122, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 390, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (770.84, 759.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.73, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1526, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5084)
[0000][PE] mean and std.dev: (1716.20, 1037.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 418.215 CPU sec, 88.440 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518278, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 900, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4469)
[0000][PE] mean and std.dev: (1032.70, 983.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.54, 111.55)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1452, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (1304.50, 575.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 414.004 CPU sec, 82.851 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518603, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 840, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (690.56, 541.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.42, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1374, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (1470.68, 597.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 411.967 CPU sec, 92.430 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517943, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 874, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4921)
[0000][PE] mean and std.dev: (1064.33, 1008.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.31, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1121, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4739)
[0000][PE] mean and std.dev: (1482.12, 896.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 413.192 CPU sec, 85.992 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517509, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 501, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4883)
[0000][PE] mean and std.dev: (1068.88, 1167.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.76, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1280, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4219)
[0000][PE] mean and std.dev: (1399.00, 712.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 422.661 CPU sec, 101.415 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518617, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 296, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1489)
[0000][PE] mean and std.dev: (357.67, 253.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.54, 111.61)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1328, 1731, 5052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12500)
[0000][PE] mean and std.dev: (3021.42, 2669.45)
[0000][PE] low and high boundaries for proper pairs: (1, 16224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 414.978 CPU sec, 92.505 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518106, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 535, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4820)
[0000][PE] mean and std.dev: (1017.04, 947.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.70, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1618, 3775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9009)
[0000][PE] mean and std.dev: (2063.05, 1589.04)
[0000][PE] low and high boundaries for proper pairs: (1, 11626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 418.650 CPU sec, 91.336 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518084, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 804, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (946.50, 775.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.57, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 420.843 CPU sec, 96.073 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518544, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 408, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3302)
[0000][PE] mean and std.dev: (551.36, 548.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.45, 110.85)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 998, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (155, 2150)
[0000][PE] mean and std.dev: (994.23, 271.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 417.769 CPU sec, 103.864 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518449, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (613, 1160, 3029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7861)
[0000][PE] mean and std.dev: (1520.48, 1289.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.28, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1245, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4278)
[0000][PE] mean and std.dev: (1553.33, 827.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 417.725 CPU sec, 92.713 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518370, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 411, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1626)
[0000][PE] mean and std.dev: (464.33, 401.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1221, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (1325.93, 566.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 411.536 CPU sec, 69.062 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205518
	[0000][ M::kt_pipeline] read 1205518 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518258, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 413, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3149)
[0000][PE] mean and std.dev: (689.50, 645.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.55, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1366, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3497)
[0000][PE] mean and std.dev: (1388.37, 740.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 414.257 CPU sec, 84.379 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518386, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 403, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2273)
[0000][PE] mean and std.dev: (515.76, 383.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.49, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1511, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (1541.70, 655.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205518 reads in 409.394 CPU sec, 78.190 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517821, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 833, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4101)
[0000][PE] mean and std.dev: (962.91, 878.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.46, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1413, 2268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4840)
[0000][PE] mean and std.dev: (1492.10, 1137.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 418.536 CPU sec, 102.140 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518347, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 650, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2796)
[0000][PE] mean and std.dev: (764.26, 607.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.55, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1370, 6611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17709)
[0000][PE] mean and std.dev: (2747.54, 2774.05)
[0000][PE] low and high boundaries for proper pairs: (1, 23258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 411.352 CPU sec, 86.952 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518200, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 837, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4671)
[0000][PE] mean and std.dev: (757.50, 635.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1531, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4815)
[0000][PE] mean and std.dev: (1532.56, 929.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 419.896 CPU sec, 100.617 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518283, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 394, 888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2056)
[0000][PE] mean and std.dev: (536.88, 368.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.40)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1467, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5541)
[0000][PE] mean and std.dev: (1593.64, 1206.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 414.692 CPU sec, 101.198 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518727, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 504, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5126)
[0000][PE] mean and std.dev: (922.94, 1047.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.67, 111.44)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1840, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4768)
[0000][PE] mean and std.dev: (1570.11, 769.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 415.282 CPU sec, 91.067 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518180, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 293, 995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2487)
[0000][PE] mean and std.dev: (570.89, 623.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.39, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1296, 1424, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (336, 2736)
[0000][PE] mean and std.dev: (1439.90, 441.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 416.604 CPU sec, 92.822 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518362, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 409, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (833.76, 880.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1443, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5403)
[0000][PE] mean and std.dev: (1795.87, 1008.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 414.578 CPU sec, 90.724 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518620, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 594, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2776)
[0000][PE] mean and std.dev: (622.10, 533.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.25, 110.93)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1949, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1929.08, 1050.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 409.817 CPU sec, 84.769 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518344, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 665, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4740)
[0000][PE] mean and std.dev: (869.81, 772.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.66, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1328, 1934, 2863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5933)
[0000][PE] mean and std.dev: (2191.54, 1374.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 413.940 CPU sec, 91.397 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517977, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 1053, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4294)
[0000][PE] mean and std.dev: (1020.43, 918.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1182, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (1273.38, 684.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 417.691 CPU sec, 89.469 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518533, 5, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 364, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2684)
[0000][PE] mean and std.dev: (428.42, 378.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3503)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.36, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1516, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4723)
[0000][PE] mean and std.dev: (1597.86, 863.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 414.357 CPU sec, 94.934 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518882, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 361, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1855)
[0000][PE] mean and std.dev: (379.86, 260.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.55)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1473, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (1526.52, 757.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 407.869 CPU sec, 86.107 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518747, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 308, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4510)
[0000][PE] mean and std.dev: (921.74, 968.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.27, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1419, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4656)
[0000][PE] mean and std.dev: (1513.38, 953.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 416.835 CPU sec, 96.917 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518408, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 664, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6399)
[0000][PE] mean and std.dev: (1355.83, 1478.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.35, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 415.219 CPU sec, 81.760 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518353, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 1054, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4431)
[0000][PE] mean and std.dev: (1193.04, 891.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1417, 2042, 2637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5077)
[0000][PE] mean and std.dev: (2038.06, 841.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 416.763 CPU sec, 90.092 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518162, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 414, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2193)
[0000][PE] mean and std.dev: (519.29, 470.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1643, 3512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8162)
[0000][PE] mean and std.dev: (2227.00, 1464.38)
[0000][PE] low and high boundaries for proper pairs: (1, 10487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 418.629 CPU sec, 96.856 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518014, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 429, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (761.19, 702.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.28, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1470, 3534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8594)
[0000][PE] mean and std.dev: (2164.63, 1548.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 415.439 CPU sec, 88.543 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205980
	[0000][ M::kt_pipeline] read 1205980 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 519055, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 534, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2221)
[0000][PE] mean and std.dev: (571.00, 425.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 110.96)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 2613, 3488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8614)
[0000][PE] mean and std.dev: (2490.83, 1889.31)
[0000][PE] low and high boundaries for proper pairs: (1, 11177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 412.194 CPU sec, 90.928 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205980
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517983, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 412, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (829.74, 936.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.75, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1138, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (1185.86, 468.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205980 reads in 410.721 CPU sec, 90.411 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518189, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 682, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (864.88, 684.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.63, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1456, 1761, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4606)
[0000][PE] mean and std.dev: (1668.70, 739.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 415.249 CPU sec, 99.215 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518334, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 437, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2703)
[0000][PE] mean and std.dev: (655.86, 529.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.27, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1714, 3395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8323)
[0000][PE] mean and std.dev: (2202.56, 1514.50)
[0000][PE] low and high boundaries for proper pairs: (1, 10787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 416.593 CPU sec, 98.287 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518243, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 471, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (843.66, 818.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1276, 1640, 3013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6487)
[0000][PE] mean and std.dev: (1930.13, 1227.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 420.264 CPU sec, 98.659 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518448, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 501, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2224)
[0000][PE] mean and std.dev: (563.21, 359.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.02)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1537, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3503)
[0000][PE] mean and std.dev: (1450.13, 574.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 410.821 CPU sec, 86.903 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518008, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 987, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4843)
[0000][PE] mean and std.dev: (1027.88, 826.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1163, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (1254.58, 584.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 412.177 CPU sec, 86.617 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518362, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 395, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3023)
[0000][PE] mean and std.dev: (680.36, 647.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 946, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2881)
[0000][PE] mean and std.dev: (1023.00, 581.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 414.663 CPU sec, 80.560 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518636, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 386, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2043)
[0000][PE] mean and std.dev: (523.00, 423.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1104, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4405)
[0000][PE] mean and std.dev: (1324.69, 866.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 416.551 CPU sec, 95.618 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518340, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 325, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2698)
[0000][PE] mean and std.dev: (620.55, 570.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.70, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1114, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3268)
[0000][PE] mean and std.dev: (1192.00, 802.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 418.472 CPU sec, 88.846 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518507, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 446, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3245)
[0000][PE] mean and std.dev: (694.67, 510.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.57, 111.48)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1565, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5885)
[0000][PE] mean and std.dev: (1535.40, 1060.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 413.264 CPU sec, 88.447 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518557, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (838, 1487, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4708)
[0000][PE] mean and std.dev: (1432.92, 831.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.56, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1190, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3147)
[0000][PE] mean and std.dev: (1112.00, 407.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 416.450 CPU sec, 91.634 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518790, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 324, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1516)
[0000][PE] mean and std.dev: (343.00, 230.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.33, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1584, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (1618.52, 962.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 407.338 CPU sec, 88.654 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517940, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 900, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3810)
[0000][PE] mean and std.dev: (919.81, 715.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1468, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4662)
[0000][PE] mean and std.dev: (1413.31, 694.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 418.605 CPU sec, 89.254 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518266, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 701, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5047)
[0000][PE] mean and std.dev: (1049.00, 1165.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.28, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 1550, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5532)
[0000][PE] mean and std.dev: (1957.38, 1221.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 420.394 CPU sec, 92.717 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518017, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 399, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2741)
[0000][PE] mean and std.dev: (660.83, 603.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1381, 3443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8447)
[0000][PE] mean and std.dev: (1949.73, 1463.26)
[0000][PE] low and high boundaries for proper pairs: (1, 10949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 415.403 CPU sec, 87.808 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517974, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 530, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (824.87, 656.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.17, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1421, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (63, 2868)
[0000][PE] mean and std.dev: (1343.25, 578.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 422.054 CPU sec, 96.861 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518757, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 356, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2223)
[0000][PE] mean and std.dev: (583.33, 497.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.57, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1249, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (1238.63, 584.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 408.494 CPU sec, 89.062 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517643, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 435, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3403)
[0000][PE] mean and std.dev: (877.11, 789.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.53, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (555, 1018, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3147)
[0000][PE] mean and std.dev: (1023.86, 483.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 416.368 CPU sec, 98.636 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518110, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 1107, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (969.74, 839.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.19, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1191, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (1398.65, 625.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 420.876 CPU sec, 101.272 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518505, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 323, 777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1975)
[0000][PE] mean and std.dev: (370.42, 298.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1503, 2875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6365)
[0000][PE] mean and std.dev: (1941.08, 1503.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 420.817 CPU sec, 93.270 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518359, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 457, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (754.85, 680.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1328, 1909, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4850)
[0000][PE] mean and std.dev: (1869.45, 848.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6024)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 421.613 CPU sec, 94.496 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518004, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 694, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (893.18, 779.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 418.987 CPU sec, 96.926 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205878
	[0000][ M::kt_pipeline] read 1205878 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518184, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 683, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3285)
[0000][PE] mean and std.dev: (836.24, 712.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1295, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6032)
[0000][PE] mean and std.dev: (1659.47, 1037.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 418.629 CPU sec, 87.445 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205878
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518072, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 394, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (715.83, 757.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.56, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1340, 2946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6964)
[0000][PE] mean and std.dev: (1690.58, 1074.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205878 reads in 424.134 CPU sec, 81.900 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518527, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 1020, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3601)
[0000][PE] mean and std.dev: (1060.00, 809.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.42, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1255, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3508)
[0000][PE] mean and std.dev: (1217.86, 574.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 420.442 CPU sec, 87.535 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518999, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 497, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3205)
[0000][PE] mean and std.dev: (789.88, 754.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.01)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1484, 1969, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4043)
[0000][PE] mean and std.dev: (1899.06, 804.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 412.671 CPU sec, 85.648 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518763, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 772, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4704)
[0000][PE] mean and std.dev: (1101.47, 1039.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1229, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (24, 2444)
[0000][PE] mean and std.dev: (1140.24, 282.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 425.700 CPU sec, 98.371 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518234, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 391, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (763.09, 804.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1599, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3616)
[0000][PE] mean and std.dev: (1372.79, 695.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 419.860 CPU sec, 91.695 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518083, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 339, 732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1854)
[0000][PE] mean and std.dev: (448.65, 410.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.65, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1420, 1756, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (210, 3235)
[0000][PE] mean and std.dev: (1549.60, 366.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 422.244 CPU sec, 82.439 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518325, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 798, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2978)
[0000][PE] mean and std.dev: (841.20, 623.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 110.88)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1256, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (1236.67, 446.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 426.621 CPU sec, 94.435 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518133, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 392, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (921.88, 1025.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.26, 110.96)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1369, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5090)
[0000][PE] mean and std.dev: (1350.82, 869.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 422.755 CPU sec, 90.640 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518172, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 641, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (1113.50, 1202.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 1198, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2791)
[0000][PE] mean and std.dev: (1040.11, 492.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 417.804 CPU sec, 84.444 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518029, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 911, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5730)
[0000][PE] mean and std.dev: (1103.19, 1018.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (2317, 3373, 4304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8278)
[0000][PE] mean and std.dev: (3267.06, 1735.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 419.550 CPU sec, 87.731 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518093, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 679, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4864)
[0000][PE] mean and std.dev: (937.00, 846.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 110.95)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 1242, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4860)
[0000][PE] mean and std.dev: (1404.33, 996.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 426.542 CPU sec, 97.831 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518335, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 518, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (854.65, 871.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.38, 111.01)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 409.976 CPU sec, 77.105 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518408, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 432, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (734.17, 679.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1203, 3007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7461)
[0000][PE] mean and std.dev: (1851.36, 1445.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 415.665 CPU sec, 82.273 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518376, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 381, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2368)
[0000][PE] mean and std.dev: (558.93, 436.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1523, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5005)
[0000][PE] mean and std.dev: (1544.94, 719.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 412.825 CPU sec, 84.782 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518502, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 836, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4500)
[0000][PE] mean and std.dev: (994.08, 789.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.24, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 1555, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3693)
[0000][PE] mean and std.dev: (1634.53, 901.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 414.932 CPU sec, 77.178 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518515, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 634, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2635)
[0000][PE] mean and std.dev: (624.56, 412.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.31, 111.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1251, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4775)
[0000][PE] mean and std.dev: (1447.67, 636.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 414.099 CPU sec, 76.097 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518446, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 702, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2530)
[0000][PE] mean and std.dev: (652.78, 419.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.53, 111.45)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1368, 2810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6072)
[0000][PE] mean and std.dev: (1916.55, 1152.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 422.784 CPU sec, 94.738 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517781, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 451, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5422)
[0000][PE] mean and std.dev: (876.82, 927.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1772, 2537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5853)
[0000][PE] mean and std.dev: (1984.35, 1399.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 423.026 CPU sec, 86.771 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518119, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (429, 1182, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4833)
[0000][PE] mean and std.dev: (1202.70, 915.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.73, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1379, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4697)
[0000][PE] mean and std.dev: (1360.16, 872.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 420.728 CPU sec, 80.613 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518357, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 400, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1837)
[0000][PE] mean and std.dev: (583.61, 456.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.32, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1316, 2868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6448)
[0000][PE] mean and std.dev: (1810.74, 1284.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 424.051 CPU sec, 96.437 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518788, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 510, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2782)
[0000][PE] mean and std.dev: (644.07, 524.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.70, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1210, 3428, 4768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11884)
[0000][PE] mean and std.dev: (3623.60, 2679.43)
[0000][PE] low and high boundaries for proper pairs: (1, 15442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 419.444 CPU sec, 85.747 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517991, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 413, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4305)
[0000][PE] mean and std.dev: (847.59, 798.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1933, 3894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10036)
[0000][PE] mean and std.dev: (2732.83, 2583.57)
[0000][PE] low and high boundaries for proper pairs: (1, 13107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 415.757 CPU sec, 94.030 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517935, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 873, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4178)
[0000][PE] mean and std.dev: (985.74, 914.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.38, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1287, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (125, 2705)
[0000][PE] mean and std.dev: (1240.50, 477.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 422.446 CPU sec, 92.618 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518540, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 470, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (815.72, 762.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 846)
[0000][PE] mean and std.dev: (482.81, 111.42)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1469, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4303)
[0000][PE] mean and std.dev: (1534.92, 983.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 422.601 CPU sec, 94.496 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518257, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 531, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3031)
[0000][PE] mean and std.dev: (678.81, 527.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.53, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1071, 2561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6135)
[0000][PE] mean and std.dev: (1655.79, 1366.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 422.607 CPU sec, 91.773 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518237, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 360, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2797)
[0000][PE] mean and std.dev: (587.39, 553.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.57, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 415.270 CPU sec, 90.855 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518180, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 481, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2259)
[0000][PE] mean and std.dev: (592.73, 504.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.17, 110.77)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1454, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4058)
[0000][PE] mean and std.dev: (1193.67, 551.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 418.973 CPU sec, 96.245 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518444, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 918, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (971.65, 846.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1535, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5561)
[0000][PE] mean and std.dev: (1749.65, 1198.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 413.910 CPU sec, 85.803 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518666, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 762, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3913)
[0000][PE] mean and std.dev: (897.23, 841.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1795, 4583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11551)
[0000][PE] mean and std.dev: (2293.50, 1664.55)
[0000][PE] low and high boundaries for proper pairs: (1, 15035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 420.380 CPU sec, 84.026 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518583, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 594, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (839.57, 703.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1200, 1735, 2674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5622)
[0000][PE] mean and std.dev: (1915.50, 1272.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 422.568 CPU sec, 97.904 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518360, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 919, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (884.19, 643.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.40)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1479, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5778)
[0000][PE] mean and std.dev: (1755.31, 1139.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 419.682 CPU sec, 88.214 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518225, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 589, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4327)
[0000][PE] mean and std.dev: (895.42, 944.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.00)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1423, 2274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4632)
[0000][PE] mean and std.dev: (1562.00, 751.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 416.334 CPU sec, 93.105 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517856, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 326, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3275)
[0000][PE] mean and std.dev: (662.80, 744.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1599, 3766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9034)
[0000][PE] mean and std.dev: (2380.18, 1963.25)
[0000][PE] low and high boundaries for proper pairs: (1, 11668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 420.893 CPU sec, 91.108 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518125, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 325, 557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1287)
[0000][PE] mean and std.dev: (310.47, 169.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.59, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1408, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2868)
[0000][PE] mean and std.dev: (1244.09, 289.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 410.601 CPU sec, 88.693 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 517945, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 533, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3483)
[0000][PE] mean and std.dev: (736.95, 671.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1696, 2730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5966)
[0000][PE] mean and std.dev: (1764.47, 921.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 413.591 CPU sec, 86.473 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518298, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 385, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (746.75, 718.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.29, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1180, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5300)
[0000][PE] mean and std.dev: (1422.25, 687.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 415.260 CPU sec, 96.581 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518919, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 542, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3026)
[0000][PE] mean and std.dev: (727.25, 637.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.65, 111.51)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1554, 2814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6318)
[0000][PE] mean and std.dev: (2237.94, 1874.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 413.899 CPU sec, 94.795 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518274, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 427, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2778)
[0000][PE] mean and std.dev: (673.67, 641.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1354, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4305)
[0000][PE] mean and std.dev: (1315.41, 706.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 417.055 CPU sec, 93.098 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518148, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 681, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (845.22, 705.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 110.94)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1179, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4286)
[0000][PE] mean and std.dev: (1322.05, 886.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 415.184 CPU sec, 85.107 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205914
	[0000][ M::kt_pipeline] read 1205914 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518214, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 792, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3853)
[0000][PE] mean and std.dev: (946.09, 776.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1241, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4013)
[0000][PE] mean and std.dev: (1475.90, 927.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 411.818 CPU sec, 75.703 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205914
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518890, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (617, 1056, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4508)
[0000][PE] mean and std.dev: (1245.35, 948.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 2086, 2771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6043)
[0000][PE] mean and std.dev: (2239.71, 1528.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205914 reads in 416.117 CPU sec, 95.684 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518575, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 415, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5670)
[0000][PE] mean and std.dev: (1242.00, 1347.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7474)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.41, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1673, 2691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6025)
[0000][PE] mean and std.dev: (1800.53, 958.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 411.036 CPU sec, 87.204 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518241, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 494, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (820.44, 757.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1710, 3485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8479)
[0000][PE] mean and std.dev: (2172.00, 1689.02)
[0000][PE] low and high boundaries for proper pairs: (1, 10976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 415.536 CPU sec, 87.594 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518163, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 721, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4833)
[0000][PE] mean and std.dev: (1106.67, 1095.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.30, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1368, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4121)
[0000][PE] mean and std.dev: (1386.83, 693.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 411.683 CPU sec, 84.594 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518499, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 374, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4947)
[0000][PE] mean and std.dev: (837.48, 805.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.38, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1945, 3523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8517)
[0000][PE] mean and std.dev: (2056.56, 1333.98)
[0000][PE] low and high boundaries for proper pairs: (1, 11014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 414.190 CPU sec, 92.412 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517835, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 468, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (621.03, 547.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.73, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1301, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4438)
[0000][PE] mean and std.dev: (1583.16, 886.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 412.629 CPU sec, 93.591 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205860
	[0000][ M::kt_pipeline] read 1205860 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518431, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 541, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4405)
[0000][PE] mean and std.dev: (870.59, 880.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1495, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (1360.16, 335.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 415.637 CPU sec, 95.798 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205860
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518166, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 349, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4206)
[0000][PE] mean and std.dev: (754.38, 779.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.28, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 2011, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1685.54, 705.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205860 reads in 416.059 CPU sec, 91.020 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518164, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 779, 3073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8415)
[0000][PE] mean and std.dev: (1403.00, 1414.48)
[0000][PE] low and high boundaries for proper pairs: (1, 11086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.62, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1257, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (1316.91, 644.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 417.502 CPU sec, 95.390 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518330, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 633, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3345)
[0000][PE] mean and std.dev: (748.89, 570.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.33, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1410, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5273)
[0000][PE] mean and std.dev: (1469.21, 868.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 414.840 CPU sec, 89.916 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518025, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 798, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5340)
[0000][PE] mean and std.dev: (1082.23, 1317.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.68, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1307, 1797, 3776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8714)
[0000][PE] mean and std.dev: (2770.71, 2241.73)
[0000][PE] low and high boundaries for proper pairs: (1, 11738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 419.279 CPU sec, 92.581 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518220, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 434, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2786)
[0000][PE] mean and std.dev: (651.88, 619.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.56, 111.44)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1251, 3891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9685)
[0000][PE] mean and std.dev: (2330.18, 2185.66)
[0000][PE] low and high boundaries for proper pairs: (1, 12582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 419.636 CPU sec, 93.425 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205844
	[0000][ M::kt_pipeline] read 1205844 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518384, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 414, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (655.28, 586.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.72, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1322, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (1246.18, 573.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 412.776 CPU sec, 88.225 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205844
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518309, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 370, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3933)
[0000][PE] mean and std.dev: (837.88, 815.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.64, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1237, 2028, 2991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6499)
[0000][PE] mean and std.dev: (1820.88, 873.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205844 reads in 418.466 CPU sec, 90.944 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518355, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 1171, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6644)
[0000][PE] mean and std.dev: (1346.46, 1352.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1408, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4447)
[0000][PE] mean and std.dev: (1473.00, 886.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 414.900 CPU sec, 89.329 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518553, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (619, 1154, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4195)
[0000][PE] mean and std.dev: (1143.62, 638.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.75, 111.41)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1366, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4967)
[0000][PE] mean and std.dev: (1536.00, 764.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 414.950 CPU sec, 85.757 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518309, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 902, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4900)
[0000][PE] mean and std.dev: (941.50, 775.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.34, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1650, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (1515.08, 1018.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 416.064 CPU sec, 91.133 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518030, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 348, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1178)
[0000][PE] mean and std.dev: (329.10, 228.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.13, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1457, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5408)
[0000][PE] mean and std.dev: (1406.73, 958.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 419.977 CPU sec, 93.652 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205890
	[0000][ M::kt_pipeline] read 1205890 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518486, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 813, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (887.27, 684.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.64, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1359, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4695)
[0000][PE] mean and std.dev: (1460.08, 1092.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 414.635 CPU sec, 86.502 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205890
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518150, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 354, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2628)
[0000][PE] mean and std.dev: (482.73, 421.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.25, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 1749, 2915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6119)
[0000][PE] mean and std.dev: (1915.57, 1085.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205890 reads in 424.580 CPU sec, 98.260 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518325, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 719, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (765.65, 683.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.41)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1351, 2668, 3492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7774)
[0000][PE] mean and std.dev: (2329.42, 1298.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 416.778 CPU sec, 101.186 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518246, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 506, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (772.50, 605.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.22, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (606, 1392, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5466)
[0000][PE] mean and std.dev: (1661.04, 1345.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 412.621 CPU sec, 85.570 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518160, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 921, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4015)
[0000][PE] mean and std.dev: (973.00, 679.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.75, 111.02)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1061, 2407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5495)
[0000][PE] mean and std.dev: (1447.88, 874.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 415.256 CPU sec, 89.870 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517874, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 861, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (752.18, 515.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.76, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1363, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (1544.08, 705.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 415.176 CPU sec, 100.217 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518544, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 343, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (888.28, 973.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1408, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3975)
[0000][PE] mean and std.dev: (1351.10, 640.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 414.828 CPU sec, 95.477 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518393, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 332, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2799)
[0000][PE] mean and std.dev: (564.29, 590.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.56, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1334, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (1506.00, 800.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 417.688 CPU sec, 93.989 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518584, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 774, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5476)
[0000][PE] mean and std.dev: (1028.09, 975.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.72, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1383, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3112)
[0000][PE] mean and std.dev: (1270.71, 472.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 418.652 CPU sec, 99.237 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517913, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 433, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6201)
[0000][PE] mean and std.dev: (1435.80, 1714.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1141, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5627)
[0000][PE] mean and std.dev: (1633.73, 1490.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 418.768 CPU sec, 96.744 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518081, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 485, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (975.62, 961.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1431, 1811, 3542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7764)
[0000][PE] mean and std.dev: (2572.70, 1623.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 417.669 CPU sec, 95.194 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518161, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 446, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2127)
[0000][PE] mean and std.dev: (591.27, 473.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.35, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1777, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5898)
[0000][PE] mean and std.dev: (1835.94, 1213.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 416.473 CPU sec, 92.820 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518654, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (775, 1113, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6592)
[0000][PE] mean and std.dev: (1659.00, 1570.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 110.84)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (427, 1617, 2944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7978)
[0000][PE] mean and std.dev: (1895.50, 1616.37)
[0000][PE] low and high boundaries for proper pairs: (1, 10495)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1370, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4189)
[0000][PE] mean and std.dev: (1487.50, 881.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 415.788 CPU sec, 87.636 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518506, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 332, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (633.48, 726.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.02)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1470, 1899, 3818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8514)
[0000][PE] mean and std.dev: (2070.83, 1046.37)
[0000][PE] low and high boundaries for proper pairs: (1, 10862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 412.465 CPU sec, 103.628 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518313, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 800, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (843.56, 720.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1040, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4332)
[0000][PE] mean and std.dev: (1164.32, 710.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 415.545 CPU sec, 96.148 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518116, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 415, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2841)
[0000][PE] mean and std.dev: (787.53, 818.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.27, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1177, 2846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6718)
[0000][PE] mean and std.dev: (1763.92, 1533.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 415.405 CPU sec, 85.994 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518634, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 547, 2466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6710)
[0000][PE] mean and std.dev: (1105.24, 1028.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.67, 110.89)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1338, 1937, 3506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7842)
[0000][PE] mean and std.dev: (2663.82, 1834.64)
[0000][PE] low and high boundaries for proper pairs: (1, 10010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 413.987 CPU sec, 90.092 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518446, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 586, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (895.08, 723.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.49, 110.88)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1299, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (1226.90, 636.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 407.764 CPU sec, 91.534 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518730, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 371, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3320)
[0000][PE] mean and std.dev: (738.29, 768.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.70, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1235, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (226, 2226)
[0000][PE] mean and std.dev: (1147.75, 300.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 411.923 CPU sec, 82.624 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205884
	[0000][ M::kt_pipeline] read 1205884 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518151, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 375, 866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2080)
[0000][PE] mean and std.dev: (593.88, 530.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.30, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1406, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (1337.75, 368.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 416.113 CPU sec, 86.059 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205884
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518564, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 572, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3812)
[0000][PE] mean and std.dev: (818.70, 736.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1286, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5072)
[0000][PE] mean and std.dev: (1311.79, 792.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205884 reads in 415.596 CPU sec, 98.745 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518563, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 1044, 2764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7720)
[0000][PE] mean and std.dev: (1595.39, 1885.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1517, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4027)
[0000][PE] mean and std.dev: (1401.56, 818.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 411.100 CPU sec, 82.622 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517996, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 921, 2177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5771)
[0000][PE] mean and std.dev: (1287.00, 1250.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.71, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1097, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5149)
[0000][PE] mean and std.dev: (1339.15, 1001.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 415.058 CPU sec, 93.237 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518160, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 441, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3062)
[0000][PE] mean and std.dev: (695.48, 518.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1256, 1961, 3227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7169)
[0000][PE] mean and std.dev: (2267.43, 1386.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 416.421 CPU sec, 87.001 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518507, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 404, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (588.97, 499.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.02)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1109, 3337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8469)
[0000][PE] mean and std.dev: (2011.81, 1632.27)
[0000][PE] low and high boundaries for proper pairs: (1, 11035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 407.753 CPU sec, 64.472 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 518768, 9, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 459, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2474)
[0000][PE] mean and std.dev: (601.24, 514.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.64, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1799, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5659)
[0000][PE] mean and std.dev: (1790.45, 1047.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 407.301 CPU sec, 60.759 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518339, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 432, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3285)
[0000][PE] mean and std.dev: (728.74, 598.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1404, 3510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8208)
[0000][PE] mean and std.dev: (2329.18, 2019.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 413.831 CPU sec, 60.217 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518137, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 533, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (666.39, 474.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.67, 110.98)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1583, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (1577.39, 682.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 417.087 CPU sec, 77.740 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518163, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 759, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (838.31, 660.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.32, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 2177, 3817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9441)
[0000][PE] mean and std.dev: (2749.57, 2193.40)
[0000][PE] low and high boundaries for proper pairs: (1, 12253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 415.324 CPU sec, 67.152 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518278, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 581, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4020)
[0000][PE] mean and std.dev: (1015.46, 1031.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.49, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1711, 2916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6256)
[0000][PE] mean and std.dev: (1847.24, 923.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7926)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 412.178 CPU sec, 69.474 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518350, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 717, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3245)
[0000][PE] mean and std.dev: (736.82, 564.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.52, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1164, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (1141.00, 429.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 409.274 CPU sec, 67.506 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518354, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 423, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4697)
[0000][PE] mean and std.dev: (837.81, 852.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1343, 2611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5595)
[0000][PE] mean and std.dev: (1641.62, 1020.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 403.694 CPU sec, 74.328 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518722, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 884, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4058)
[0000][PE] mean and std.dev: (1054.91, 881.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.55, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 2172, 3574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8506)
[0000][PE] mean and std.dev: (2196.79, 1385.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 408.287 CPU sec, 66.522 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518104, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 436, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2777)
[0000][PE] mean and std.dev: (546.40, 506.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 110.99)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1339, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4835)
[0000][PE] mean and std.dev: (1670.70, 972.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 403.735 CPU sec, 56.621 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518397, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 410, 785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1899)
[0000][PE] mean and std.dev: (508.50, 351.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.42, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1557, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (1555.54, 779.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 402.287 CPU sec, 67.343 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518431, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 680, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (788.71, 649.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1231, 2781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6639)
[0000][PE] mean and std.dev: (1566.33, 1148.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 396.349 CPU sec, 67.975 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518556, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 785, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (850.22, 733.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1100, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4864)
[0000][PE] mean and std.dev: (1267.50, 795.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 404.499 CPU sec, 73.061 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517950, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 379, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3062)
[0000][PE] mean and std.dev: (649.75, 604.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 393.450 CPU sec, 63.131 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518192, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 595, 2367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6449)
[0000][PE] mean and std.dev: (1535.83, 1767.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 110.99)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1529, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4516)
[0000][PE] mean and std.dev: (1311.93, 558.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 399.631 CPU sec, 80.872 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518420, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 423, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4527)
[0000][PE] mean and std.dev: (1078.29, 1171.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.48, 110.83)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1455, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5814)
[0000][PE] mean and std.dev: (1810.35, 1367.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 407.218 CPU sec, 61.992 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518307, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (471, 998, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4410)
[0000][PE] mean and std.dev: (1211.03, 1060.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1245, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2888)
[0000][PE] mean and std.dev: (1069.71, 484.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 397.868 CPU sec, 72.158 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518249, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 318, 714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1628)
[0000][PE] mean and std.dev: (454.50, 378.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.68, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1149, 2903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6979)
[0000][PE] mean and std.dev: (1982.07, 1852.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 395.300 CPU sec, 66.634 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518538, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 866, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5326)
[0000][PE] mean and std.dev: (1073.89, 946.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.73, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1176, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (1251.89, 528.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 413.793 CPU sec, 83.714 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517847, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 350, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2526)
[0000][PE] mean and std.dev: (499.73, 474.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1650, 2387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5323)
[0000][PE] mean and std.dev: (1584.94, 794.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 408.191 CPU sec, 72.857 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518106, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 760, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4620)
[0000][PE] mean and std.dev: (958.26, 890.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.52, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 1291, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4069)
[0000][PE] mean and std.dev: (1351.36, 958.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 396.510 CPU sec, 74.608 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518324, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 508, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (691.84, 560.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.64, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1150, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5220)
[0000][PE] mean and std.dev: (1315.89, 925.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 398.373 CPU sec, 72.078 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517807, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 1079, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3693)
[0000][PE] mean and std.dev: (1036.24, 736.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.41, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1380, 2851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7039)
[0000][PE] mean and std.dev: (1834.39, 1587.87)
[0000][PE] low and high boundaries for proper pairs: (1, 9133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 402.614 CPU sec, 84.373 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518542, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 766, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3440)
[0000][PE] mean and std.dev: (757.30, 608.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1760, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4673)
[0000][PE] mean and std.dev: (1886.30, 669.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 398.507 CPU sec, 71.077 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518252, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 403, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2619)
[0000][PE] mean and std.dev: (645.85, 595.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.91, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1331, 3457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8311)
[0000][PE] mean and std.dev: (1879.83, 1190.53)
[0000][PE] low and high boundaries for proper pairs: (1, 10738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 399.033 CPU sec, 77.588 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518547, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 452, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3899)
[0000][PE] mean and std.dev: (807.88, 886.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.23, 110.73)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (545, 1288, 3627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9791)
[0000][PE] mean and std.dev: (2170.70, 2436.00)
[0000][PE] low and high boundaries for proper pairs: (1, 12873)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1212, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5107)
[0000][PE] mean and std.dev: (1518.00, 804.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 396.718 CPU sec, 68.296 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518308, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 416, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3782)
[0000][PE] mean and std.dev: (822.84, 708.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1496, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4264)
[0000][PE] mean and std.dev: (1661.83, 904.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 394.359 CPU sec, 63.197 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518078, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 423, 645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1611)
[0000][PE] mean and std.dev: (410.70, 303.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1321, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (1462.91, 727.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 407.123 CPU sec, 75.936 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518619, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 386, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2644)
[0000][PE] mean and std.dev: (736.58, 773.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.52)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1375, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4844)
[0000][PE] mean and std.dev: (1715.44, 958.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 400.542 CPU sec, 78.569 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518334, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 474, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3559)
[0000][PE] mean and std.dev: (648.44, 503.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1445, 1953, 2603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4919)
[0000][PE] mean and std.dev: (2176.33, 1003.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 406.352 CPU sec, 86.467 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517892, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 400, 898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2172)
[0000][PE] mean and std.dev: (478.00, 351.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.87, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1556, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3616)
[0000][PE] mean and std.dev: (1381.70, 539.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 399.358 CPU sec, 86.859 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518864, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 337, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2879)
[0000][PE] mean and std.dev: (615.84, 601.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.29, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 2242, 2582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5366)
[0000][PE] mean and std.dev: (1663.86, 614.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 405.335 CPU sec, 83.399 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518520, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1421, 2464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6640)
[0000][PE] mean and std.dev: (1232.93, 1120.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.56, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1540, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (1545.10, 885.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 395.319 CPU sec, 72.420 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518189, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 359, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2803)
[0000][PE] mean and std.dev: (720.00, 708.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 398.435 CPU sec, 73.205 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518637, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 1166, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5315)
[0000][PE] mean and std.dev: (1101.05, 951.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 2257, 3147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6943)
[0000][PE] mean and std.dev: (2603.83, 1643.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 392.036 CPU sec, 71.305 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518307, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 750, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (887.26, 619.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1838, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4420)
[0000][PE] mean and std.dev: (1687.43, 877.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 391.909 CPU sec, 70.639 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518435, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 378, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3626)
[0000][PE] mean and std.dev: (836.74, 872.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1483, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4228)
[0000][PE] mean and std.dev: (1521.29, 871.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 395.849 CPU sec, 75.701 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518092, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 895, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4481)
[0000][PE] mean and std.dev: (1081.30, 1028.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.16, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1112, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2926)
[0000][PE] mean and std.dev: (1228.75, 493.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 394.865 CPU sec, 74.321 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518288, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 786, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (966.25, 893.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 110.99)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1510, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4069)
[0000][PE] mean and std.dev: (1423.45, 592.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 386.043 CPU sec, 61.016 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518612, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 519, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (848.63, 1034.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5215)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.23, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1342, 2242, 3979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9253)
[0000][PE] mean and std.dev: (2824.45, 2413.58)
[0000][PE] low and high boundaries for proper pairs: (1, 12479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 401.918 CPU sec, 76.022 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518568, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 533, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (836.35, 758.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1631, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5223)
[0000][PE] mean and std.dev: (1836.27, 1078.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 405.803 CPU sec, 77.310 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518304, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 974, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (1071.75, 850.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.91, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1465, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4722)
[0000][PE] mean and std.dev: (1424.00, 580.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 400.955 CPU sec, 78.679 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518371, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 570, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (616.94, 462.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.16, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 1236, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4758)
[0000][PE] mean and std.dev: (1479.00, 733.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 394.424 CPU sec, 71.627 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518197, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 881, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4857)
[0000][PE] mean and std.dev: (1129.54, 1119.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 401.211 CPU sec, 82.491 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518330, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 341, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (751.50, 759.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3974)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.21, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1527, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (1514.10, 488.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 393.707 CPU sec, 83.219 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518239, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 369, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3208)
[0000][PE] mean and std.dev: (790.79, 830.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.56, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1250, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3154)
[0000][PE] mean and std.dev: (1298.33, 645.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 395.679 CPU sec, 74.573 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518286, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (504, 885, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (916.07, 529.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1640, 4141, 7416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18968)
[0000][PE] mean and std.dev: (4251.10, 2873.11)
[0000][PE] low and high boundaries for proper pairs: (1, 24744)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1595, 2744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6002)
[0000][PE] mean and std.dev: (1501.64, 552.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 393.560 CPU sec, 74.418 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517885, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 460, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2157)
[0000][PE] mean and std.dev: (599.42, 410.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1187, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5347)
[0000][PE] mean and std.dev: (1660.83, 1155.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 398.035 CPU sec, 74.283 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518637, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 439, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2474)
[0000][PE] mean and std.dev: (679.92, 651.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.60, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1168, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2719)
[0000][PE] mean and std.dev: (1119.67, 522.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 392.591 CPU sec, 67.472 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518373, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 821, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (871.58, 650.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1610, 2641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5911)
[0000][PE] mean and std.dev: (1880.04, 1226.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 399.712 CPU sec, 90.212 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518669, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 510, 870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2014)
[0000][PE] mean and std.dev: (472.32, 297.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1096, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (1262.67, 535.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 393.577 CPU sec, 84.388 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517905, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 885, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5799)
[0000][PE] mean and std.dev: (1147.44, 953.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.22, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1235, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4794)
[0000][PE] mean and std.dev: (1489.47, 690.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 392.453 CPU sec, 87.466 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518270, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 376, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1934)
[0000][PE] mean and std.dev: (534.10, 444.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1338, 1731, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (1818.29, 838.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 392.731 CPU sec, 80.239 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518075, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 759, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4163)
[0000][PE] mean and std.dev: (830.71, 837.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.23, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 997, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (1280.31, 835.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 394.949 CPU sec, 94.613 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517824, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 341, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2436)
[0000][PE] mean and std.dev: (360.30, 299.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.24, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1211, 2896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6920)
[0000][PE] mean and std.dev: (1662.13, 1478.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 419.319 CPU sec, 82.228 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205842
	[0000][ M::kt_pipeline] read 1205842 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518438, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 736, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5952)
[0000][PE] mean and std.dev: (1011.33, 878.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.69, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1535, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5995)
[0000][PE] mean and std.dev: (1661.24, 1093.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 398.635 CPU sec, 80.375 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205842
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517901, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 987, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3764)
[0000][PE] mean and std.dev: (1001.50, 701.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.86, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1123, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3731)
[0000][PE] mean and std.dev: (1212.05, 661.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205842 reads in 416.603 CPU sec, 89.460 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518423, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 913, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5205)
[0000][PE] mean and std.dev: (1037.40, 902.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.02)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1337, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (1258.69, 718.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 390.471 CPU sec, 61.199 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518549, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 790, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5603)
[0000][PE] mean and std.dev: (993.32, 992.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 2148, 2600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5832)
[0000][PE] mean and std.dev: (1791.29, 1077.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 391.151 CPU sec, 75.245 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518436, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 775, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4234)
[0000][PE] mean and std.dev: (1034.15, 955.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.72, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1347, 2433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5399)
[0000][PE] mean and std.dev: (1738.59, 1080.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 395.870 CPU sec, 79.670 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518092, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 857, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4155)
[0000][PE] mean and std.dev: (785.41, 596.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1579, 2579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5793)
[0000][PE] mean and std.dev: (1780.85, 1048.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 395.839 CPU sec, 87.912 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518578, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 350, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3202)
[0000][PE] mean and std.dev: (613.70, 663.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1881, 2752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6198)
[0000][PE] mean and std.dev: (1860.69, 1221.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 396.303 CPU sec, 82.200 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518526, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 1000, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5713)
[0000][PE] mean and std.dev: (1253.76, 1257.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1458, 2550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5634)
[0000][PE] mean and std.dev: (1672.22, 882.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 398.455 CPU sec, 86.949 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518427, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 855, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4442)
[0000][PE] mean and std.dev: (982.86, 892.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1444, 2073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1441.28, 693.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 394.603 CPU sec, 92.223 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518115, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 359, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2511)
[0000][PE] mean and std.dev: (452.97, 413.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.37, 110.93)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1283, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3197)
[0000][PE] mean and std.dev: (1352.00, 677.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 401.077 CPU sec, 78.908 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518031, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 394, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2490)
[0000][PE] mean and std.dev: (658.68, 586.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1367, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4164)
[0000][PE] mean and std.dev: (1537.31, 653.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 394.897 CPU sec, 81.045 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518155, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 753, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3560)
[0000][PE] mean and std.dev: (951.70, 888.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1175, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2737)
[0000][PE] mean and std.dev: (1182.92, 533.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 391.426 CPU sec, 80.231 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517980, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 442, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2681)
[0000][PE] mean and std.dev: (729.74, 686.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.89, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1560, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4400)
[0000][PE] mean and std.dev: (1433.07, 716.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 394.058 CPU sec, 83.107 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517866, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 889, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3562)
[0000][PE] mean and std.dev: (872.71, 817.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.32, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1312, 1535, 3010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6406)
[0000][PE] mean and std.dev: (2003.00, 1245.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 392.613 CPU sec, 81.887 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518196, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 1104, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4311)
[0000][PE] mean and std.dev: (1139.75, 938.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.76, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (589, 937, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5431)
[0000][PE] mean and std.dev: (1190.75, 912.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 395.406 CPU sec, 93.327 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518262, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 412, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (594.53, 526.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.77, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1259, 1547, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (1531.67, 613.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 396.388 CPU sec, 84.916 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518500, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 885, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4811)
[0000][PE] mean and std.dev: (984.63, 744.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.36, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1612, 4096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9948)
[0000][PE] mean and std.dev: (2996.81, 2738.33)
[0000][PE] low and high boundaries for proper pairs: (1, 13950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 406.439 CPU sec, 81.336 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517891, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 526, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5057)
[0000][PE] mean and std.dev: (1030.38, 1196.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.68, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1530, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1254.33, 581.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 412.786 CPU sec, 79.827 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518386, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 466, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4667)
[0000][PE] mean and std.dev: (897.36, 824.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.67, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1279, 1810, 2955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6307)
[0000][PE] mean and std.dev: (1902.44, 1062.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 400.941 CPU sec, 79.725 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518130, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 703, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (931.34, 778.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1825, 3370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8094)
[0000][PE] mean and std.dev: (2323.80, 1703.18)
[0000][PE] low and high boundaries for proper pairs: (1, 10456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 401.408 CPU sec, 69.499 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518694, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 894, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5104)
[0000][PE] mean and std.dev: (1306.67, 1263.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1134, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4613)
[0000][PE] mean and std.dev: (1451.47, 963.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 398.268 CPU sec, 87.058 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518408, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 541, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4508)
[0000][PE] mean and std.dev: (803.43, 715.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.19, 110.75)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1944, 3211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7571)
[0000][PE] mean and std.dev: (2152.31, 1363.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 403.721 CPU sec, 85.263 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518360, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 771, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (679.59, 460.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.53, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1394, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4289)
[0000][PE] mean and std.dev: (1290.93, 794.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 394.773 CPU sec, 71.651 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518703, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 754, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4046)
[0000][PE] mean and std.dev: (820.69, 736.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.33, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 1626, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (1638.09, 622.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 388.261 CPU sec, 66.272 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518212, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 949, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (863.30, 591.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.50, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1263, 1526, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (1606.60, 768.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 390.517 CPU sec, 72.015 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518732, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 813, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3244)
[0000][PE] mean and std.dev: (1065.00, 819.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1362, 2281, 2866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5874)
[0000][PE] mean and std.dev: (2365.64, 1247.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 392.430 CPU sec, 80.609 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518691, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 324, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3189)
[0000][PE] mean and std.dev: (694.52, 710.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.25, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1084, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (1293.28, 874.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 393.143 CPU sec, 79.496 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518200, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 423, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3468)
[0000][PE] mean and std.dev: (755.31, 816.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.93, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1191, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5147)
[0000][PE] mean and std.dev: (1344.29, 732.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 395.535 CPU sec, 78.823 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518423, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 411, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3211)
[0000][PE] mean and std.dev: (714.26, 557.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 1648, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (1602.56, 591.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 405.375 CPU sec, 78.537 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518544, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 640, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (784.19, 635.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.36, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1791, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4633)
[0000][PE] mean and std.dev: (1840.50, 814.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 391.197 CPU sec, 72.720 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518752, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 424, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (835.26, 803.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.69, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 871, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (283, 1428)
[0000][PE] mean and std.dev: (845.64, 163.86)
[0000][PE] low and high boundaries for proper pairs: (54, 1657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 389.726 CPU sec, 68.236 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517890, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 604, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5871)
[0000][PE] mean and std.dev: (1228.82, 1359.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.53, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1422, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (1332.68, 693.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 393.259 CPU sec, 76.107 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518497, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 1127, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5520)
[0000][PE] mean and std.dev: (1450.63, 1349.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1663, 3640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9276)
[0000][PE] mean and std.dev: (2476.12, 2196.02)
[0000][PE] low and high boundaries for proper pairs: (1, 12094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 396.271 CPU sec, 99.043 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 518063, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 560, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (731.95, 617.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1634, 4124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10236)
[0000][PE] mean and std.dev: (2237.29, 1529.16)
[0000][PE] low and high boundaries for proper pairs: (1, 13292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 393.224 CPU sec, 69.442 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518314, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 388, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4433)
[0000][PE] mean and std.dev: (856.41, 1007.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.56, 110.98)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1234, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3938)
[0000][PE] mean and std.dev: (1320.95, 690.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 392.633 CPU sec, 77.535 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518755, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 748, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (729.39, 667.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 111.02)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1259, 1826, 4053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9641)
[0000][PE] mean and std.dev: (2570.71, 1836.13)
[0000][PE] low and high boundaries for proper pairs: (1, 12435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 389.573 CPU sec, 71.522 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518348, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 1063, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3664)
[0000][PE] mean and std.dev: (1120.95, 912.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.30, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1300, 2566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5554)
[0000][PE] mean and std.dev: (1730.79, 1049.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 393.587 CPU sec, 72.542 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518283, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 780, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4794)
[0000][PE] mean and std.dev: (1118.33, 908.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.40, 110.81)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1746, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4639)
[0000][PE] mean and std.dev: (1627.20, 996.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 389.530 CPU sec, 73.241 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518708, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 594, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (720.89, 663.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.42, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1260, 1822, 3113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6819)
[0000][PE] mean and std.dev: (2077.90, 1205.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 391.932 CPU sec, 86.053 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518029, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 486, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (680.04, 461.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.73, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1262, 1411, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (1415.10, 440.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 394.046 CPU sec, 111.712 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518003, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 440, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (723.86, 680.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.65, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1875, 2034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4246)
[0000][PE] mean and std.dev: (1716.50, 800.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 390.010 CPU sec, 68.604 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517895, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 422, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3831)
[0000][PE] mean and std.dev: (719.70, 700.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1206, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4221)
[0000][PE] mean and std.dev: (1428.00, 778.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 392.202 CPU sec, 79.801 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518163, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 534, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (712.00, 655.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.69, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1066, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2706)
[0000][PE] mean and std.dev: (1121.75, 437.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 394.303 CPU sec, 77.588 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518414, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 415, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4762)
[0000][PE] mean and std.dev: (1046.90, 1292.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.69, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1512, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (1346.33, 735.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 390.519 CPU sec, 84.676 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518590, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 1260, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6623)
[0000][PE] mean and std.dev: (1462.10, 1454.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.29, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 2024, 2636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5482)
[0000][PE] mean and std.dev: (1926.81, 1060.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 396.290 CPU sec, 80.009 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519138, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 396, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2510)
[0000][PE] mean and std.dev: (686.81, 698.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.30, 110.95)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1212, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5091)
[0000][PE] mean and std.dev: (1345.11, 868.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 406.625 CPU sec, 71.410 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518588, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 476, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3407)
[0000][PE] mean and std.dev: (784.92, 726.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.18, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1741, 2525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5791)
[0000][PE] mean and std.dev: (1827.50, 1311.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 390.287 CPU sec, 72.961 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517852, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 583, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4332)
[0000][PE] mean and std.dev: (920.60, 910.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.29, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1712, 3530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8560)
[0000][PE] mean and std.dev: (2140.00, 1333.61)
[0000][PE] low and high boundaries for proper pairs: (1, 11075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 399.432 CPU sec, 80.799 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518638, 11, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 490, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5591)
[0000][PE] mean and std.dev: (995.62, 1206.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.26, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (320, 912, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (800.90, 656.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1433, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4610)
[0000][PE] mean and std.dev: (1334.50, 590.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 395.789 CPU sec, 91.504 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518390, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 642, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3881)
[0000][PE] mean and std.dev: (781.35, 615.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.26, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1506, 2790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6278)
[0000][PE] mean and std.dev: (1963.33, 1136.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 393.257 CPU sec, 73.861 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518619, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 797, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5374)
[0000][PE] mean and std.dev: (1062.89, 1227.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.77, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1413, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (1387.11, 830.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 407.335 CPU sec, 92.176 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518349, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 621, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (940.79, 900.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.38, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1624, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5482)
[0000][PE] mean and std.dev: (1723.76, 806.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 411.928 CPU sec, 86.345 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518243, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 386, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (685.83, 757.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.75, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1112, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2784)
[0000][PE] mean and std.dev: (1138.77, 357.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 394.396 CPU sec, 83.918 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517996, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 795, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4878)
[0000][PE] mean and std.dev: (877.87, 882.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1346, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (165, 2405)
[0000][PE] mean and std.dev: (1176.56, 383.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 397.021 CPU sec, 85.864 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518621, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 1005, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5250)
[0000][PE] mean and std.dev: (1148.96, 939.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.28, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1467, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4917)
[0000][PE] mean and std.dev: (1552.00, 775.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 390.088 CPU sec, 78.703 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518295, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 474, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4003)
[0000][PE] mean and std.dev: (854.71, 789.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1363, 1860, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4045)
[0000][PE] mean and std.dev: (1771.07, 717.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 392.224 CPU sec, 82.302 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518347, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 406, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4343)
[0000][PE] mean and std.dev: (929.92, 1037.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1307, 1587, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (565, 2420)
[0000][PE] mean and std.dev: (1373.78, 261.55)
[0000][PE] low and high boundaries for proper pairs: (194, 2791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 392.202 CPU sec, 86.507 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518462, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 344, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2851)
[0000][PE] mean and std.dev: (718.18, 780.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.27, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1206, 2800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6226)
[0000][PE] mean and std.dev: (1856.86, 1565.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 392.123 CPU sec, 75.655 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518208, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 441, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2140)
[0000][PE] mean and std.dev: (503.24, 387.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.42)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1335, 2670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6590)
[0000][PE] mean and std.dev: (1867.86, 1583.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 388.668 CPU sec, 70.118 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518016, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 407, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2881)
[0000][PE] mean and std.dev: (688.74, 677.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.41)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (608, 1524, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5675)
[0000][PE] mean and std.dev: (1557.89, 1125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 395.393 CPU sec, 72.394 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518644, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 604, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2816)
[0000][PE] mean and std.dev: (683.33, 498.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1407, 3435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8325)
[0000][PE] mean and std.dev: (2038.00, 1847.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 395.827 CPU sec, 82.007 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518395, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 531, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3166)
[0000][PE] mean and std.dev: (710.62, 657.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1499, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5359)
[0000][PE] mean and std.dev: (1689.05, 1197.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 397.235 CPU sec, 79.679 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518196, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 438, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (908.40, 937.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1292, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (1098.14, 451.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 389.059 CPU sec, 62.691 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518403, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 299, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2534)
[0000][PE] mean and std.dev: (504.71, 536.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1422, 2335, 3455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7521)
[0000][PE] mean and std.dev: (2295.79, 1448.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 388.315 CPU sec, 60.964 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518655, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 420, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5169)
[0000][PE] mean and std.dev: (986.04, 1098.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 110.92)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1427, 3346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8414)
[0000][PE] mean and std.dev: (2095.35, 1573.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 390.471 CPU sec, 71.778 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518402, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 409, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2655)
[0000][PE] mean and std.dev: (767.04, 721.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.55, 111.45)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1169, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4278)
[0000][PE] mean and std.dev: (1386.67, 881.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 395.575 CPU sec, 88.594 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518228, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 437, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5650)
[0000][PE] mean and std.dev: (948.86, 1053.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.44, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1571, 2778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6188)
[0000][PE] mean and std.dev: (1540.83, 825.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 399.971 CPU sec, 88.824 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518255, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 934, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4195)
[0000][PE] mean and std.dev: (1059.20, 930.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1572, 3011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7559)
[0000][PE] mean and std.dev: (1569.20, 1118.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 390.243 CPU sec, 76.071 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518632, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 350, 615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1387)
[0000][PE] mean and std.dev: (351.83, 212.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.44)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1120, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3520)
[0000][PE] mean and std.dev: (1151.20, 572.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 397.682 CPU sec, 81.345 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518665, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 395, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (776.66, 709.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.27, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1211, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (1430.95, 782.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 391.294 CPU sec, 70.804 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518438, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 594, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4422)
[0000][PE] mean and std.dev: (1165.58, 1206.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1770, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5455)
[0000][PE] mean and std.dev: (1819.00, 1107.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 388.541 CPU sec, 69.902 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518082, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 697, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6469)
[0000][PE] mean and std.dev: (1238.61, 1343.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.24, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1187, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (1165.75, 576.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 390.112 CPU sec, 73.156 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518091, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 707, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1017.79, 983.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.41, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1159, 2774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6240)
[0000][PE] mean and std.dev: (1760.00, 1250.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 400.378 CPU sec, 80.127 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518749, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 471, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3885)
[0000][PE] mean and std.dev: (831.73, 759.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.54, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1229, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (1244.75, 560.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 389.739 CPU sec, 82.921 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518494, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 501, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4954)
[0000][PE] mean and std.dev: (807.57, 952.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 110.98)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1571, 2701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6095)
[0000][PE] mean and std.dev: (1983.75, 1368.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 396.639 CPU sec, 82.702 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518101, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 352, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2748)
[0000][PE] mean and std.dev: (589.14, 547.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.32, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1526, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (1650.47, 647.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 393.414 CPU sec, 70.574 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518336, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 432, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (679.63, 830.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.18, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1291, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3119)
[0000][PE] mean and std.dev: (1372.24, 488.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 400.814 CPU sec, 76.066 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518109, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 750, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4582)
[0000][PE] mean and std.dev: (1144.79, 1052.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1186, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3659)
[0000][PE] mean and std.dev: (1361.21, 795.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 396.256 CPU sec, 91.169 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518224, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 501, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5004)
[0000][PE] mean and std.dev: (1066.74, 1073.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1484, 3688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9072)
[0000][PE] mean and std.dev: (2127.19, 1622.88)
[0000][PE] low and high boundaries for proper pairs: (1, 11764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 402.717 CPU sec, 82.464 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518196, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 501, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4189)
[0000][PE] mean and std.dev: (861.31, 810.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1264, 1586, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4048)
[0000][PE] mean and std.dev: (1630.21, 758.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 400.034 CPU sec, 85.000 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518105, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 677, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3811)
[0000][PE] mean and std.dev: (886.65, 843.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.17, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1214, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (1227.53, 551.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 391.532 CPU sec, 76.871 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518152, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1025, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3741)
[0000][PE] mean and std.dev: (926.79, 680.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 392.134 CPU sec, 75.853 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205862
	[0000][ M::kt_pipeline] read 1205862 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517814, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 776, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3173)
[0000][PE] mean and std.dev: (802.19, 623.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.80, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1276, 2010, 3521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8011)
[0000][PE] mean and std.dev: (2591.74, 1882.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 395.833 CPU sec, 92.245 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205862
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518222, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 828, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (1053.00, 1119.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1787, 2833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6037)
[0000][PE] mean and std.dev: (1855.73, 1135.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205862 reads in 389.851 CPU sec, 72.725 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518408, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 506, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4414)
[0000][PE] mean and std.dev: (983.74, 1097.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1898, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4444)
[0000][PE] mean and std.dev: (1766.21, 572.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 394.500 CPU sec, 105.878 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518339, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 746, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (790.89, 664.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.72, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1413, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4066)
[0000][PE] mean and std.dev: (1330.82, 603.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 390.474 CPU sec, 66.087 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518556, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 657, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3439)
[0000][PE] mean and std.dev: (742.88, 735.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.59, 111.50)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1592, 2933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6783)
[0000][PE] mean and std.dev: (1873.00, 1332.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 391.759 CPU sec, 68.685 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518416, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 622, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4541)
[0000][PE] mean and std.dev: (1067.87, 1020.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1338, 1773, 3099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6621)
[0000][PE] mean and std.dev: (2002.46, 1099.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 395.612 CPU sec, 76.782 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518363, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 299, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2731)
[0000][PE] mean and std.dev: (503.52, 466.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.33, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1183, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (72, 2547)
[0000][PE] mean and std.dev: (1203.19, 271.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 407.392 CPU sec, 86.445 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518399, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 334, 827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2085)
[0000][PE] mean and std.dev: (466.55, 384.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1608, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4999)
[0000][PE] mean and std.dev: (1889.07, 1009.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 408.552 CPU sec, 95.781 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518111, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 326, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2383)
[0000][PE] mean and std.dev: (432.76, 347.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.38, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1455, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (1546.06, 559.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 395.991 CPU sec, 70.510 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518431, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 641, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (961.77, 901.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.32, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1413, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4707)
[0000][PE] mean and std.dev: (1402.69, 814.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 390.213 CPU sec, 62.247 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518095, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 486, 816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1788)
[0000][PE] mean and std.dev: (571.07, 393.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.20, 110.81)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 1106, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2728)
[0000][PE] mean and std.dev: (1080.71, 570.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 406.692 CPU sec, 92.682 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518655, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 636, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4616)
[0000][PE] mean and std.dev: (924.20, 938.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.22, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1209, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4392)
[0000][PE] mean and std.dev: (1260.24, 813.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 394.349 CPU sec, 86.801 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518174, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 625, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5666)
[0000][PE] mean and std.dev: (1310.96, 1287.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.27, 110.88)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 1114, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (1095.10, 671.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 407.999 CPU sec, 97.613 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518176, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 907, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4567)
[0000][PE] mean and std.dev: (1014.09, 829.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.73, 110.93)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1325, 1578, 3185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6905)
[0000][PE] mean and std.dev: (2226.33, 1641.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 397.256 CPU sec, 92.417 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518454, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 517, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (633.92, 520.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.53, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1324, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4646)
[0000][PE] mean and std.dev: (1178.15, 524.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 395.496 CPU sec, 90.529 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518194, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 383, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (650.85, 711.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1448, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3812)
[0000][PE] mean and std.dev: (1490.62, 460.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 399.846 CPU sec, 91.180 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518584, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 486, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5665)
[0000][PE] mean and std.dev: (1121.64, 1083.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1416, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4410)
[0000][PE] mean and std.dev: (1188.64, 656.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 392.158 CPU sec, 81.945 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517623, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 370, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2435)
[0000][PE] mean and std.dev: (537.62, 445.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1841, 2505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5247)
[0000][PE] mean and std.dev: (1842.61, 766.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 392.436 CPU sec, 70.495 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518326, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 615, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3234)
[0000][PE] mean and std.dev: (717.70, 627.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.38, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1376, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (1262.53, 737.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 390.739 CPU sec, 79.363 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518318, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 548, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5474)
[0000][PE] mean and std.dev: (1086.39, 1155.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.01)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1430, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (1375.89, 583.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 389.504 CPU sec, 76.100 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518561, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 519, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4473)
[0000][PE] mean and std.dev: (987.81, 960.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.53, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 1128, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (1109.30, 498.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 405.791 CPU sec, 81.686 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517869, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 1227, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4948)
[0000][PE] mean and std.dev: (1169.86, 937.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.53, 110.96)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (500, 1604, 2539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6617)
[0000][PE] mean and std.dev: (1787.54, 1457.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 393.028 CPU sec, 78.035 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518257, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 433, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6182)
[0000][PE] mean and std.dev: (1009.70, 1170.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1442, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2839)
[0000][PE] mean and std.dev: (1302.00, 282.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 396.380 CPU sec, 91.785 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518360, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 783, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4863)
[0000][PE] mean and std.dev: (976.79, 828.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.65, 111.42)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1385, 2811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6205)
[0000][PE] mean and std.dev: (1707.79, 1341.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 392.748 CPU sec, 89.753 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518188, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 451, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2543)
[0000][PE] mean and std.dev: (615.91, 441.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.44, 110.98)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 1717, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5467)
[0000][PE] mean and std.dev: (1846.82, 966.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 390.956 CPU sec, 75.108 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517826, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 330, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 952)
[0000][PE] mean and std.dev: (278.11, 109.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1494, 3577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8917)
[0000][PE] mean and std.dev: (2615.15, 2349.39)
[0000][PE] low and high boundaries for proper pairs: (1, 12013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 393.622 CPU sec, 82.615 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518469, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 427, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2745)
[0000][PE] mean and std.dev: (688.55, 554.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1300, 2216, 3752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8656)
[0000][PE] mean and std.dev: (2414.36, 1646.78)
[0000][PE] low and high boundaries for proper pairs: (1, 11108)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 397.679 CPU sec, 90.364 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518378, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 678, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4641)
[0000][PE] mean and std.dev: (1174.52, 1209.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1579, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (1490.86, 703.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 399.306 CPU sec, 86.704 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518188, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 414, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4193)
[0000][PE] mean and std.dev: (859.77, 807.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1685, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5477)
[0000][PE] mean and std.dev: (1717.20, 1113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 393.123 CPU sec, 77.552 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518435, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 367, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (827.10, 900.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.27, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1277, 2673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6253)
[0000][PE] mean and std.dev: (1609.08, 870.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 393.876 CPU sec, 78.452 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518263, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 440, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (592.50, 505.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.29, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 1017, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2097)
[0000][PE] mean and std.dev: (858.87, 451.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 404.387 CPU sec, 83.026 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518422, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 415, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (651.73, 456.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1825, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6559)
[0000][PE] mean and std.dev: (1953.94, 1239.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8405)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 409.078 CPU sec, 81.489 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518022, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 436, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2657)
[0000][PE] mean and std.dev: (552.43, 465.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1491, 3223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7561)
[0000][PE] mean and std.dev: (2008.90, 1422.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 399.687 CPU sec, 88.659 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518377, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 423, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2921)
[0000][PE] mean and std.dev: (713.27, 660.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 110.99)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1771, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1817.26, 994.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5990)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 395.607 CPU sec, 76.812 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518043, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 445, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (693.12, 584.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.15, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1000, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3840)
[0000][PE] mean and std.dev: (1280.25, 699.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 396.342 CPU sec, 83.015 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518200, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 370, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2341)
[0000][PE] mean and std.dev: (526.36, 480.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1192, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2626)
[0000][PE] mean and std.dev: (1148.29, 556.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 395.168 CPU sec, 79.087 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205928
	[0000][ M::kt_pipeline] read 1205928 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518351, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 1172, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (1114.72, 893.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.25, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1396, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3397)
[0000][PE] mean and std.dev: (1266.24, 606.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 388.196 CPU sec, 62.707 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205928
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518186, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 570, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (786.09, 615.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.56, 110.96)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1210, 3015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7135)
[0000][PE] mean and std.dev: (1655.18, 1119.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205928 reads in 392.108 CPU sec, 69.395 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518279, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 888, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4589)
[0000][PE] mean and std.dev: (1113.14, 975.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.44)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1601, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3803)
[0000][PE] mean and std.dev: (1355.83, 697.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 395.300 CPU sec, 80.736 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518556, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 652, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4066)
[0000][PE] mean and std.dev: (962.15, 940.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1743, 2686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5728)
[0000][PE] mean and std.dev: (1969.71, 1409.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 396.276 CPU sec, 81.359 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518355, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 693, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6488)
[0000][PE] mean and std.dev: (1178.53, 1232.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.44, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1358, 2920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7346)
[0000][PE] mean and std.dev: (1588.67, 1128.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 390.195 CPU sec, 78.976 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518159, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 763, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3306)
[0000][PE] mean and std.dev: (898.52, 747.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 2333, 3967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9483)
[0000][PE] mean and std.dev: (2872.50, 2113.13)
[0000][PE] low and high boundaries for proper pairs: (1, 12241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 391.897 CPU sec, 82.266 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518241, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 458, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (809.71, 796.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.22, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1461, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2851)
[0000][PE] mean and std.dev: (1355.64, 603.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 394.366 CPU sec, 75.488 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518417, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 629, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (910.32, 770.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.41)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1465, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5515)
[0000][PE] mean and std.dev: (1662.50, 928.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 392.152 CPU sec, 74.776 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518171, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 658, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3006)
[0000][PE] mean and std.dev: (653.90, 499.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.44)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1408, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4079)
[0000][PE] mean and std.dev: (1396.48, 723.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 391.657 CPU sec, 65.375 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518450, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 341, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2046)
[0000][PE] mean and std.dev: (541.67, 421.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.58, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1242, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4815)
[0000][PE] mean and std.dev: (1595.50, 930.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 389.355 CPU sec, 74.919 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517935, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 486, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (744.93, 689.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.56, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 391.901 CPU sec, 75.728 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518753, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 447, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (805.62, 740.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1912, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5341)
[0000][PE] mean and std.dev: (1736.53, 935.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 394.255 CPU sec, 76.079 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518132, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 386, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (417.95, 281.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.12, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1716, 3407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8305)
[0000][PE] mean and std.dev: (1974.94, 1155.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 407.061 CPU sec, 86.654 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518312, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 594, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3024)
[0000][PE] mean and std.dev: (883.00, 816.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.79, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1356, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (1139.68, 738.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 404.445 CPU sec, 85.374 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518056, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (579, 990, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3624)
[0000][PE] mean and std.dev: (1040.08, 602.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.53, 111.47)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1271, 1666, 4383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10607)
[0000][PE] mean and std.dev: (2241.23, 1550.48)
[0000][PE] low and high boundaries for proper pairs: (1, 13719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 391.235 CPU sec, 63.674 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518675, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 696, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4801)
[0000][PE] mean and std.dev: (920.09, 831.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.69, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1088, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4192)
[0000][PE] mean and std.dev: (1420.40, 833.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 386.457 CPU sec, 54.055 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517724, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 1380, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5752)
[0000][PE] mean and std.dev: (1375.95, 1304.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.67, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1839, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (1612.86, 896.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 396.364 CPU sec, 68.973 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518101, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 641, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3211)
[0000][PE] mean and std.dev: (834.40, 699.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1321, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4791)
[0000][PE] mean and std.dev: (1376.41, 758.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 392.749 CPU sec, 68.729 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518214, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 318, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2370)
[0000][PE] mean and std.dev: (463.24, 490.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1399, 2938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6818)
[0000][PE] mean and std.dev: (1950.79, 1438.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 395.354 CPU sec, 74.226 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518184, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 718, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (677.32, 695.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.68, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1379, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (1185.53, 488.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 400.760 CPU sec, 63.383 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518120, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 791, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2400)
[0000][PE] mean and std.dev: (679.29, 536.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.84, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1426, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5347)
[0000][PE] mean and std.dev: (1666.57, 1216.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 397.289 CPU sec, 71.575 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205900
	[0000][ M::kt_pipeline] read 1205900 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518568, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 626, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (741.00, 601.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.47)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1381, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (1435.71, 820.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 392.283 CPU sec, 67.790 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205900
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517886, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 384, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2886)
[0000][PE] mean and std.dev: (759.12, 705.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.41, 110.95)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1408, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4829)
[0000][PE] mean and std.dev: (1731.17, 1032.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205900 reads in 407.140 CPU sec, 70.228 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518017, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 1159, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3969)
[0000][PE] mean and std.dev: (1032.07, 789.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.13, 110.93)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1115, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5194)
[0000][PE] mean and std.dev: (1519.61, 1003.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 399.177 CPU sec, 73.020 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517941, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 410, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2200)
[0000][PE] mean and std.dev: (572.35, 423.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.65, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1307, 3225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7795)
[0000][PE] mean and std.dev: (1958.26, 2030.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 390.104 CPU sec, 62.484 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517906, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 411, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4502)
[0000][PE] mean and std.dev: (900.96, 1028.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.28, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1329, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (1518.58, 677.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 392.479 CPU sec, 71.306 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518612, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 455, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (810.27, 896.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 1804, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (1635.75, 618.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 391.001 CPU sec, 68.991 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518107, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 400, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2553)
[0000][PE] mean and std.dev: (543.08, 422.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.55, 111.41)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1447, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4768)
[0000][PE] mean and std.dev: (1635.12, 921.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 405.543 CPU sec, 70.661 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205854
	[0000][ M::kt_pipeline] read 1205854 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518509, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 809, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (769.89, 584.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.70, 110.94)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1541, 2813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6083)
[0000][PE] mean and std.dev: (1872.52, 1051.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 393.184 CPU sec, 75.776 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205854
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518260, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 926, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3344)
[0000][PE] mean and std.dev: (702.53, 517.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205854 reads in 395.085 CPU sec, 77.533 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518385, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 422, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3612)
[0000][PE] mean and std.dev: (892.50, 940.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.36, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1458, 2502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5388)
[0000][PE] mean and std.dev: (1892.80, 1361.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 390.316 CPU sec, 74.859 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518035, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 647, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (833.71, 879.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1716, 2945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6745)
[0000][PE] mean and std.dev: (2029.12, 1460.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 392.856 CPU sec, 67.042 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518533, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 715, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4967)
[0000][PE] mean and std.dev: (1163.56, 1188.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.75, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1037, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5628)
[0000][PE] mean and std.dev: (1452.75, 915.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 404.167 CPU sec, 67.501 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518257, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 898, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3198)
[0000][PE] mean and std.dev: (830.29, 617.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1286, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4190)
[0000][PE] mean and std.dev: (1520.00, 753.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 396.074 CPU sec, 62.506 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518126, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 758, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (885.00, 894.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 110.90)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1129, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (518, 1833)
[0000][PE] mean and std.dev: (1014.44, 250.18)
[0000][PE] low and high boundaries for proper pairs: (14, 2096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 394.157 CPU sec, 72.254 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518485, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 751, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3465)
[0000][PE] mean and std.dev: (890.46, 822.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.36, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1257, 1931, 3589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8253)
[0000][PE] mean and std.dev: (2304.12, 1315.87)
[0000][PE] low and high boundaries for proper pairs: (1, 10585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 393.413 CPU sec, 74.773 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518013, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 451, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4357)
[0000][PE] mean and std.dev: (847.81, 823.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.64, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1038, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (1103.00, 561.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 396.483 CPU sec, 73.797 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518202, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 640, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4311)
[0000][PE] mean and std.dev: (951.91, 970.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1409, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4280)
[0000][PE] mean and std.dev: (1439.07, 677.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 397.580 CPU sec, 75.256 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518095, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 325, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3035)
[0000][PE] mean and std.dev: (583.42, 544.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.56, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1469, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (1344.62, 655.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 409.150 CPU sec, 64.626 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518055, 1, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 676, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (889.44, 744.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1236, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4487)
[0000][PE] mean and std.dev: (1391.61, 856.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 392.907 CPU sec, 73.314 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518394, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 594, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4489)
[0000][PE] mean and std.dev: (1032.92, 877.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.67, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1397, 2672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5748)
[0000][PE] mean and std.dev: (1919.00, 1150.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 401.279 CPU sec, 81.857 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518184, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1047, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (1143.00, 1027.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1759, 3155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7523)
[0000][PE] mean and std.dev: (2258.69, 1731.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 399.109 CPU sec, 65.293 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518732, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 623, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3782)
[0000][PE] mean and std.dev: (817.90, 658.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.56, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1839, 2583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5367)
[0000][PE] mean and std.dev: (1787.46, 950.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 395.469 CPU sec, 73.913 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518231, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 643, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5106)
[0000][PE] mean and std.dev: (993.10, 759.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1779, 3302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7974)
[0000][PE] mean and std.dev: (1689.58, 939.04)
[0000][PE] low and high boundaries for proper pairs: (1, 10310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 401.264 CPU sec, 73.941 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518033, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 315, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (468.11, 334.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.46, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1403, 3371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7597)
[0000][PE] mean and std.dev: (2069.90, 1629.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 396.261 CPU sec, 73.259 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518233, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 781, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (847.85, 636.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (704, 897, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2270)
[0000][PE] mean and std.dev: (965.57, 516.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 407.934 CPU sec, 60.738 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518456, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 373, 904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2268)
[0000][PE] mean and std.dev: (547.06, 477.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.12, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1235, 1865, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4940)
[0000][PE] mean and std.dev: (1880.64, 777.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 395.141 CPU sec, 81.347 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518537, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 433, 862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2068)
[0000][PE] mean and std.dev: (610.73, 543.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2786)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1522, 3065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7481)
[0000][PE] mean and std.dev: (1703.54, 1099.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 394.013 CPU sec, 71.354 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519079, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 451, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2874)
[0000][PE] mean and std.dev: (749.06, 605.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1392, 2696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6142)
[0000][PE] mean and std.dev: (1820.85, 1134.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 395.060 CPU sec, 71.393 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518567, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 475, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3663)
[0000][PE] mean and std.dev: (741.27, 632.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.38, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1898, 3991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9813)
[0000][PE] mean and std.dev: (2637.71, 2095.54)
[0000][PE] low and high boundaries for proper pairs: (1, 12724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 394.765 CPU sec, 62.617 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518368, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 341, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1929)
[0000][PE] mean and std.dev: (507.36, 434.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1550, 3417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8045)
[0000][PE] mean and std.dev: (1820.17, 1431.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 393.191 CPU sec, 66.557 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518155, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 390, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4123)
[0000][PE] mean and std.dev: (890.89, 880.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.59, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1657, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6053)
[0000][PE] mean and std.dev: (1816.47, 1286.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 413.172 CPU sec, 82.981 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517835, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 605, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3090)
[0000][PE] mean and std.dev: (720.58, 698.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1331, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (1416.91, 557.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 408.127 CPU sec, 70.845 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518297, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 904, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4780)
[0000][PE] mean and std.dev: (1115.00, 824.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.40, 110.93)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 2000, 2431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5583)
[0000][PE] mean and std.dev: (1875.46, 1247.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 399.210 CPU sec, 83.968 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517692, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 398, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2430)
[0000][PE] mean and std.dev: (645.96, 607.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.24, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 975, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (1186.40, 707.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 414.764 CPU sec, 82.569 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518292, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 1015, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6406)
[0000][PE] mean and std.dev: (1236.68, 1100.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1122, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3246)
[0000][PE] mean and std.dev: (1176.85, 658.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 395.711 CPU sec, 79.642 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518742, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 723, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2888)
[0000][PE] mean and std.dev: (775.95, 611.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.28, 111.42)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1423, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4302)
[0000][PE] mean and std.dev: (1344.93, 551.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 399.526 CPU sec, 65.052 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518529, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 330, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5135)
[0000][PE] mean and std.dev: (934.37, 1306.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.51, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1105, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (1147.46, 554.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 394.794 CPU sec, 78.686 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517742, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 753, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6591)
[0000][PE] mean and std.dev: (1156.55, 1215.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.53, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1260, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (1269.50, 642.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 394.226 CPU sec, 58.879 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518618, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 621, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5319)
[0000][PE] mean and std.dev: (1153.68, 1182.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1541, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5763)
[0000][PE] mean and std.dev: (1918.41, 1321.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 397.983 CPU sec, 66.842 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518373, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 359, 800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1862)
[0000][PE] mean and std.dev: (422.62, 339.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1764, 3400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7842)
[0000][PE] mean and std.dev: (2284.47, 1573.50)
[0000][PE] low and high boundaries for proper pairs: (1, 10063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 394.600 CPU sec, 71.544 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518152, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 856, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (977.29, 840.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1359, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4696)
[0000][PE] mean and std.dev: (1537.60, 766.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 407.673 CPU sec, 69.616 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518161, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 319, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2895)
[0000][PE] mean and std.dev: (658.48, 774.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1802, 2993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6929)
[0000][PE] mean and std.dev: (2027.82, 1551.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 404.841 CPU sec, 73.281 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518563, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 685, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3627)
[0000][PE] mean and std.dev: (717.14, 484.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.57, 111.44)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 2487, 4546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11396)
[0000][PE] mean and std.dev: (2803.70, 2099.96)
[0000][PE] low and high boundaries for proper pairs: (1, 14821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 396.473 CPU sec, 78.135 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517806, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 422, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (794.23, 710.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1556, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5207)
[0000][PE] mean and std.dev: (1714.59, 1042.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 398.718 CPU sec, 79.098 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205926
	[0000][ M::kt_pipeline] read 1205926 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518096, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 550, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4422)
[0000][PE] mean and std.dev: (937.84, 867.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.48)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1282, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3766)
[0000][PE] mean and std.dev: (1215.93, 485.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 392.074 CPU sec, 62.697 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205926
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518579, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 523, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3878)
[0000][PE] mean and std.dev: (823.93, 811.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.27, 110.96)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1453, 2017, 2802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5500)
[0000][PE] mean and std.dev: (2091.94, 1071.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205926 reads in 412.632 CPU sec, 78.811 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517881, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 388, 805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1843)
[0000][PE] mean and std.dev: (535.87, 412.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1323, 2767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6375)
[0000][PE] mean and std.dev: (1533.44, 1073.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 411.826 CPU sec, 80.958 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518109, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 806, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3012)
[0000][PE] mean and std.dev: (701.57, 512.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.28, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1292, 1460, 3178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6950)
[0000][PE] mean and std.dev: (1915.05, 994.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 402.697 CPU sec, 75.847 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518229, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 464, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2160)
[0000][PE] mean and std.dev: (649.22, 475.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.46, 111.01)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1284, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5287)
[0000][PE] mean and std.dev: (1583.57, 1074.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 399.047 CPU sec, 87.004 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518477, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 882, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4868)
[0000][PE] mean and std.dev: (963.00, 870.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.19, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1412, 2012, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1949.00, 876.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 396.559 CPU sec, 71.838 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518158, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 616, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (781.84, 627.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.19, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1218, 1800, 3799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8961)
[0000][PE] mean and std.dev: (2262.10, 1598.81)
[0000][PE] low and high boundaries for proper pairs: (1, 11542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 393.907 CPU sec, 68.335 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518658, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 359, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (651.20, 636.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.68, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1638, 2700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6338)
[0000][PE] mean and std.dev: (1973.70, 1557.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 396.526 CPU sec, 61.502 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518798, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 546, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (850.42, 714.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1483, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (1218.31, 599.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 401.966 CPU sec, 68.908 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518223, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 660, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (778.50, 647.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.46, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1627, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3191)
[0000][PE] mean and std.dev: (1605.92, 491.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 399.930 CPU sec, 84.069 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518564, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 658, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3399)
[0000][PE] mean and std.dev: (829.78, 668.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 400.501 CPU sec, 95.366 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518259, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 365, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4570)
[0000][PE] mean and std.dev: (847.89, 756.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.41, 110.93)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1823, 2764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6308)
[0000][PE] mean and std.dev: (1981.45, 1315.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 396.756 CPU sec, 72.623 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517997, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 431, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4865)
[0000][PE] mean and std.dev: (901.26, 1145.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.62, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1300, 2048, 4055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9565)
[0000][PE] mean and std.dev: (2670.00, 2173.78)
[0000][PE] low and high boundaries for proper pairs: (1, 12320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 395.744 CPU sec, 72.927 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518401, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 1072, 3061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8459)
[0000][PE] mean and std.dev: (1812.57, 2341.76)
[0000][PE] low and high boundaries for proper pairs: (1, 11180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1067, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3196)
[0000][PE] mean and std.dev: (1099.33, 636.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 398.362 CPU sec, 78.510 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518430, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 619, 2810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7876)
[0000][PE] mean and std.dev: (1234.95, 1320.87)
[0000][PE] low and high boundaries for proper pairs: (1, 10409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.30, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 1682, 2890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7258)
[0000][PE] mean and std.dev: (1848.06, 1305.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 397.671 CPU sec, 72.294 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518226, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 779, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (1064.00, 1025.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1115, 2663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6163)
[0000][PE] mean and std.dev: (1773.19, 1596.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 396.887 CPU sec, 79.362 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518774, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 359, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (802.36, 804.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1316, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3851)
[0000][PE] mean and std.dev: (1375.70, 548.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 392.389 CPU sec, 73.786 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518051, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 328, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5170)
[0000][PE] mean and std.dev: (813.33, 962.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.44, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1353, 1870, 3182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6840)
[0000][PE] mean and std.dev: (2046.45, 1114.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 395.874 CPU sec, 72.020 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518349, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1322, 2627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7251)
[0000][PE] mean and std.dev: (1484.50, 1216.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.64, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1245, 1540, 5590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14280)
[0000][PE] mean and std.dev: (2838.63, 2397.68)
[0000][PE] low and high boundaries for proper pairs: (1, 18625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 394.145 CPU sec, 63.408 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518175, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 335, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4163)
[0000][PE] mean and std.dev: (952.81, 1068.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1878, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4873)
[0000][PE] mean and std.dev: (1691.31, 633.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 404.459 CPU sec, 62.145 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518343, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 751, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3761)
[0000][PE] mean and std.dev: (919.68, 909.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1284, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (1235.08, 542.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 406.114 CPU sec, 64.258 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518281, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 765, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3562)
[0000][PE] mean and std.dev: (925.50, 855.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 953, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (1121.00, 843.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 398.711 CPU sec, 72.983 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517989, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 409, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5804)
[0000][PE] mean and std.dev: (945.28, 1154.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 3024, 3517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8815)
[0000][PE] mean and std.dev: (2856.33, 2141.80)
[0000][PE] low and high boundaries for proper pairs: (1, 11464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 397.306 CPU sec, 76.080 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518403, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 843, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (1087.61, 903.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.65, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 2956, 3525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8547)
[0000][PE] mean and std.dev: (2737.12, 1943.32)
[0000][PE] low and high boundaries for proper pairs: (1, 11058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 393.450 CPU sec, 62.767 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517931, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 375, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (986.20, 944.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 110.93)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1298, 1667, 3219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7061)
[0000][PE] mean and std.dev: (1983.40, 1267.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 396.903 CPU sec, 69.193 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518160, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 622, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4718)
[0000][PE] mean and std.dev: (951.18, 926.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1346, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3875)
[0000][PE] mean and std.dev: (1402.53, 651.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 402.886 CPU sec, 76.958 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518499, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 379, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (619.10, 592.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.58, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1159, 2646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5952)
[0000][PE] mean and std.dev: (1798.90, 1143.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 403.812 CPU sec, 73.875 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518402, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 369, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (803.65, 888.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.48)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 396.292 CPU sec, 68.556 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518571, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 869, 2750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7380)
[0000][PE] mean and std.dev: (1370.74, 1296.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.52, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 1310, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4507)
[0000][PE] mean and std.dev: (1647.06, 823.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 392.315 CPU sec, 65.470 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518085, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 588, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4025)
[0000][PE] mean and std.dev: (830.00, 692.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1348, 2336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (1727.39, 1157.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 394.625 CPU sec, 71.973 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518133, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 350, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (757.17, 817.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.21, 110.92)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1530, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (1395.04, 558.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 395.702 CPU sec, 62.562 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517967, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 337, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (609.67, 716.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.30, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1714, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (1399.57, 681.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 397.630 CPU sec, 64.748 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518548, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 1079, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3384)
[0000][PE] mean and std.dev: (1130.53, 831.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.20, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1631, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4075)
[0000][PE] mean and std.dev: (1578.86, 820.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 393.637 CPU sec, 74.036 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518144, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 487, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2326)
[0000][PE] mean and std.dev: (623.10, 516.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.32, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1235, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2885)
[0000][PE] mean and std.dev: (1183.67, 519.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 403.169 CPU sec, 72.889 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518574, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 929, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6520)
[0000][PE] mean and std.dev: (1360.23, 1364.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1118, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4321)
[0000][PE] mean and std.dev: (1450.89, 1092.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 392.445 CPU sec, 66.595 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518096, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 334, 885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2187)
[0000][PE] mean and std.dev: (480.92, 478.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.57, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1557, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4895)
[0000][PE] mean and std.dev: (1482.69, 780.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 395.096 CPU sec, 71.942 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518706, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 448, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (717.42, 692.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.23, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1263, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4826)
[0000][PE] mean and std.dev: (1763.43, 1051.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 393.245 CPU sec, 80.109 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518646, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 715, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3794)
[0000][PE] mean and std.dev: (681.11, 655.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.73, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1283, 2422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5460)
[0000][PE] mean and std.dev: (1401.94, 812.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 395.389 CPU sec, 71.343 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518297, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 367, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (637.67, 636.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.28, 110.91)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1028, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4041)
[0000][PE] mean and std.dev: (1160.83, 826.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 397.877 CPU sec, 73.377 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518160, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 418, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3794)
[0000][PE] mean and std.dev: (637.28, 645.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 975, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4013)
[0000][PE] mean and std.dev: (1190.60, 794.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 396.816 CPU sec, 76.748 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517999, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 389, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5371)
[0000][PE] mean and std.dev: (993.39, 1295.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.28, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (656, 996, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2354)
[0000][PE] mean and std.dev: (967.61, 408.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 395.788 CPU sec, 64.587 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517950, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 490, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3076)
[0000][PE] mean and std.dev: (831.06, 665.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.56, 111.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1423, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (1420.75, 619.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 391.555 CPU sec, 70.728 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518272, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 417, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4991)
[0000][PE] mean and std.dev: (1155.64, 1350.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1549, 3480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8328)
[0000][PE] mean and std.dev: (1889.88, 1189.79)
[0000][PE] low and high boundaries for proper pairs: (1, 10752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 392.801 CPU sec, 57.562 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517984, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 508, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6417)
[0000][PE] mean and std.dev: (1131.37, 1381.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 111.02)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1692, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4014)
[0000][PE] mean and std.dev: (1460.00, 664.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 393.731 CPU sec, 68.430 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518348, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 385, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2882)
[0000][PE] mean and std.dev: (689.65, 681.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1463, 1931, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (1870.94, 587.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 394.699 CPU sec, 73.725 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518112, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 695, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (748.88, 657.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1393, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4996)
[0000][PE] mean and std.dev: (1520.33, 841.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 392.978 CPU sec, 55.275 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518257, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 403, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (435.44, 321.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.38, 111.42)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (540, 1290, 2294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5802)
[0000][PE] mean and std.dev: (1345.87, 872.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 393.446 CPU sec, 65.112 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517854, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 694, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3851)
[0000][PE] mean and std.dev: (907.19, 741.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.19, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1112, 2842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6470)
[0000][PE] mean and std.dev: (1959.68, 1355.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 406.512 CPU sec, 71.819 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518431, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 471, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (775.50, 730.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.32, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1753, 4376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10948)
[0000][PE] mean and std.dev: (2834.67, 2650.78)
[0000][PE] low and high boundaries for proper pairs: (1, 14234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 392.554 CPU sec, 64.453 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518417, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 334, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2648)
[0000][PE] mean and std.dev: (525.13, 523.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1135, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4164)
[0000][PE] mean and std.dev: (1247.00, 736.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 395.484 CPU sec, 71.233 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517877, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 398, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4537)
[0000][PE] mean and std.dev: (774.05, 684.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1535, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5436)
[0000][PE] mean and std.dev: (1661.78, 955.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 399.165 CPU sec, 64.173 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518553, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 704, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2827)
[0000][PE] mean and std.dev: (690.95, 519.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.64, 111.45)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1436, 2582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5354)
[0000][PE] mean and std.dev: (1761.09, 1104.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 388.323 CPU sec, 59.579 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518520, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 355, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (780.18, 796.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1191, 2875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6741)
[0000][PE] mean and std.dev: (1555.17, 979.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 391.779 CPU sec, 73.973 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518461, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 538, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (564.23, 406.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1207, 2621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6027)
[0000][PE] mean and std.dev: (1746.25, 1408.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 390.972 CPU sec, 65.081 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518352, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 450, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3384)
[0000][PE] mean and std.dev: (737.52, 675.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.82, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1305, 2467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5243)
[0000][PE] mean and std.dev: (1669.94, 775.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 391.522 CPU sec, 72.289 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518618, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 407, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2778)
[0000][PE] mean and std.dev: (710.10, 667.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1903, 2884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6318)
[0000][PE] mean and std.dev: (1868.71, 1022.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 388.188 CPU sec, 72.792 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518136, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 376, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2476)
[0000][PE] mean and std.dev: (635.48, 626.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1621, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1726.88, 925.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 394.837 CPU sec, 71.028 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517801, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 290, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3135)
[0000][PE] mean and std.dev: (679.55, 615.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1199, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5814)
[0000][PE] mean and std.dev: (1828.36, 1443.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 395.292 CPU sec, 57.643 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518013, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 313, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2095)
[0000][PE] mean and std.dev: (451.50, 420.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1755, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (1681.29, 674.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 396.741 CPU sec, 70.643 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518453, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (508, 779, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (1058.19, 765.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.68, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1328, 2044, 3116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6692)
[0000][PE] mean and std.dev: (1840.33, 1037.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 394.916 CPU sec, 70.511 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518266, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 427, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4047)
[0000][PE] mean and std.dev: (804.19, 805.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.14, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1503, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (1608.24, 808.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 401.120 CPU sec, 66.521 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518117, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 573, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3200)
[0000][PE] mean and std.dev: (758.33, 607.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.77, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1447, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6562)
[0000][PE] mean and std.dev: (1533.82, 885.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 391.861 CPU sec, 53.335 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518393, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 608, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6348)
[0000][PE] mean and std.dev: (1159.97, 1297.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1567, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5311)
[0000][PE] mean and std.dev: (1448.58, 765.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 392.426 CPU sec, 56.762 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518475, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 484, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3433)
[0000][PE] mean and std.dev: (857.41, 853.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1164, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (5, 2230)
[0000][PE] mean and std.dev: (1058.88, 383.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2675)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 403.840 CPU sec, 63.937 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518173, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 369, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1770)
[0000][PE] mean and std.dev: (454.88, 441.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1465, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (1569.71, 825.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 394.372 CPU sec, 63.548 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518723, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1062, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4929)
[0000][PE] mean and std.dev: (1182.86, 997.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.31, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1263, 2006, 3478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7908)
[0000][PE] mean and std.dev: (2293.35, 1727.44)
[0000][PE] low and high boundaries for proper pairs: (1, 10123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 392.819 CPU sec, 69.515 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518585, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 774, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (1135.04, 1231.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1465, 2624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6164)
[0000][PE] mean and std.dev: (1745.78, 1393.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 407.221 CPU sec, 63.846 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518395, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 605, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2745)
[0000][PE] mean and std.dev: (716.22, 537.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1373, 2607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5827)
[0000][PE] mean and std.dev: (1528.56, 757.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 407.256 CPU sec, 68.079 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518481, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 387, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2747)
[0000][PE] mean and std.dev: (613.81, 608.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1310, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (1644.26, 808.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 390.855 CPU sec, 65.158 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518313, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 1012, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6552)
[0000][PE] mean and std.dev: (1232.76, 1183.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.74, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1072, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4011)
[0000][PE] mean and std.dev: (1178.86, 788.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 401.324 CPU sec, 74.444 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517785, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 894, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4239)
[0000][PE] mean and std.dev: (1046.08, 949.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1438, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4506)
[0000][PE] mean and std.dev: (1447.31, 773.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 396.930 CPU sec, 65.930 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518262, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 304, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4793)
[0000][PE] mean and std.dev: (969.30, 1210.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (670, 1371, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3955)
[0000][PE] mean and std.dev: (1480.94, 1038.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 398.570 CPU sec, 66.703 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518668, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 613, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4815)
[0000][PE] mean and std.dev: (928.86, 895.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.13, 110.76)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1395, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4188)
[0000][PE] mean and std.dev: (1641.87, 1006.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 408.705 CPU sec, 79.301 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518081, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 640, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (772.71, 648.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.28, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1205, 3582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9398)
[0000][PE] mean and std.dev: (2150.35, 1793.19)
[0000][PE] low and high boundaries for proper pairs: (1, 12306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 400.521 CPU sec, 61.152 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518427, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 404, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (504.37, 380.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.33, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1181, 2914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7086)
[0000][PE] mean and std.dev: (1770.94, 1710.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 394.443 CPU sec, 72.611 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518182, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 633, 847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1885)
[0000][PE] mean and std.dev: (619.26, 456.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1248, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3765)
[0000][PE] mean and std.dev: (1481.26, 775.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 393.249 CPU sec, 68.999 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518472, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 920, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5391)
[0000][PE] mean and std.dev: (1379.79, 1251.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 848)
[0000][PE] mean and std.dev: (482.74, 111.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1347, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (1507.60, 934.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 401.691 CPU sec, 69.029 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517928, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 479, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4114)
[0000][PE] mean and std.dev: (698.36, 700.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1462, 1753, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4882)
[0000][PE] mean and std.dev: (1700.44, 678.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 397.105 CPU sec, 65.226 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518521, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 1197, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5851)
[0000][PE] mean and std.dev: (1333.37, 1041.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1328, 2839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6215)
[0000][PE] mean and std.dev: (1782.31, 853.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 393.980 CPU sec, 64.752 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518272, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 412, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2665)
[0000][PE] mean and std.dev: (517.20, 405.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.35, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1394, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (1707.47, 979.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 403.929 CPU sec, 75.785 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518342, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 780, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4553)
[0000][PE] mean and std.dev: (872.53, 840.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.59, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1110, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (1301.78, 632.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 388.285 CPU sec, 64.414 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518359, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 739, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3560)
[0000][PE] mean and std.dev: (847.94, 669.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.36, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1219, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3544)
[0000][PE] mean and std.dev: (1323.62, 613.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 395.642 CPU sec, 64.228 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518129, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 404, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5181)
[0000][PE] mean and std.dev: (973.46, 1038.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1409, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4164)
[0000][PE] mean and std.dev: (1466.11, 879.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 394.374 CPU sec, 76.951 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517720, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 741, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2450)
[0000][PE] mean and std.dev: (690.74, 455.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (463, 898, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (983.40, 629.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 394.273 CPU sec, 78.753 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518356, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 644, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (821.92, 789.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1692, 2389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5331)
[0000][PE] mean and std.dev: (1736.44, 985.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 392.061 CPU sec, 61.785 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205838
	[0000][ M::kt_pipeline] read 1205838 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518331, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 609, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5161)
[0000][PE] mean and std.dev: (973.65, 1051.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.51, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1123, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2829)
[0000][PE] mean and std.dev: (1148.11, 462.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 390.737 CPU sec, 54.612 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205838
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518115, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 919, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (1024.35, 861.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.43, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1150, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2506)
[0000][PE] mean and std.dev: (1182.05, 589.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205838 reads in 400.516 CPU sec, 82.257 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518571, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 286, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2578)
[0000][PE] mean and std.dev: (490.22, 611.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.54)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1154, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2647)
[0000][PE] mean and std.dev: (1209.08, 422.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 386.921 CPU sec, 67.865 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518260, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 632, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2286)
[0000][PE] mean and std.dev: (600.96, 389.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.50, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1561, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5716)
[0000][PE] mean and std.dev: (1778.71, 858.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 395.415 CPU sec, 62.911 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518062, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 629, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (704.08, 490.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.68, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1411, 2984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6744)
[0000][PE] mean and std.dev: (1885.73, 1082.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 397.650 CPU sec, 74.961 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518215, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 362, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3232)
[0000][PE] mean and std.dev: (675.06, 714.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 110.99)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1254, 1650, 2680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5532)
[0000][PE] mean and std.dev: (1830.40, 1008.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 389.855 CPU sec, 60.334 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518189, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 456, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (885.63, 804.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6848)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.41, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1310, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (1239.00, 616.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 397.486 CPU sec, 65.000 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205788
	[0000][ M::kt_pipeline] read 1205788 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518556, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 356, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3711)
[0000][PE] mean and std.dev: (520.19, 508.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.72, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1200, 2663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6599)
[0000][PE] mean and std.dev: (1536.94, 1490.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 395.548 CPU sec, 75.886 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205788
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518124, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 882, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2632)
[0000][PE] mean and std.dev: (663.92, 383.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.83, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1294, 3149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7605)
[0000][PE] mean and std.dev: (1829.17, 1445.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205788 reads in 393.488 CPU sec, 65.561 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518249, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 427, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (983.10, 1090.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1476, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4596)
[0000][PE] mean and std.dev: (1444.60, 766.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 396.316 CPU sec, 71.100 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518602, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 446, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (659.92, 577.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.56, 111.42)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1458, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (1437.23, 492.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 391.802 CPU sec, 63.957 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518699, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 493, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2657)
[0000][PE] mean and std.dev: (789.17, 717.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.49, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1418, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1637.83, 850.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 392.775 CPU sec, 60.010 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518384, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 386, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2162)
[0000][PE] mean and std.dev: (485.42, 436.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1493, 3241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8067)
[0000][PE] mean and std.dev: (1966.94, 1833.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 388.946 CPU sec, 58.168 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518429, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 418, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4150)
[0000][PE] mean and std.dev: (900.88, 916.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1298, 2861, 4055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9569)
[0000][PE] mean and std.dev: (3052.11, 2276.85)
[0000][PE] low and high boundaries for proper pairs: (1, 12326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 389.887 CPU sec, 73.479 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518752, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 377, 419)
[0000][PE] low and high boundaries for computing mean and std.dev: (83, 643)
[0000][PE] mean and std.dev: (317.06, 89.83)
[0000][PE] low and high boundaries for proper pairs: (1, 755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.44)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1332, 2139, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4467)
[0000][PE] mean and std.dev: (2029.62, 847.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 402.706 CPU sec, 70.465 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518004, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 721, 3082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8772)
[0000][PE] mean and std.dev: (1384.90, 1422.39)
[0000][PE] low and high boundaries for proper pairs: (1, 11617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1149, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (1175.57, 566.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 410.056 CPU sec, 75.774 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518315, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 472, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3512)
[0000][PE] mean and std.dev: (686.68, 657.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.69, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1304, 1540, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1932.93, 843.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 392.285 CPU sec, 72.545 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518011, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 468, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5285)
[0000][PE] mean and std.dev: (1031.59, 945.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.46)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 1547, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4913)
[0000][PE] mean and std.dev: (1641.72, 651.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 396.174 CPU sec, 57.418 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518380, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 531, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (796.00, 721.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.53, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1352, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5658)
[0000][PE] mean and std.dev: (1594.81, 914.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 396.677 CPU sec, 71.836 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518241, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 303, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2288)
[0000][PE] mean and std.dev: (469.44, 425.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1687, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5762)
[0000][PE] mean and std.dev: (1938.16, 1511.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 389.915 CPU sec, 56.617 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518262, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 957, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4121)
[0000][PE] mean and std.dev: (922.58, 784.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.50, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1118, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (1358.24, 711.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 401.100 CPU sec, 69.654 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518271, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 750, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3240)
[0000][PE] mean and std.dev: (825.90, 637.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.35, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1145, 2560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5948)
[0000][PE] mean and std.dev: (1621.25, 1087.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 391.913 CPU sec, 65.871 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518434, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 466, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (800.05, 819.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.55, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1373, 1498, 2815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5699)
[0000][PE] mean and std.dev: (1980.71, 971.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 396.489 CPU sec, 61.592 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518317, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 547, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4946)
[0000][PE] mean and std.dev: (1190.62, 1222.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.53, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1335, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (1389.50, 549.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 398.370 CPU sec, 72.906 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518320, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 480, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4138)
[0000][PE] mean and std.dev: (794.82, 821.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.69, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1748, 3703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8963)
[0000][PE] mean and std.dev: (2582.82, 2589.08)
[0000][PE] low and high boundaries for proper pairs: (1, 12939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 409.138 CPU sec, 67.682 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518494, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 816, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4283)
[0000][PE] mean and std.dev: (904.04, 825.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1425, 2820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6402)
[0000][PE] mean and std.dev: (1957.38, 1446.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 397.447 CPU sec, 79.508 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518371, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 363, 2173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6111)
[0000][PE] mean and std.dev: (1141.62, 1450.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.10, 110.93)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 972, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (1314.75, 625.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 394.685 CPU sec, 72.092 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205906
	[0000][ M::kt_pipeline] read 1205906 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518550, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 813, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3844)
[0000][PE] mean and std.dev: (924.56, 665.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.65, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (491, 1680, 2898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7712)
[0000][PE] mean and std.dev: (2027.50, 1573.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 397.326 CPU sec, 75.417 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205538
	[0000][ M::kt_pipeline] read 1205538 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205906
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518712, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 352, 772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1900)
[0000][PE] mean and std.dev: (479.30, 375.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.70, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1940, 3097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6917)
[0000][PE] mean and std.dev: (1997.63, 1226.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205906 reads in 390.847 CPU sec, 60.996 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518063, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 883, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (891.31, 667.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1199, 1422, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (1394.20, 767.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205538 reads in 401.556 CPU sec, 72.176 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518223, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 997, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (1038.35, 819.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.70, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1385, 1623, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (247, 3092)
[0000][PE] mean and std.dev: (1654.73, 533.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 395.393 CPU sec, 70.416 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518282, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 358, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (612.13, 619.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1433, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (1580.00, 902.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 391.114 CPU sec, 56.054 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518447, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 1010, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4947)
[0000][PE] mean and std.dev: (1077.96, 840.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1313, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3222)
[0000][PE] mean and std.dev: (1304.45, 829.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 393.656 CPU sec, 65.428 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517987, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 773, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4781)
[0000][PE] mean and std.dev: (1110.14, 1023.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.20, 110.94)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1489, 1996, 2619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4879)
[0000][PE] mean and std.dev: (1993.69, 877.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 394.487 CPU sec, 70.221 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518400, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 708, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3381)
[0000][PE] mean and std.dev: (895.50, 730.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.50, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1211, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (1176.10, 517.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 398.418 CPU sec, 59.554 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518073, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 505, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (859.09, 857.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1290, 2836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6682)
[0000][PE] mean and std.dev: (1714.29, 1187.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 394.455 CPU sec, 73.764 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518159, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 875, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1075.86, 1028.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1430, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (1444.56, 767.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 397.683 CPU sec, 67.874 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518357, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 316, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3275)
[0000][PE] mean and std.dev: (694.25, 616.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1521, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (31, 2791)
[0000][PE] mean and std.dev: (1498.45, 538.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 391.092 CPU sec, 68.015 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518486, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 516, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (839.64, 705.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.55, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 401.565 CPU sec, 78.366 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518482, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 397, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1794)
[0000][PE] mean and std.dev: (490.78, 345.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1163, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3984)
[0000][PE] mean and std.dev: (1224.61, 706.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 401.834 CPU sec, 69.818 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518031, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 699, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3313)
[0000][PE] mean and std.dev: (821.77, 622.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.45, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (355, 898, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2938)
[0000][PE] mean and std.dev: (718.80, 459.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 391.363 CPU sec, 50.209 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517997, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 721, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (931.42, 784.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.41)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1341, 1631, 2741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5541)
[0000][PE] mean and std.dev: (1833.55, 925.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 404.104 CPU sec, 71.690 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518397, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 391, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3491)
[0000][PE] mean and std.dev: (777.39, 822.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.79, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1499, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3014)
[0000][PE] mean and std.dev: (1284.60, 341.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3637)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 401.990 CPU sec, 79.255 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518514, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 874, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4533)
[0000][PE] mean and std.dev: (979.76, 770.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 396.481 CPU sec, 65.460 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518180, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 301, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (682.53, 756.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.81, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1451, 3010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7122)
[0000][PE] mean and std.dev: (1858.93, 1256.14)
[0000][PE] low and high boundaries for proper pairs: (1, 9178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 401.983 CPU sec, 67.516 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518219, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 785, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (1135.75, 1169.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.29, 110.81)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1426, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1708.60, 1093.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 396.692 CPU sec, 67.045 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518774, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 405, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (585.26, 597.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1418, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (1449.42, 728.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 390.540 CPU sec, 64.058 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518394, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 578, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (890.47, 839.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.59, 111.55)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 954, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (1137.88, 625.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 399.359 CPU sec, 70.216 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518291, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 441, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6085)
[0000][PE] mean and std.dev: (1255.42, 1417.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1424, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (1232.55, 385.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 388.155 CPU sec, 81.931 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517777, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 306, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1719)
[0000][PE] mean and std.dev: (356.92, 304.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.59, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1478, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4044)
[0000][PE] mean and std.dev: (1550.88, 559.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 394.889 CPU sec, 73.863 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517890, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 679, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3711)
[0000][PE] mean and std.dev: (941.32, 818.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 2049, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5541)
[0000][PE] mean and std.dev: (1845.83, 1031.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 396.680 CPU sec, 68.955 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518285, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 319, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2827)
[0000][PE] mean and std.dev: (657.63, 649.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.54, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1344, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4280)
[0000][PE] mean and std.dev: (1439.23, 641.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 393.837 CPU sec, 68.968 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517761, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 901, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (916.61, 820.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.28, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1227, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4670)
[0000][PE] mean and std.dev: (1678.20, 1026.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 396.824 CPU sec, 70.769 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518430, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 649, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4629)
[0000][PE] mean and std.dev: (1009.74, 964.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 846)
[0000][PE] mean and std.dev: (482.97, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1718, 4412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10964)
[0000][PE] mean and std.dev: (2799.45, 2534.50)
[0000][PE] low and high boundaries for proper pairs: (1, 14240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 384.492 CPU sec, 62.704 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518169, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 738, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4765)
[0000][PE] mean and std.dev: (1049.72, 881.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1407, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (1271.15, 642.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 401.221 CPU sec, 82.817 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517935, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 620, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (802.42, 824.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1305, 1973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (1455.15, 756.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 403.046 CPU sec, 81.887 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518440, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 400, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6124)
[0000][PE] mean and std.dev: (938.10, 1112.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1808, 3574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8608)
[0000][PE] mean and std.dev: (2187.29, 1430.00)
[0000][PE] low and high boundaries for proper pairs: (1, 11125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 389.881 CPU sec, 64.376 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518545, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 451, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1689)
[0000][PE] mean and std.dev: (406.37, 294.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1430, 2536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5450)
[0000][PE] mean and std.dev: (1793.14, 1163.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 388.740 CPU sec, 68.370 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518350, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 752, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (920.09, 928.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.32, 110.96)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1314, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (31, 2446)
[0000][PE] mean and std.dev: (1137.82, 467.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 390.474 CPU sec, 61.105 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518685, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 305, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6828)
[0000][PE] mean and std.dev: (1108.47, 1342.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1274, 1463, 3141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6875)
[0000][PE] mean and std.dev: (1817.45, 1024.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 392.892 CPU sec, 68.182 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518383, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 491, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (674.25, 599.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1523, 2875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6525)
[0000][PE] mean and std.dev: (1830.50, 1297.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 402.534 CPU sec, 60.963 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518674, 0, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 608, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4242)
[0000][PE] mean and std.dev: (837.60, 943.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.56, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1287, 2234, 3468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7830)
[0000][PE] mean and std.dev: (2282.12, 1241.85)
[0000][PE] low and high boundaries for proper pairs: (1, 10011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 396.676 CPU sec, 67.610 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518513, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 614, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5167)
[0000][PE] mean and std.dev: (1122.91, 1218.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.57, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1289, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2981)
[0000][PE] mean and std.dev: (1284.64, 670.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 393.667 CPU sec, 75.069 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518310, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 363, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (793.30, 678.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1402, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (1215.33, 466.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 387.210 CPU sec, 61.849 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518651, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 529, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (799.18, 764.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 846)
[0000][PE] mean and std.dev: (482.85, 111.64)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1237, 2079, 3508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8050)
[0000][PE] mean and std.dev: (2410.77, 1482.67)
[0000][PE] low and high boundaries for proper pairs: (1, 10321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 391.571 CPU sec, 62.272 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518368, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 923, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6482)
[0000][PE] mean and std.dev: (1027.19, 864.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1442, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3710)
[0000][PE] mean and std.dev: (1464.26, 712.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 397.185 CPU sec, 67.809 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518166, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 1178, 2719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7481)
[0000][PE] mean and std.dev: (1541.20, 1326.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.52, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1334, 1537, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (1780.65, 810.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 402.645 CPU sec, 61.027 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518488, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 391, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2107)
[0000][PE] mean and std.dev: (611.62, 506.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1531, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4146)
[0000][PE] mean and std.dev: (1436.31, 540.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 409.095 CPU sec, 66.532 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518546, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 675, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (1080.03, 1048.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.77, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1318, 1411, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (372, 2737)
[0000][PE] mean and std.dev: (1380.57, 429.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 393.422 CPU sec, 64.513 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518662, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 980, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3285)
[0000][PE] mean and std.dev: (818.53, 520.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1209, 2592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5806)
[0000][PE] mean and std.dev: (1622.43, 1144.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 400.552 CPU sec, 82.439 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518772, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 414, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2486)
[0000][PE] mean and std.dev: (586.13, 485.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.53, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 2276, 3010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6928)
[0000][PE] mean and std.dev: (2114.61, 1179.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 398.117 CPU sec, 75.208 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517884, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 514, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6602)
[0000][PE] mean and std.dev: (977.87, 1189.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.38, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1376, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4910)
[0000][PE] mean and std.dev: (1575.11, 963.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 399.725 CPU sec, 76.302 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518619, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 928, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4530)
[0000][PE] mean and std.dev: (1026.57, 844.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1121, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4976)
[0000][PE] mean and std.dev: (1552.94, 911.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 398.852 CPU sec, 71.092 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518454, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 367, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3196)
[0000][PE] mean and std.dev: (664.00, 615.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.43, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1048, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3023)
[0000][PE] mean and std.dev: (1052.80, 436.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 392.100 CPU sec, 62.897 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518243, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 364, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (780.90, 846.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.52, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1244, 2277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4769)
[0000][PE] mean and std.dev: (1385.39, 934.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 405.173 CPU sec, 66.541 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518231, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 779, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (744.00, 689.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1617, 3156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7292)
[0000][PE] mean and std.dev: (1942.50, 1423.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 393.895 CPU sec, 73.884 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518116, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 798, 1164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3058)
[0000][PE] mean and std.dev: (805.86, 634.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1250, 3024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6940)
[0000][PE] mean and std.dev: (1594.19, 881.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 400.712 CPU sec, 76.255 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518218, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 446, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1938)
[0000][PE] mean and std.dev: (468.94, 290.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1678, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4377)
[0000][PE] mean and std.dev: (1779.00, 699.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5435)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 394.335 CPU sec, 68.499 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518553, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 400, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2953)
[0000][PE] mean and std.dev: (573.75, 497.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.58, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 2165, 2429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4861)
[0000][PE] mean and std.dev: (1899.78, 1035.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 397.481 CPU sec, 60.673 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518020, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 1008, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5704)
[0000][PE] mean and std.dev: (1513.67, 1533.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.51, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 2070, 4183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10195)
[0000][PE] mean and std.dev: (2563.54, 1743.45)
[0000][PE] low and high boundaries for proper pairs: (1, 13201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 389.899 CPU sec, 64.571 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518319, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 528, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3753)
[0000][PE] mean and std.dev: (791.63, 752.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1294, 1543, 2450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4762)
[0000][PE] mean and std.dev: (1739.44, 837.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 390.737 CPU sec, 71.553 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518454, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 406, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3513)
[0000][PE] mean and std.dev: (824.60, 875.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 110.92)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1086, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3916)
[0000][PE] mean and std.dev: (1333.67, 804.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 406.214 CPU sec, 71.218 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518321, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 313, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2873)
[0000][PE] mean and std.dev: (585.75, 668.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1297, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (70, 2450)
[0000][PE] mean and std.dev: (1206.57, 431.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 392.154 CPU sec, 69.107 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518032, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 850, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (807.00, 695.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.35, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1704, 4119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10237)
[0000][PE] mean and std.dev: (2802.20, 2595.36)
[0000][PE] low and high boundaries for proper pairs: (1, 13296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 399.303 CPU sec, 74.265 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518083, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 588, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4276)
[0000][PE] mean and std.dev: (956.35, 977.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.72, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1150, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4915)
[0000][PE] mean and std.dev: (1565.74, 937.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 404.179 CPU sec, 70.078 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518584, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 623, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (806.28, 682.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.46)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1404, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (1517.87, 923.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 400.184 CPU sec, 59.799 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518601, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 624, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (873.37, 756.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.68, 110.92)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1373, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (1346.17, 694.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 389.070 CPU sec, 56.730 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518347, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 692, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5024)
[0000][PE] mean and std.dev: (1124.39, 945.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.57, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1240, 1462, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (1537.27, 589.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 390.900 CPU sec, 59.895 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518558, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 420, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (834.75, 760.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.64, 110.91)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1366, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (1451.92, 884.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 397.953 CPU sec, 67.992 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518448, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 1428, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6779)
[0000][PE] mean and std.dev: (1689.17, 1496.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.71, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1439, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (1601.58, 779.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 392.777 CPU sec, 71.911 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205470
	[0000][ M::kt_pipeline] read 1205470 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518800, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 423, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2234)
[0000][PE] mean and std.dev: (568.60, 457.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.75, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1334, 2091, 3926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9110)
[0000][PE] mean and std.dev: (2495.00, 1627.23)
[0000][PE] low and high boundaries for proper pairs: (1, 11702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 404.665 CPU sec, 60.254 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518399, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 962, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (908.73, 616.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.80, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1828, 2855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6503)
[0000][PE] mean and std.dev: (1925.25, 1072.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205470 reads in 395.590 CPU sec, 66.494 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518272, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 725, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5394)
[0000][PE] mean and std.dev: (1042.58, 983.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.52, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1273, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (409, 2134)
[0000][PE] mean and std.dev: (1282.19, 229.80)
[0000][PE] low and high boundaries for proper pairs: (64, 2479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 399.399 CPU sec, 71.519 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518223, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 470, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2903)
[0000][PE] mean and std.dev: (673.18, 549.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.43, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1361, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3672)
[0000][PE] mean and std.dev: (1220.00, 625.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 389.619 CPU sec, 55.476 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518321, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 580, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (733.54, 511.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.51, 111.41)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1445, 4143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10939)
[0000][PE] mean and std.dev: (2192.50, 2237.43)
[0000][PE] low and high boundaries for proper pairs: (1, 14337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 391.834 CPU sec, 72.660 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518215, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 328, 827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2015)
[0000][PE] mean and std.dev: (476.67, 433.33)
[0000][PE] low and high boundaries for proper pairs: (1, 2609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.55, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 2039, 2937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7039)
[0000][PE] mean and std.dev: (2252.00, 1598.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 397.524 CPU sec, 71.287 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518697, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 518, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2477)
[0000][PE] mean and std.dev: (647.88, 527.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.53, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1400, 2537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5609)
[0000][PE] mean and std.dev: (1764.23, 1248.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7145)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 397.777 CPU sec, 65.152 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517787, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 377, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4042)
[0000][PE] mean and std.dev: (727.32, 636.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1737, 2561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5453)
[0000][PE] mean and std.dev: (1850.00, 1110.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 392.320 CPU sec, 61.750 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517713, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 337, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2371)
[0000][PE] mean and std.dev: (564.28, 524.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.69, 111.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1654, 2679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6263)
[0000][PE] mean and std.dev: (1444.50, 859.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 407.079 CPU sec, 67.455 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518315, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 477, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2208)
[0000][PE] mean and std.dev: (570.84, 341.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.54, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1681, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5688)
[0000][PE] mean and std.dev: (1532.67, 1052.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 400.436 CPU sec, 64.390 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517696, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 1446, 2750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7300)
[0000][PE] mean and std.dev: (1674.19, 1388.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1297, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5405)
[0000][PE] mean and std.dev: (1404.69, 830.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 393.859 CPU sec, 60.970 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518560, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (668, 860, 3041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7787)
[0000][PE] mean and std.dev: (1678.31, 1537.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.90, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 1615, 2837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7269)
[0000][PE] mean and std.dev: (2088.53, 1767.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 395.713 CPU sec, 63.840 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518536, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 657, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6115)
[0000][PE] mean and std.dev: (1299.78, 1410.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 110.96)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1656, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (1548.20, 639.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 402.929 CPU sec, 69.558 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518580, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 542, 1011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2243)
[0000][PE] mean and std.dev: (503.72, 262.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.54, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1554, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (1254.07, 596.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 393.331 CPU sec, 67.600 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518309, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 563, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (927.28, 843.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1649, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4531)
[0000][PE] mean and std.dev: (1505.65, 752.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 397.208 CPU sec, 71.509 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518450, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 346, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3525)
[0000][PE] mean and std.dev: (605.93, 692.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 1788, 2571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5247)
[0000][PE] mean and std.dev: (2035.67, 992.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 392.536 CPU sec, 73.793 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518468, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 412, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2482)
[0000][PE] mean and std.dev: (475.25, 350.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1470, 3057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7117)
[0000][PE] mean and std.dev: (2054.94, 1544.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 392.686 CPU sec, 71.134 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518129, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 428, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3627)
[0000][PE] mean and std.dev: (733.11, 667.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.92, 111.42)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1636, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (1485.75, 698.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 394.379 CPU sec, 64.182 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517981, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 1424, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4962)
[0000][PE] mean and std.dev: (1344.21, 1191.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1830, 2048, 3002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5346)
[0000][PE] mean and std.dev: (2130.67, 670.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 402.199 CPU sec, 75.539 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518193, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 410, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2506)
[0000][PE] mean and std.dev: (584.76, 485.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 110.99)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1272, 1726, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (146, 2961)
[0000][PE] mean and std.dev: (1472.50, 483.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 406.943 CPU sec, 65.677 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518359, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 989, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3643)
[0000][PE] mean and std.dev: (851.41, 623.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.11, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 2120, 2574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5508)
[0000][PE] mean and std.dev: (2050.50, 1097.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 397.207 CPU sec, 65.621 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518379, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 672, 2923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8057)
[0000][PE] mean and std.dev: (1477.73, 1782.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.68, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1634, 3141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7083)
[0000][PE] mean and std.dev: (1866.64, 1227.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 393.694 CPU sec, 47.508 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517915, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1102, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6496)
[0000][PE] mean and std.dev: (1480.53, 1435.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1740, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5313)
[0000][PE] mean and std.dev: (1526.43, 730.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 402.224 CPU sec, 60.222 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518427, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 1060, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5816)
[0000][PE] mean and std.dev: (1156.44, 990.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1058, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (1339.86, 688.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 394.566 CPU sec, 60.369 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518745, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 1134, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7248)
[0000][PE] mean and std.dev: (1522.50, 1455.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1117, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (939.46, 453.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 402.670 CPU sec, 65.361 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518480, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 527, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6261)
[0000][PE] mean and std.dev: (1012.29, 1022.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.44, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 403.083 CPU sec, 60.544 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518530, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 743, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (977.48, 925.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1300, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2873)
[0000][PE] mean and std.dev: (1375.00, 487.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 395.961 CPU sec, 59.937 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518307, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 454, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2525)
[0000][PE] mean and std.dev: (488.80, 409.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.26, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 2019, 5160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13418)
[0000][PE] mean and std.dev: (2655.67, 1948.50)
[0000][PE] low and high boundaries for proper pairs: (1, 17547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 396.158 CPU sec, 61.552 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518155, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 859, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5939)
[0000][PE] mean and std.dev: (985.00, 770.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.31, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1178, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 2234)
[0000][PE] mean and std.dev: (1043.44, 200.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 403.683 CPU sec, 54.486 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518408, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 985, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4622)
[0000][PE] mean and std.dev: (1380.80, 1317.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1149, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (1438.54, 1000.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 396.598 CPU sec, 56.585 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518832, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 627, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4690)
[0000][PE] mean and std.dev: (922.36, 942.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1047, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3751)
[0000][PE] mean and std.dev: (1288.77, 761.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 399.002 CPU sec, 73.929 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518007, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 1277, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4995)
[0000][PE] mean and std.dev: (1122.60, 937.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 2125, 3021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6755)
[0000][PE] mean and std.dev: (2117.32, 1171.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 404.570 CPU sec, 62.836 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518121, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 698, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2894)
[0000][PE] mean and std.dev: (804.47, 673.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 2216, 4214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10394)
[0000][PE] mean and std.dev: (2629.59, 2205.11)
[0000][PE] low and high boundaries for proper pairs: (1, 13484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 399.548 CPU sec, 61.703 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518294, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 420, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (899.52, 801.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1733, 3418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7942)
[0000][PE] mean and std.dev: (2219.18, 1867.58)
[0000][PE] low and high boundaries for proper pairs: (1, 10204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 402.532 CPU sec, 64.924 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518550, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 981, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3805)
[0000][PE] mean and std.dev: (933.68, 656.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1308, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (1245.69, 603.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 410.267 CPU sec, 60.572 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518722, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 350, 826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1994)
[0000][PE] mean and std.dev: (328.38, 207.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.80, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1664, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3676)
[0000][PE] mean and std.dev: (1557.00, 791.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 403.993 CPU sec, 66.135 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518230, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 388, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2507)
[0000][PE] mean and std.dev: (465.69, 375.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.41, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1326, 2293, 3764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8640)
[0000][PE] mean and std.dev: (2420.10, 1257.27)
[0000][PE] low and high boundaries for proper pairs: (1, 11078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 398.258 CPU sec, 63.440 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518784, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 490, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (722.05, 669.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.32, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1445, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (1335.27, 373.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 396.646 CPU sec, 65.711 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518407, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 484, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4200)
[0000][PE] mean and std.dev: (947.84, 957.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1338, 1891, 2766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5622)
[0000][PE] mean and std.dev: (1811.60, 944.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 409.855 CPU sec, 69.759 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518195, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 442, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3290)
[0000][PE] mean and std.dev: (634.04, 587.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.28, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1478, 2671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5753)
[0000][PE] mean and std.dev: (1745.24, 808.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 400.165 CPU sec, 58.186 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518330, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 593, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (885.92, 855.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.41, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 1090, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5199)
[0000][PE] mean and std.dev: (1341.21, 859.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6690)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 399.331 CPU sec, 61.195 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518279, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 377, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (512.25, 368.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.33, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1533, 2686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6134)
[0000][PE] mean and std.dev: (1895.43, 1137.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 399.891 CPU sec, 53.228 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518502, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 980, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4931)
[0000][PE] mean and std.dev: (1259.17, 1126.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.45, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1179, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5703)
[0000][PE] mean and std.dev: (1350.06, 835.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 405.091 CPU sec, 65.823 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518318, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 392, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2987)
[0000][PE] mean and std.dev: (646.04, 538.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1569, 2236, 2796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5250)
[0000][PE] mean and std.dev: (2321.85, 1059.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 394.902 CPU sec, 60.884 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518145, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 524, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2412)
[0000][PE] mean and std.dev: (670.43, 482.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1138, 3145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7427)
[0000][PE] mean and std.dev: (1753.62, 1246.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9568)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 403.822 CPU sec, 64.911 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518346, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 564, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5304)
[0000][PE] mean and std.dev: (1173.78, 1281.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.04, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1229, 1793, 3639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8459)
[0000][PE] mean and std.dev: (2322.38, 1601.43)
[0000][PE] low and high boundaries for proper pairs: (1, 10869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 407.876 CPU sec, 57.524 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518655, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 603, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4326)
[0000][PE] mean and std.dev: (790.80, 662.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.20, 111.48)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1318, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (1612.40, 1038.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 398.123 CPU sec, 51.254 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518210, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 485, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6612)
[0000][PE] mean and std.dev: (1253.58, 1516.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1484, 1548, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (914, 2339)
[0000][PE] mean and std.dev: (1511.00, 358.59)
[0000][PE] low and high boundaries for proper pairs: (77, 2945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 400.146 CPU sec, 61.407 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518251, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 580, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2878)
[0000][PE] mean and std.dev: (786.05, 573.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1223, 1711, 3100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6854)
[0000][PE] mean and std.dev: (1830.57, 1232.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 398.281 CPU sec, 56.441 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518343, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 405, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5115)
[0000][PE] mean and std.dev: (1070.82, 1249.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1465, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3329)
[0000][PE] mean and std.dev: (1366.75, 421.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 394.545 CPU sec, 56.869 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518650, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 655, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4530)
[0000][PE] mean and std.dev: (1021.50, 999.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.29, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1126, 1470, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3844)
[0000][PE] mean and std.dev: (1194.00, 660.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 397.349 CPU sec, 66.715 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518368, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 641, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4603)
[0000][PE] mean and std.dev: (891.47, 867.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1362, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2853)
[0000][PE] mean and std.dev: (1234.12, 555.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 399.940 CPU sec, 67.996 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517679, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 700, 900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2094)
[0000][PE] mean and std.dev: (699.67, 529.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.02, 110.87)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1323, 3553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8639)
[0000][PE] mean and std.dev: (1885.81, 1427.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 417.213 CPU sec, 69.209 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205866
	[0000][ M::kt_pipeline] read 1205866 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518295, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 1096, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5610)
[0000][PE] mean and std.dev: (1054.00, 892.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.50, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1290, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (1288.56, 571.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3831)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 392.234 CPU sec, 56.776 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205866
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518422, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 840, 3181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8869)
[0000][PE] mean and std.dev: (1799.36, 1994.46)
[0000][PE] low and high boundaries for proper pairs: (1, 11713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1461, 1724, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (39, 3594)
[0000][PE] mean and std.dev: (1615.50, 503.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205866 reads in 399.221 CPU sec, 59.241 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518432, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 831, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (939.33, 710.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1886, 3028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6580)
[0000][PE] mean and std.dev: (2378.19, 1586.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 392.603 CPU sec, 49.596 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518646, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 813, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5746)
[0000][PE] mean and std.dev: (1258.61, 1263.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.35, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 2164, 2765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5853)
[0000][PE] mean and std.dev: (1982.17, 988.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 392.864 CPU sec, 48.977 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518315, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 752, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4516)
[0000][PE] mean and std.dev: (1078.50, 1082.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1290, 1801, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3765)
[0000][PE] mean and std.dev: (1709.29, 762.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 401.384 CPU sec, 46.032 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517880, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 699, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5621)
[0000][PE] mean and std.dev: (1251.64, 1357.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.45, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1254, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2680)
[0000][PE] mean and std.dev: (1103.70, 258.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 394.777 CPU sec, 64.245 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518258, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 531, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6601)
[0000][PE] mean and std.dev: (1174.05, 1283.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.71, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1496, 3757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9179)
[0000][PE] mean and std.dev: (2481.50, 2158.27)
[0000][PE] low and high boundaries for proper pairs: (1, 11890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 396.478 CPU sec, 57.578 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518399, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 343, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (687.56, 795.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1575, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4593)
[0000][PE] mean and std.dev: (1622.53, 1016.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 397.275 CPU sec, 62.754 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517973, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 484, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2430)
[0000][PE] mean and std.dev: (588.11, 449.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1458, 3548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8412)
[0000][PE] mean and std.dev: (2267.11, 1860.90)
[0000][PE] low and high boundaries for proper pairs: (1, 10844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 392.993 CPU sec, 62.451 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518192, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 532, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (865.78, 797.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.58, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1293, 2593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5661)
[0000][PE] mean and std.dev: (1618.26, 896.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 402.691 CPU sec, 68.988 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518374, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 511, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (642.19, 575.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.72, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1212, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3828)
[0000][PE] mean and std.dev: (1364.89, 780.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 401.394 CPU sec, 68.651 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518745, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 741, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (977.77, 971.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.32, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1263, 1412, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (219, 2829)
[0000][PE] mean and std.dev: (1508.18, 412.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 402.197 CPU sec, 68.886 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518122, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 442, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (782.31, 708.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.05, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1821, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4182)
[0000][PE] mean and std.dev: (1683.07, 837.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 395.413 CPU sec, 63.821 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518498, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 785, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (803.35, 617.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.44, 110.94)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1243, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3109)
[0000][PE] mean and std.dev: (1216.13, 492.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 399.189 CPU sec, 60.871 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517821, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 833, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (827.55, 660.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1391, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (1547.90, 834.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 389.321 CPU sec, 47.584 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518486, 7, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 832, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (1044.93, 811.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.57, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1307, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3057)
[0000][PE] mean and std.dev: (1228.88, 471.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 393.458 CPU sec, 60.776 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518575, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 664, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (1013.50, 986.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.35, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1542, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4320)
[0000][PE] mean and std.dev: (1521.05, 935.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 391.404 CPU sec, 64.308 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518602, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 431, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (752.22, 704.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1478, 2598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5868)
[0000][PE] mean and std.dev: (1649.68, 1152.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 405.978 CPU sec, 52.668 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518698, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 618, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (789.68, 580.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1429, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5390)
[0000][PE] mean and std.dev: (1787.39, 979.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 390.047 CPU sec, 55.019 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518075, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 400, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2709)
[0000][PE] mean and std.dev: (699.17, 675.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.50, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1366, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4944)
[0000][PE] mean and std.dev: (1522.11, 929.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 398.326 CPU sec, 61.847 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518346, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 402, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2959)
[0000][PE] mean and std.dev: (678.43, 668.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.73, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1202, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5661)
[0000][PE] mean and std.dev: (1418.94, 1029.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 390.114 CPU sec, 63.587 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518666, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 438, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (725.15, 624.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.24, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1359, 1622, 2544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4914)
[0000][PE] mean and std.dev: (1760.35, 691.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 391.312 CPU sec, 66.658 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518245, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 1208, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4287)
[0000][PE] mean and std.dev: (1136.31, 943.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.50, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1427, 3455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8815)
[0000][PE] mean and std.dev: (2119.71, 1845.27)
[0000][PE] low and high boundaries for proper pairs: (1, 11495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 391.816 CPU sec, 58.464 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517825, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 778, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (926.73, 900.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.51, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1627, 2757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6697)
[0000][PE] mean and std.dev: (1592.45, 1094.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 394.504 CPU sec, 57.312 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518165, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 413, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3614)
[0000][PE] mean and std.dev: (831.93, 862.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1364, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3205)
[0000][PE] mean and std.dev: (1366.72, 597.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 409.208 CPU sec, 55.820 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518609, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 634, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2324)
[0000][PE] mean and std.dev: (512.21, 433.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1386, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4483)
[0000][PE] mean and std.dev: (1705.71, 847.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 399.979 CPU sec, 56.356 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518646, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 972, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (926.30, 739.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.31, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1721, 2825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6125)
[0000][PE] mean and std.dev: (1723.80, 848.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 402.857 CPU sec, 63.800 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518241, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 316, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1720)
[0000][PE] mean and std.dev: (385.94, 368.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.41)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 2152, 3233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8015)
[0000][PE] mean and std.dev: (2042.31, 1770.71)
[0000][PE] low and high boundaries for proper pairs: (1, 10406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 411.313 CPU sec, 58.719 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518360, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 668, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (666.00, 503.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.36, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1393, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3004)
[0000][PE] mean and std.dev: (1383.56, 612.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 400.292 CPU sec, 65.846 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518718, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 751, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2847)
[0000][PE] mean and std.dev: (762.33, 590.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.32, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 983, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2499)
[0000][PE] mean and std.dev: (1053.21, 498.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 411.524 CPU sec, 69.736 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518232, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 563, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4357)
[0000][PE] mean and std.dev: (1098.83, 1058.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1263, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (1144.69, 500.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 409.442 CPU sec, 65.735 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518125, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 533, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4119)
[0000][PE] mean and std.dev: (1003.00, 1050.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.71, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1496, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5116)
[0000][PE] mean and std.dev: (1712.35, 853.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 398.281 CPU sec, 62.358 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000144 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518078, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 758, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (897.33, 702.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.63, 111.66)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1328, 2194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4630)
[0000][PE] mean and std.dev: (1463.50, 847.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 401.744 CPU sec, 66.560 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519012, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 913, 2704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7294)
[0000][PE] mean and std.dev: (1333.74, 1588.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1489, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (1427.82, 549.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 400.086 CPU sec, 74.503 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518591, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 599, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (825.00, 701.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1439, 3593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8905)
[0000][PE] mean and std.dev: (2170.44, 1737.95)
[0000][PE] low and high boundaries for proper pairs: (1, 11561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 401.655 CPU sec, 70.207 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518359, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 551, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3882)
[0000][PE] mean and std.dev: (688.68, 660.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1263, 1531, 2855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6039)
[0000][PE] mean and std.dev: (1895.65, 1055.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 391.744 CPU sec, 55.137 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518475, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 791, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6059)
[0000][PE] mean and std.dev: (1129.87, 1177.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1423, 2599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6053)
[0000][PE] mean and std.dev: (1840.07, 1200.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 401.469 CPU sec, 61.127 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518483, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 1004, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5704)
[0000][PE] mean and std.dev: (1273.35, 947.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1547, 1877, 2874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5528)
[0000][PE] mean and std.dev: (2172.20, 1216.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 389.998 CPU sec, 65.432 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518280, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 1179, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6008)
[0000][PE] mean and std.dev: (1412.71, 1301.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.01)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1856, 2795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6455)
[0000][PE] mean and std.dev: (1994.00, 1131.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 394.931 CPU sec, 67.247 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517800, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 392, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4206)
[0000][PE] mean and std.dev: (805.57, 845.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.38, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1437, 2163, 2653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (2058.57, 1061.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 394.140 CPU sec, 71.995 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518058, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 1195, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4604)
[0000][PE] mean and std.dev: (1014.81, 860.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1476, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5230)
[0000][PE] mean and std.dev: (1819.15, 1189.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 400.084 CPU sec, 66.071 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517992, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 703, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3539)
[0000][PE] mean and std.dev: (836.00, 640.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1805, 3212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7270)
[0000][PE] mean and std.dev: (2108.33, 1632.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 403.997 CPU sec, 70.607 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518260, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 612, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4452)
[0000][PE] mean and std.dev: (1023.05, 1121.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.64, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1444, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (1509.38, 658.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 389.895 CPU sec, 58.409 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518174, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 407, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2710)
[0000][PE] mean and std.dev: (629.13, 581.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.59, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1319, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3144)
[0000][PE] mean and std.dev: (1415.07, 638.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 394.320 CPU sec, 56.161 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518015, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 970, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6667)
[0000][PE] mean and std.dev: (1604.64, 1816.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.42, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1123, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5753)
[0000][PE] mean and std.dev: (1603.21, 939.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 401.125 CPU sec, 54.367 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518297, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 617, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (726.44, 490.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.77, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1270, 2505, 6324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16432)
[0000][PE] mean and std.dev: (3163.62, 2222.56)
[0000][PE] low and high boundaries for proper pairs: (1, 21486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 402.423 CPU sec, 63.664 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518547, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 405, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3901)
[0000][PE] mean and std.dev: (757.40, 810.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1489, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5538)
[0000][PE] mean and std.dev: (1629.28, 1109.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 392.321 CPU sec, 48.586 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518234, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 413, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2288)
[0000][PE] mean and std.dev: (521.41, 435.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.52)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 399.794 CPU sec, 61.892 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205480
	[0000][ M::kt_pipeline] read 1205480 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518396, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 464, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3107)
[0000][PE] mean and std.dev: (600.79, 562.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.49, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1441, 3134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7570)
[0000][PE] mean and std.dev: (2208.00, 1869.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 400.855 CPU sec, 56.655 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 518343, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 926, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (606.73, 477.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.32, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1514, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6322)
[0000][PE] mean and std.dev: (1983.93, 1362.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205480 reads in 390.867 CPU sec, 56.393 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518417, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 869, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4009)
[0000][PE] mean and std.dev: (1035.12, 1029.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1577, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3989)
[0000][PE] mean and std.dev: (1524.54, 777.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 398.966 CPU sec, 61.087 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518010, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 357, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4146)
[0000][PE] mean and std.dev: (831.04, 893.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.51)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1186, 2387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5421)
[0000][PE] mean and std.dev: (1539.06, 1004.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 392.257 CPU sec, 62.466 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518270, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 528, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (660.18, 664.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1825, 2899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6573)
[0000][PE] mean and std.dev: (1868.67, 1151.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 391.703 CPU sec, 56.402 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205892
	[0000][ M::kt_pipeline] read 1205892 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517783, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 720, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5407)
[0000][PE] mean and std.dev: (1387.17, 1518.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.19, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 2238, 3346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8414)
[0000][PE] mean and std.dev: (1643.90, 1163.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 394.065 CPU sec, 55.427 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205892
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518054, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 982, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4467)
[0000][PE] mean and std.dev: (1134.78, 972.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.67, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1383, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3223)
[0000][PE] mean and std.dev: (1316.35, 580.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205892 reads in 393.850 CPU sec, 62.069 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518511, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 879, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6525)
[0000][PE] mean and std.dev: (1381.16, 1339.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.31, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1186, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3018)
[0000][PE] mean and std.dev: (1161.18, 619.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 397.945 CPU sec, 56.875 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518256, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 534, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3658)
[0000][PE] mean and std.dev: (759.30, 789.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.58, 111.49)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1271, 1814, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4577)
[0000][PE] mean and std.dev: (1631.36, 947.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 391.343 CPU sec, 55.416 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518855, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 441, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3933)
[0000][PE] mean and std.dev: (833.04, 844.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 846)
[0000][PE] mean and std.dev: (482.84, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 2251, 3171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7705)
[0000][PE] mean and std.dev: (2273.68, 1690.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 397.524 CPU sec, 63.960 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518547, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 465, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3710)
[0000][PE] mean and std.dev: (915.56, 951.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.33, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1562, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4073)
[0000][PE] mean and std.dev: (1525.53, 811.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 390.001 CPU sec, 51.466 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518385, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 308, 988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2430)
[0000][PE] mean and std.dev: (540.00, 498.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.42)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1354, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4563)
[0000][PE] mean and std.dev: (1434.82, 888.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 393.307 CPU sec, 61.050 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518149, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 403, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2252)
[0000][PE] mean and std.dev: (534.50, 327.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1308, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1587.22, 960.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 392.747 CPU sec, 50.364 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517963, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 811, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5054)
[0000][PE] mean and std.dev: (1322.40, 1268.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1197, 2056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (1284.64, 637.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 394.398 CPU sec, 58.728 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518036, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 885, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4616)
[0000][PE] mean and std.dev: (1107.49, 979.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.29, 110.92)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1271, 2251, 3250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7208)
[0000][PE] mean and std.dev: (1965.21, 1256.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 396.735 CPU sec, 62.993 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518792, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 354, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (804.00, 873.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.35, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1572, 5165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13247)
[0000][PE] mean and std.dev: (2579.06, 2108.27)
[0000][PE] low and high boundaries for proper pairs: (1, 17288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 390.358 CPU sec, 52.924 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518102, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 415, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3656)
[0000][PE] mean and std.dev: (690.06, 789.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1348, 1586, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3937)
[0000][PE] mean and std.dev: (1597.31, 535.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 395.594 CPU sec, 59.735 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518247, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 738, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4198)
[0000][PE] mean and std.dev: (1051.61, 1002.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5521)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.24, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1290, 1783, 3037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6531)
[0000][PE] mean and std.dev: (2205.42, 1163.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 401.101 CPU sec, 60.597 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518193, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 1246, 2794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7814)
[0000][PE] mean and std.dev: (1713.92, 1766.84)
[0000][PE] low and high boundaries for proper pairs: (1, 10324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.64, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1633, 2606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5910)
[0000][PE] mean and std.dev: (1796.53, 1231.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 409.948 CPU sec, 58.406 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518196, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 454, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (874.61, 869.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1000, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5354)
[0000][PE] mean and std.dev: (1234.06, 937.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 398.193 CPU sec, 59.839 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518201, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 387, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (578.37, 447.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.43, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1777, 3022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7020)
[0000][PE] mean and std.dev: (1788.07, 1246.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 396.821 CPU sec, 55.656 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517994, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 1113, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4722)
[0000][PE] mean and std.dev: (1282.94, 1017.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1273, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5628)
[0000][PE] mean and std.dev: (1578.62, 783.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 394.100 CPU sec, 59.078 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518307, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 697, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4716)
[0000][PE] mean and std.dev: (927.30, 938.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.53, 111.49)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1517, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5639)
[0000][PE] mean and std.dev: (1692.37, 964.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 409.272 CPU sec, 61.545 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518389, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 385, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (771.00, 685.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 110.99)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1122, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5047)
[0000][PE] mean and std.dev: (1460.64, 889.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 403.771 CPU sec, 62.216 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518194, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 369, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3065)
[0000][PE] mean and std.dev: (624.04, 628.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.33, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1793, 3992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9622)
[0000][PE] mean and std.dev: (2385.12, 1761.10)
[0000][PE] low and high boundaries for proper pairs: (1, 12437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 395.986 CPU sec, 58.561 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518464, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 445, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (693.78, 591.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1245, 2155, 3384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7662)
[0000][PE] mean and std.dev: (2535.20, 1773.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 398.431 CPU sec, 60.353 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518460, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 781, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4781)
[0000][PE] mean and std.dev: (1061.37, 1063.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1296, 2010, 5596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14196)
[0000][PE] mean and std.dev: (3036.19, 2523.25)
[0000][PE] low and high boundaries for proper pairs: (1, 18496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 396.158 CPU sec, 66.612 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518838, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 604, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2744)
[0000][PE] mean and std.dev: (706.33, 520.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3556)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.32, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 1512, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (1319.92, 566.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 394.214 CPU sec, 61.183 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518094, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 488, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4380)
[0000][PE] mean and std.dev: (801.88, 712.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.37, 110.86)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1692, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4769)
[0000][PE] mean and std.dev: (1582.46, 702.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 395.518 CPU sec, 67.815 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518347, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 458, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3325)
[0000][PE] mean and std.dev: (674.18, 606.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.63, 111.46)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1273, 1820, 3551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8107)
[0000][PE] mean and std.dev: (2184.45, 1655.26)
[0000][PE] low and high boundaries for proper pairs: (1, 10385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 390.715 CPU sec, 56.181 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518333, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 720, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5575)
[0000][PE] mean and std.dev: (939.77, 853.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 110.94)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1586, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4827)
[0000][PE] mean and std.dev: (1541.84, 738.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 395.389 CPU sec, 57.559 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518134, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 718, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (980.48, 837.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1520, 2205, 2766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1944.00, 1021.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 400.510 CPU sec, 50.831 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518453, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 853, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (755.67, 561.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.29, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1207, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2838)
[0000][PE] mean and std.dev: (1200.39, 604.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 397.084 CPU sec, 53.407 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518515, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 501, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4070)
[0000][PE] mean and std.dev: (815.59, 731.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.44, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1555, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3442)
[0000][PE] mean and std.dev: (1423.38, 715.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 400.108 CPU sec, 59.101 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518698, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 851, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5287)
[0000][PE] mean and std.dev: (1079.80, 901.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.76, 111.41)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1383, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (1256.00, 464.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 399.029 CPU sec, 60.887 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518264, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 417, 3128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8796)
[0000][PE] mean and std.dev: (1491.63, 1574.39)
[0000][PE] low and high boundaries for proper pairs: (1, 11630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1535, 5159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13693)
[0000][PE] mean and std.dev: (2710.76, 2332.70)
[0000][PE] low and high boundaries for proper pairs: (1, 17960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 403.746 CPU sec, 63.414 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518389, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 584, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5836)
[0000][PE] mean and std.dev: (1368.23, 1561.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (796, 1001, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (1275.35, 771.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 401.506 CPU sec, 66.319 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517950, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 686, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4422)
[0000][PE] mean and std.dev: (937.00, 896.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1505, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (1431.00, 642.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 410.082 CPU sec, 62.566 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517946, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 629, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (664.03, 547.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 110.83)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1191, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4616)
[0000][PE] mean and std.dev: (1672.82, 1233.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 403.447 CPU sec, 59.151 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518569, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 401, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2409)
[0000][PE] mean and std.dev: (538.29, 461.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1265, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (1309.20, 566.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 399.347 CPU sec, 63.255 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518460, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 863, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4353)
[0000][PE] mean and std.dev: (1108.30, 1045.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1673, 2768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6074)
[0000][PE] mean and std.dev: (1845.92, 1039.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 393.786 CPU sec, 56.568 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518449, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 481, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2656)
[0000][PE] mean and std.dev: (605.35, 377.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 110.98)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1792, 2357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4953)
[0000][PE] mean and std.dev: (1576.13, 680.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 408.453 CPU sec, 48.927 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518124, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 674, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (858.10, 831.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.10, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1550, 2480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5356)
[0000][PE] mean and std.dev: (1542.42, 746.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 406.520 CPU sec, 65.289 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518007, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 296, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1956)
[0000][PE] mean and std.dev: (420.62, 345.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1110, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4099)
[0000][PE] mean and std.dev: (1309.30, 735.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 400.325 CPU sec, 61.939 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518016, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 422, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4438)
[0000][PE] mean and std.dev: (869.96, 988.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1511, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6621)
[0000][PE] mean and std.dev: (1944.70, 1576.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 396.008 CPU sec, 63.962 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518538, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 453, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2411)
[0000][PE] mean and std.dev: (613.72, 511.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1525, 2549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5635)
[0000][PE] mean and std.dev: (1589.50, 1059.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 392.793 CPU sec, 53.332 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518556, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 387, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5086)
[0000][PE] mean and std.dev: (1119.76, 1276.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.29, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1463, 3347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7839)
[0000][PE] mean and std.dev: (2165.63, 1910.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 394.568 CPU sec, 67.457 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518558, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 643, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5020)
[0000][PE] mean and std.dev: (1171.95, 1150.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.64, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1321, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3614)
[0000][PE] mean and std.dev: (1342.29, 759.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 392.425 CPU sec, 60.824 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518164, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 495, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2002)
[0000][PE] mean and std.dev: (572.29, 473.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1443, 2407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5013)
[0000][PE] mean and std.dev: (1724.68, 1121.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 395.586 CPU sec, 66.595 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518253, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 584, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2930)
[0000][PE] mean and std.dev: (640.55, 521.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1591, 2901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6839)
[0000][PE] mean and std.dev: (1709.50, 1061.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 399.081 CPU sec, 61.342 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518328, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 946, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (1031.50, 832.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.78, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1442, 2032, 2336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (1875.17, 840.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 391.720 CPU sec, 48.283 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518488, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 849, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (1023.04, 895.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.31, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1688, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3895)
[0000][PE] mean and std.dev: (1426.21, 688.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 409.455 CPU sec, 57.013 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518280, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 716, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (966.90, 863.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.46, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1167, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5107)
[0000][PE] mean and std.dev: (1454.94, 1024.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 402.082 CPU sec, 64.956 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518481, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 905, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (915.29, 707.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 2367, 3959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9423)
[0000][PE] mean and std.dev: (3072.82, 2258.37)
[0000][PE] low and high boundaries for proper pairs: (1, 12155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 402.019 CPU sec, 60.834 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518467, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 467, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3601)
[0000][PE] mean and std.dev: (779.93, 699.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1190, 2498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5964)
[0000][PE] mean and std.dev: (1444.26, 948.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 394.171 CPU sec, 59.323 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518156, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 647, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (928.79, 840.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1636, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4028)
[0000][PE] mean and std.dev: (1476.00, 573.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 398.611 CPU sec, 58.263 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518532, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 461, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5138)
[0000][PE] mean and std.dev: (1034.28, 1120.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1880, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5183)
[0000][PE] mean and std.dev: (1942.69, 1102.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 393.643 CPU sec, 54.613 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517954, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 940, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5616)
[0000][PE] mean and std.dev: (1211.32, 1071.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.57, 110.98)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1629, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4677)
[0000][PE] mean and std.dev: (1593.15, 786.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 390.582 CPU sec, 44.710 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518341, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 1017, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4958)
[0000][PE] mean and std.dev: (1460.23, 1539.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.46, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1561, 3078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6702)
[0000][PE] mean and std.dev: (1972.65, 1010.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 393.541 CPU sec, 51.534 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518334, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 969, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5671)
[0000][PE] mean and std.dev: (954.62, 730.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.36, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1802, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (1560.31, 878.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 407.420 CPU sec, 55.677 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518448, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 549, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3970)
[0000][PE] mean and std.dev: (793.70, 649.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1744, 3312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7544)
[0000][PE] mean and std.dev: (1779.50, 943.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 392.158 CPU sec, 59.087 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518224, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 482, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (673.20, 491.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.54, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1506, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4416)
[0000][PE] mean and std.dev: (1356.09, 967.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 394.371 CPU sec, 57.301 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518506, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 676, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6326)
[0000][PE] mean and std.dev: (1179.71, 1214.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.14, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1401, 1669, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (1708.12, 844.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6097)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 390.384 CPU sec, 56.968 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518123, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 621, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5497)
[0000][PE] mean and std.dev: (1037.85, 990.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.49, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (683, 1206, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2831)
[0000][PE] mean and std.dev: (1002.19, 470.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 394.565 CPU sec, 63.086 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518224, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 1191, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6844)
[0000][PE] mean and std.dev: (1477.62, 1501.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1496, 2080, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3875)
[0000][PE] mean and std.dev: (1589.60, 711.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 393.794 CPU sec, 52.711 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518189, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 1572, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6409)
[0000][PE] mean and std.dev: (1375.63, 1146.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1547, 2253, 3363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6995)
[0000][PE] mean and std.dev: (1751.11, 885.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 396.088 CPU sec, 62.416 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517941, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 908, 4264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11906)
[0000][PE] mean and std.dev: (2086.69, 2015.60)
[0000][PE] low and high boundaries for proper pairs: (1, 15727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.53, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 392.020 CPU sec, 55.681 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518460, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 612, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (960.59, 1042.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1176, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2938)
[0000][PE] mean and std.dev: (1142.64, 436.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 393.610 CPU sec, 66.477 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518672, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 456, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (889.39, 913.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.13, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1418, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5310)
[0000][PE] mean and std.dev: (1750.29, 1176.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 391.045 CPU sec, 51.441 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518427, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 678, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (843.77, 696.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.65, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1345, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4636)
[0000][PE] mean and std.dev: (1462.93, 771.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5850)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 389.109 CPU sec, 52.957 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518216, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 410, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2514)
[0000][PE] mean and std.dev: (676.78, 589.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.46, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1815, 2790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6326)
[0000][PE] mean and std.dev: (1655.42, 897.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 393.566 CPU sec, 54.267 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518078, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 884, 2509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6837)
[0000][PE] mean and std.dev: (1390.35, 1354.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 110.95)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 1124, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3573)
[0000][PE] mean and std.dev: (1200.35, 578.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 397.921 CPU sec, 57.735 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519025, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 289, 729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1819)
[0000][PE] mean and std.dev: (413.30, 366.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.36, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 396.158 CPU sec, 50.880 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518011, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 365, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2759)
[0000][PE] mean and std.dev: (567.77, 477.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.22, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1115, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5138)
[0000][PE] mean and std.dev: (1207.71, 878.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 394.200 CPU sec, 60.431 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517748, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 369, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3031)
[0000][PE] mean and std.dev: (684.59, 629.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.42)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1452, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4255)
[0000][PE] mean and std.dev: (1326.57, 750.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 394.771 CPU sec, 57.141 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518651, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 294, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (58, 583)
[0000][PE] mean and std.dev: (269.61, 61.52)
[0000][PE] low and high boundaries for proper pairs: (1, 688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1662, 2176, 3299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6573)
[0000][PE] mean and std.dev: (2564.73, 1488.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 395.201 CPU sec, 58.879 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518434, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 436, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2892)
[0000][PE] mean and std.dev: (653.73, 563.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1260, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5678)
[0000][PE] mean and std.dev: (1602.59, 1071.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 395.363 CPU sec, 66.619 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518399, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 341, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (639.97, 631.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.53, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1549, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3807)
[0000][PE] mean and std.dev: (1513.31, 959.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 398.668 CPU sec, 71.012 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517734, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 452, 2349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6555)
[0000][PE] mean and std.dev: (1119.95, 1306.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1504, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3824)
[0000][PE] mean and std.dev: (1584.85, 569.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 405.259 CPU sec, 68.047 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518544, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 362, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2829)
[0000][PE] mean and std.dev: (634.15, 648.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1549, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5221)
[0000][PE] mean and std.dev: (1537.00, 805.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 400.524 CPU sec, 62.915 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518022, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 656, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (878.04, 849.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.30, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1625, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5024)
[0000][PE] mean and std.dev: (1801.65, 1092.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 396.437 CPU sec, 67.430 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518077, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 477, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3335)
[0000][PE] mean and std.dev: (802.04, 905.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1344, 1742, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (1518.50, 655.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 392.825 CPU sec, 62.985 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518647, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 280, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (684.43, 754.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.68, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1344, 2448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5642)
[0000][PE] mean and std.dev: (1377.81, 725.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 409.907 CPU sec, 61.331 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518328, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 719, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (873.12, 766.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.31, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1210, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2985)
[0000][PE] mean and std.dev: (1172.25, 443.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 389.818 CPU sec, 51.419 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518194, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 338, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2105)
[0000][PE] mean and std.dev: (469.19, 392.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1586, 5147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13451)
[0000][PE] mean and std.dev: (2456.69, 1785.82)
[0000][PE] low and high boundaries for proper pairs: (1, 17603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 397.562 CPU sec, 68.399 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518080, 0, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 369, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4317)
[0000][PE] mean and std.dev: (864.24, 852.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.33, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 1209, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (1243.50, 726.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 394.396 CPU sec, 64.644 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518794, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 552, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4613)
[0000][PE] mean and std.dev: (940.07, 924.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.56, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1494, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4994)
[0000][PE] mean and std.dev: (1388.07, 661.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 396.152 CPU sec, 60.028 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518377, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 648, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4791)
[0000][PE] mean and std.dev: (1009.22, 940.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.42, 111.01)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1318, 2908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7038)
[0000][PE] mean and std.dev: (1839.74, 1309.75)
[0000][PE] low and high boundaries for proper pairs: (1, 9103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 398.319 CPU sec, 53.179 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519036, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 364, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (679.03, 580.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.43, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1130, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (1281.05, 568.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 393.844 CPU sec, 55.557 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518310, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 853, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3566)
[0000][PE] mean and std.dev: (846.10, 615.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.59, 111.47)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1284, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3471)
[0000][PE] mean and std.dev: (1360.50, 745.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 396.790 CPU sec, 64.427 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518947, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 443, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (789.00, 828.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.20, 110.84)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1572, 2851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6485)
[0000][PE] mean and std.dev: (1741.19, 966.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 410.051 CPU sec, 54.694 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518241, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 850, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (966.50, 881.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.51, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1077, 3081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7465)
[0000][PE] mean and std.dev: (1876.35, 1890.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 396.567 CPU sec, 55.420 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518311, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 381, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2489)
[0000][PE] mean and std.dev: (566.04, 589.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.98, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1377, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (1317.00, 719.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 398.626 CPU sec, 51.575 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518261, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 443, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (977.59, 878.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1767, 4422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11784)
[0000][PE] mean and std.dev: (2742.00, 2645.20)
[0000][PE] low and high boundaries for proper pairs: (1, 15465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 403.223 CPU sec, 67.905 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518408, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 522, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2432)
[0000][PE] mean and std.dev: (687.00, 552.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1253, 3467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8709)
[0000][PE] mean and std.dev: (1748.17, 1409.64)
[0000][PE] low and high boundaries for proper pairs: (1, 11330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 394.013 CPU sec, 52.961 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518391, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 1023, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6025)
[0000][PE] mean and std.dev: (1434.15, 1499.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.57, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1453, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (1457.35, 751.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 398.339 CPU sec, 53.657 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518388, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 1071, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5775)
[0000][PE] mean and std.dev: (1413.71, 1228.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.34, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1602, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (1442.85, 456.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 396.062 CPU sec, 57.835 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518469, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 362, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4390)
[0000][PE] mean and std.dev: (802.83, 894.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1392, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2685)
[0000][PE] mean and std.dev: (1121.22, 446.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 393.546 CPU sec, 57.517 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518445, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 715, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4428)
[0000][PE] mean and std.dev: (1000.48, 1011.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.38, 110.83)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1351, 2524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5808)
[0000][PE] mean and std.dev: (1828.36, 1235.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 390.374 CPU sec, 55.022 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518843, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 691, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3803)
[0000][PE] mean and std.dev: (904.28, 791.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.23, 111.51)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1315, 3060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7546)
[0000][PE] mean and std.dev: (1751.77, 1388.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 410.528 CPU sec, 62.562 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518237, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1148, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6114)
[0000][PE] mean and std.dev: (1284.48, 1213.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.38, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1904, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4431)
[0000][PE] mean and std.dev: (1724.07, 856.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 394.108 CPU sec, 68.804 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518360, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 432, 868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1986)
[0000][PE] mean and std.dev: (518.26, 429.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1139, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (1319.91, 805.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 391.020 CPU sec, 53.445 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518554, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 657, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7034)
[0000][PE] mean and std.dev: (1587.80, 1961.13)
[0000][PE] low and high boundaries for proper pairs: (1, 9432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1404, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5430)
[0000][PE] mean and std.dev: (1572.37, 980.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 391.236 CPU sec, 63.108 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518376, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 802, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4967)
[0000][PE] mean and std.dev: (983.50, 823.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1335, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4642)
[0000][PE] mean and std.dev: (1299.31, 616.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 391.927 CPU sec, 56.318 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517969, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 313, 387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 823)
[0000][PE] mean and std.dev: (259.50, 131.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1474, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4991)
[0000][PE] mean and std.dev: (1325.00, 743.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 392.558 CPU sec, 52.363 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518722, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 365, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (896.88, 1017.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.26, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1351, 2020, 3585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8053)
[0000][PE] mean and std.dev: (2195.95, 1043.28)
[0000][PE] low and high boundaries for proper pairs: (1, 10287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 390.708 CPU sec, 55.955 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518018, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 500, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (873.64, 757.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1892, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5662)
[0000][PE] mean and std.dev: (1920.73, 1377.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 390.692 CPU sec, 55.775 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518281, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 449, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2295)
[0000][PE] mean and std.dev: (556.39, 425.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1299, 1524, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3381)
[0000][PE] mean and std.dev: (1610.47, 536.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 392.384 CPU sec, 56.062 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518606, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 838, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4400)
[0000][PE] mean and std.dev: (985.47, 806.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1250, 2745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6037)
[0000][PE] mean and std.dev: (1697.17, 1108.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 389.951 CPU sec, 48.897 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518492, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 399, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (768.48, 716.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1118, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4613)
[0000][PE] mean and std.dev: (1316.25, 886.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 394.487 CPU sec, 64.849 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518537, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 792, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4162)
[0000][PE] mean and std.dev: (864.41, 759.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.56, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1328, 2315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5039)
[0000][PE] mean and std.dev: (1632.15, 789.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 395.751 CPU sec, 61.705 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517768, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 509, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4175)
[0000][PE] mean and std.dev: (877.00, 818.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.02)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 896, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (1124.24, 647.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 399.315 CPU sec, 59.346 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518269, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 517, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (753.28, 693.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1771, 2842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6196)
[0000][PE] mean and std.dev: (2034.14, 1160.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 391.900 CPU sec, 57.560 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518364, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 358, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2623)
[0000][PE] mean and std.dev: (542.36, 588.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1439, 2364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5660)
[0000][PE] mean and std.dev: (1521.15, 1084.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 400.664 CPU sec, 53.107 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518320, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 802, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5082)
[0000][PE] mean and std.dev: (981.40, 888.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1412, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5259)
[0000][PE] mean and std.dev: (1499.82, 636.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6650)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 391.358 CPU sec, 55.307 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518543, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 620, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6616)
[0000][PE] mean and std.dev: (1297.07, 1327.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8730)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.67, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1292, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (1377.60, 670.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 411.044 CPU sec, 64.364 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518774, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 504, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (838.90, 741.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1728, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6995)
[0000][PE] mean and std.dev: (1747.54, 1087.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 403.457 CPU sec, 56.142 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518213, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 553, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3017)
[0000][PE] mean and std.dev: (654.76, 440.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.71, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1108, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4796)
[0000][PE] mean and std.dev: (1430.84, 1046.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 397.962 CPU sec, 65.577 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518137, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 434, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (764.95, 745.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.73, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1486, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (1439.82, 783.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5444)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 398.330 CPU sec, 60.682 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518583, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 511, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (672.75, 576.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.72, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1244, 1728, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5507)
[0000][PE] mean and std.dev: (1735.17, 889.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 394.344 CPU sec, 65.270 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518058, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 805, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5228)
[0000][PE] mean and std.dev: (1050.38, 1019.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1411, 1886, 2718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5332)
[0000][PE] mean and std.dev: (1931.37, 1023.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 396.043 CPU sec, 62.273 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518445, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (526, 802, 2802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7354)
[0000][PE] mean and std.dev: (1274.67, 1388.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (481.99, 110.93)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1372, 2513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5259)
[0000][PE] mean and std.dev: (1777.33, 949.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 394.343 CPU sec, 51.492 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518570, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (828, 1309, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4986)
[0000][PE] mean and std.dev: (1255.42, 814.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1117, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (1249.42, 727.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 395.720 CPU sec, 60.493 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518528, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 338, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (571.08, 495.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1330, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4181)
[0000][PE] mean and std.dev: (1545.71, 679.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 391.870 CPU sec, 54.029 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517834, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 707, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (922.17, 730.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.20, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1833, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5074)
[0000][PE] mean and std.dev: (1763.86, 1074.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 395.978 CPU sec, 53.760 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 517880, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 657, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3217)
[0000][PE] mean and std.dev: (864.64, 756.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1360, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4876)
[0000][PE] mean and std.dev: (1468.15, 921.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 394.959 CPU sec, 58.871 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517795, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 874, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2826)
[0000][PE] mean and std.dev: (755.00, 548.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1177, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4507)
[0000][PE] mean and std.dev: (1378.05, 809.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 401.913 CPU sec, 71.051 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518230, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 653, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3388)
[0000][PE] mean and std.dev: (837.48, 856.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1173, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (243, 2173)
[0000][PE] mean and std.dev: (1168.33, 307.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 393.763 CPU sec, 55.413 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518787, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 689, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4195)
[0000][PE] mean and std.dev: (1117.63, 1130.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.49, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1327, 1528, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (1765.00, 833.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 399.427 CPU sec, 52.524 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518375, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 337, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1771)
[0000][PE] mean and std.dev: (444.55, 404.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.12, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (409, 1413, 2732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7378)
[0000][PE] mean and std.dev: (1524.00, 1238.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 393.556 CPU sec, 52.825 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518559, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 456, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3969)
[0000][PE] mean and std.dev: (977.32, 1059.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1332, 2348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4876)
[0000][PE] mean and std.dev: (1665.25, 947.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 392.651 CPU sec, 56.405 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517972, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 1272, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (1296.36, 1050.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.13, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1484, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4689)
[0000][PE] mean and std.dev: (1685.45, 706.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 405.130 CPU sec, 67.781 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518477, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 802, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3216)
[0000][PE] mean and std.dev: (930.30, 766.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.73, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1338, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3743)
[0000][PE] mean and std.dev: (1283.15, 616.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 407.053 CPU sec, 63.006 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518047, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 502, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (778.31, 672.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.49)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1467, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (1520.67, 685.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 396.505 CPU sec, 55.310 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518574, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 805, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (1000.07, 950.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1324, 1661, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (1761.50, 994.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 395.767 CPU sec, 52.557 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518327, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 515, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3831)
[0000][PE] mean and std.dev: (884.09, 767.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1294, 2767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6281)
[0000][PE] mean and std.dev: (1613.73, 1056.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 394.484 CPU sec, 57.865 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518373, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 448, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3984)
[0000][PE] mean and std.dev: (783.45, 819.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.72, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 392.400 CPU sec, 55.082 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518512, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 821, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4651)
[0000][PE] mean and std.dev: (909.65, 760.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.38, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1397, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4468)
[0000][PE] mean and std.dev: (1560.07, 895.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 388.403 CPU sec, 60.231 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518339, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 326, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4510)
[0000][PE] mean and std.dev: (895.74, 909.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 111.42)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1598, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3898)
[0000][PE] mean and std.dev: (1127.38, 622.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 389.369 CPU sec, 53.336 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518557, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 690, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (1036.10, 1037.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1576, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5475)
[0000][PE] mean and std.dev: (1831.52, 1227.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 395.499 CPU sec, 56.760 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517862, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 613, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3669)
[0000][PE] mean and std.dev: (721.47, 572.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1270, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (1385.37, 762.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 401.085 CPU sec, 56.459 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517957, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 412, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4715)
[0000][PE] mean and std.dev: (908.42, 1012.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1370, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (1493.61, 696.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 397.337 CPU sec, 53.623 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518310, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 1429, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (1252.71, 970.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.73, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1361, 4529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11813)
[0000][PE] mean and std.dev: (2292.23, 2086.59)
[0000][PE] low and high boundaries for proper pairs: (1, 15455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 395.065 CPU sec, 53.916 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518381, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 422, 1178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (663.76, 735.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1304, 2698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6508)
[0000][PE] mean and std.dev: (1662.21, 1496.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 406.345 CPU sec, 58.553 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 518536, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 443, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (758.25, 685.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (620, 1029, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3860)
[0000][PE] mean and std.dev: (1116.84, 761.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 397.934 CPU sec, 45.134 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518289, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 558, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (721.15, 542.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1523, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (1661.41, 689.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 400.156 CPU sec, 39.861 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518623, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 559, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3969)
[0000][PE] mean and std.dev: (789.78, 674.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 2120, 2685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5505)
[0000][PE] mean and std.dev: (1842.33, 712.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 407.924 CPU sec, 42.668 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518256, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 538, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3073)
[0000][PE] mean and std.dev: (653.92, 510.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.61, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1340, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5565)
[0000][PE] mean and std.dev: (1775.36, 1218.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 389.992 CPU sec, 38.334 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518599, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 657, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4681)
[0000][PE] mean and std.dev: (1004.32, 960.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.73, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 387.853 CPU sec, 48.635 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518465, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 362, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2702)
[0000][PE] mean and std.dev: (463.00, 436.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1424, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5059)
[0000][PE] mean and std.dev: (1790.50, 1268.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 405.669 CPU sec, 47.272 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518739, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 613, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6311)
[0000][PE] mean and std.dev: (1245.26, 1279.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.36, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 396.862 CPU sec, 48.048 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518218, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 484, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (518.06, 457.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1240, 3116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7380)
[0000][PE] mean and std.dev: (1723.69, 1156.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 397.617 CPU sec, 49.400 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518728, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 338, 810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1946)
[0000][PE] mean and std.dev: (469.12, 379.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.36, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1271, 1802, 2936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6266)
[0000][PE] mean and std.dev: (2145.95, 1513.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 402.357 CPU sec, 50.314 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518334, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 528, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4164)
[0000][PE] mean and std.dev: (921.24, 851.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1695, 2106, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (221, 3906)
[0000][PE] mean and std.dev: (1946.77, 708.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 397.724 CPU sec, 42.914 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518206, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 564, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (1008.62, 1089.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.52, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 904, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4847)
[0000][PE] mean and std.dev: (1150.23, 694.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 402.820 CPU sec, 46.557 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518086, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 426, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3664)
[0000][PE] mean and std.dev: (864.51, 842.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.68, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1023, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6852)
[0000][PE] mean and std.dev: (1826.53, 1634.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 403.175 CPU sec, 49.387 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 518128, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1238, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5840)
[0000][PE] mean and std.dev: (884.00, 799.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.18, 110.80)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1295, 1504, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (1476.82, 674.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 400.394 CPU sec, 45.358 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205864
	[0000][ M::kt_pipeline] read 1205864 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518222, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 366, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2113)
[0000][PE] mean and std.dev: (461.33, 359.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1299, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5629)
[0000][PE] mean and std.dev: (1738.88, 978.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 407.793 CPU sec, 43.795 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205864
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518509, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 802, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (893.74, 778.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.14, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1422, 3143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7433)
[0000][PE] mean and std.dev: (2014.45, 1398.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205864 reads in 401.232 CPU sec, 48.684 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518573, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 776, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3785)
[0000][PE] mean and std.dev: (1013.32, 986.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.28, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (635, 1150, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4517)
[0000][PE] mean and std.dev: (1242.62, 742.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 405.984 CPU sec, 46.303 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517883, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 575, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2927)
[0000][PE] mean and std.dev: (696.16, 702.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1185, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (1103.46, 517.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 400.176 CPU sec, 49.608 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518832, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 698, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4863)
[0000][PE] mean and std.dev: (1048.97, 994.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1728, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (1785.42, 931.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 392.766 CPU sec, 42.358 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518295, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 367, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3853)
[0000][PE] mean and std.dev: (828.29, 868.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1414, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3881)
[0000][PE] mean and std.dev: (1191.41, 659.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 406.189 CPU sec, 49.591 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518234, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 740, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4551)
[0000][PE] mean and std.dev: (881.74, 694.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1397, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3727)
[0000][PE] mean and std.dev: (1400.52, 692.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 405.951 CPU sec, 55.435 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518708, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 485, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2114)
[0000][PE] mean and std.dev: (433.22, 233.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1469, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (1511.00, 966.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 410.929 CPU sec, 51.581 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518528, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 396, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (728.15, 659.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1537, 3868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9478)
[0000][PE] mean and std.dev: (2287.57, 1967.75)
[0000][PE] low and high boundaries for proper pairs: (1, 12283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 399.629 CPU sec, 46.903 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518777, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 400, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7700)
[0000][PE] mean and std.dev: (1172.55, 1283.93)
[0000][PE] low and high boundaries for proper pairs: (1, 10193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.56, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1488, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6091)
[0000][PE] mean and std.dev: (1677.44, 1227.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 395.480 CPU sec, 51.354 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518652, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 694, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2723)
[0000][PE] mean and std.dev: (638.96, 408.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1260, 1682, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (1429.90, 593.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 397.750 CPU sec, 52.767 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518518, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 882, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4720)
[0000][PE] mean and std.dev: (963.67, 750.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1054, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4895)
[0000][PE] mean and std.dev: (1342.29, 901.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 395.112 CPU sec, 46.971 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518183, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 359, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (428.00, 345.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.68, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1016, 2697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6397)
[0000][PE] mean and std.dev: (1763.75, 1536.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 409.863 CPU sec, 41.649 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518614, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 797, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4333)
[0000][PE] mean and std.dev: (953.91, 772.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.71, 110.95)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1287, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1400.12, 662.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 394.213 CPU sec, 52.355 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518141, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 511, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (945.17, 889.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 110.97)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1532, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2842)
[0000][PE] mean and std.dev: (1460.86, 546.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 396.860 CPU sec, 47.947 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205872
	[0000][ M::kt_pipeline] read 1205872 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518296, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 444, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2174)
[0000][PE] mean and std.dev: (572.04, 338.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 1286, 2393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4815)
[0000][PE] mean and std.dev: (1637.47, 1084.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 403.288 CPU sec, 42.869 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205872
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518448, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 446, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3303)
[0000][PE] mean and std.dev: (690.81, 532.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4290)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.69, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1294, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (1257.41, 556.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205872 reads in 394.677 CPU sec, 47.086 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518543, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 764, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3696)
[0000][PE] mean and std.dev: (907.48, 750.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.57, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1058, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2729)
[0000][PE] mean and std.dev: (1093.21, 420.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 390.271 CPU sec, 41.942 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518417, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 911, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5018)
[0000][PE] mean and std.dev: (1238.92, 1102.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.67, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1400, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3571)
[0000][PE] mean and std.dev: (1588.88, 712.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 398.804 CPU sec, 47.114 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518412, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 646, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3750)
[0000][PE] mean and std.dev: (776.67, 661.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.23, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1522, 2894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6342)
[0000][PE] mean and std.dev: (1593.39, 1005.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 404.185 CPU sec, 51.314 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518119, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (530, 880, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3254)
[0000][PE] mean and std.dev: (953.39, 736.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.54, 111.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1600, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4701)
[0000][PE] mean and std.dev: (1576.62, 745.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 399.170 CPU sec, 45.619 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518416, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 390, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (630.47, 616.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1341, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4178)
[0000][PE] mean and std.dev: (1540.00, 931.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 391.693 CPU sec, 39.229 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518438, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 494, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (973.74, 932.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1408, 2369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4801)
[0000][PE] mean and std.dev: (1713.25, 920.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 392.532 CPU sec, 37.372 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518289, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 443, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1969)
[0000][PE] mean and std.dev: (500.75, 416.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2548)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1331, 2938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6980)
[0000][PE] mean and std.dev: (1683.80, 1012.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 404.474 CPU sec, 43.169 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518256, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 522, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (877.35, 767.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 846)
[0000][PE] mean and std.dev: (482.71, 111.40)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1417, 3376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7968)
[0000][PE] mean and std.dev: (2001.24, 1087.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 398.263 CPU sec, 50.398 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518325, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 1096, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5583)
[0000][PE] mean and std.dev: (1424.59, 1341.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.70, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1463, 1567, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4085)
[0000][PE] mean and std.dev: (1669.71, 631.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 410.430 CPU sec, 49.460 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518473, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 664, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (787.61, 583.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.04, 110.95)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1640, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4546)
[0000][PE] mean and std.dev: (1708.73, 954.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 391.453 CPU sec, 42.528 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517904, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 380, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4895)
[0000][PE] mean and std.dev: (914.73, 958.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.26, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 897, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2861)
[0000][PE] mean and std.dev: (990.25, 614.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 399.249 CPU sec, 43.932 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518067, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 873, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5657)
[0000][PE] mean and std.dev: (1294.52, 1183.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1265, 2673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6391)
[0000][PE] mean and std.dev: (1747.91, 1320.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 403.362 CPU sec, 47.302 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518556, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 701, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (818.25, 644.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.32, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1278, 2743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6349)
[0000][PE] mean and std.dev: (1824.58, 1210.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 390.573 CPU sec, 43.162 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518819, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 433, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2510)
[0000][PE] mean and std.dev: (607.50, 492.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.55, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1716, 3206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7388)
[0000][PE] mean and std.dev: (2283.06, 1710.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 405.328 CPU sec, 53.071 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518082, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 611, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4076)
[0000][PE] mean and std.dev: (813.96, 693.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1509, 3016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6544)
[0000][PE] mean and std.dev: (1808.31, 961.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 407.075 CPU sec, 46.954 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518264, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 431, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3045)
[0000][PE] mean and std.dev: (580.78, 464.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.43, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1652, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5416)
[0000][PE] mean and std.dev: (1511.71, 989.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 398.762 CPU sec, 51.214 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518428, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 602, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4748)
[0000][PE] mean and std.dev: (1101.07, 1147.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.29, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1565, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5187)
[0000][PE] mean and std.dev: (1729.81, 968.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 392.342 CPU sec, 44.846 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518656, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 820, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5314)
[0000][PE] mean and std.dev: (1221.96, 1276.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 908, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1922)
[0000][PE] mean and std.dev: (828.75, 192.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2312)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 391.212 CPU sec, 44.693 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518475, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 371, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3225)
[0000][PE] mean and std.dev: (732.95, 668.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.74, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1386, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (1427.85, 1029.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 394.337 CPU sec, 42.339 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518365, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 819, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5321)
[0000][PE] mean and std.dev: (1057.96, 934.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 1277, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (1141.11, 581.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 391.688 CPU sec, 43.188 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517908, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 428, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5588)
[0000][PE] mean and std.dev: (1009.46, 1250.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1275, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5687)
[0000][PE] mean and std.dev: (1534.04, 1100.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 393.756 CPU sec, 44.333 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517933, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 390, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3098)
[0000][PE] mean and std.dev: (615.00, 551.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.33, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1229, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5169)
[0000][PE] mean and std.dev: (1612.10, 1192.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 394.861 CPU sec, 44.691 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205898
	[0000][ M::kt_pipeline] read 1205898 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518804, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 316, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5429)
[0000][PE] mean and std.dev: (910.22, 1051.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.32, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1383, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (1389.65, 742.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 406.073 CPU sec, 50.894 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205898
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518096, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 691, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (717.75, 568.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.47)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1458, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (1592.29, 1007.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5620)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205898 reads in 441.153 CPU sec, 50.177 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518361, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 379, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (556.04, 572.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.54, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1613, 2903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7055)
[0000][PE] mean and std.dev: (1859.26, 1530.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 404.172 CPU sec, 43.548 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518675, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 601, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5123)
[0000][PE] mean and std.dev: (953.26, 1042.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1524, 3672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8804)
[0000][PE] mean and std.dev: (2306.81, 1813.56)
[0000][PE] low and high boundaries for proper pairs: (1, 11370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 407.372 CPU sec, 51.657 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518051, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 435, 872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2114)
[0000][PE] mean and std.dev: (579.83, 521.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2735)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.41, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1476, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1477.00, 630.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 400.870 CPU sec, 47.896 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518426, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 460, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3705)
[0000][PE] mean and std.dev: (873.00, 791.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.27, 111.45)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1457, 2538, 3900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8786)
[0000][PE] mean and std.dev: (2715.12, 1810.41)
[0000][PE] low and high boundaries for proper pairs: (1, 11229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 417.497 CPU sec, 52.464 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518022, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 480, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (783.30, 764.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1142, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2680)
[0000][PE] mean and std.dev: (925.73, 421.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 414.719 CPU sec, 56.509 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518352, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 420, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (778.95, 870.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.44, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1234, 4342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11320)
[0000][PE] mean and std.dev: (2519.33, 2608.93)
[0000][PE] low and high boundaries for proper pairs: (1, 14809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 401.735 CPU sec, 56.674 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518163, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 682, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4545)
[0000][PE] mean and std.dev: (1032.04, 978.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.44, 111.00)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1331, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4190)
[0000][PE] mean and std.dev: (1360.67, 641.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 400.929 CPU sec, 55.837 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518382, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 393, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4682)
[0000][PE] mean and std.dev: (815.75, 819.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.63, 111.48)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1548, 3276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7724)
[0000][PE] mean and std.dev: (1940.12, 1175.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 392.050 CPU sec, 45.690 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518084, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 936, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7462)
[0000][PE] mean and std.dev: (1365.57, 1397.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 2294, 3450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8154)
[0000][PE] mean and std.dev: (2145.23, 1251.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 394.576 CPU sec, 55.323 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518151, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 629, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3765)
[0000][PE] mean and std.dev: (847.22, 795.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.59, 111.02)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 983, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2575)
[0000][PE] mean and std.dev: (948.86, 420.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 393.583 CPU sec, 50.416 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517814, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 384, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1900)
[0000][PE] mean and std.dev: (548.56, 418.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1420, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (1627.18, 1055.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 395.887 CPU sec, 52.922 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518548, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 411, 1033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (650.04, 638.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.36, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1779, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3933)
[0000][PE] mean and std.dev: (1400.08, 656.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 396.630 CPU sec, 54.223 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518720, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 411, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (947.76, 951.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.50, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1177, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5209)
[0000][PE] mean and std.dev: (1548.33, 988.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 391.502 CPU sec, 53.977 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518435, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 520, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (915.57, 858.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.45, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1349, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2577)
[0000][PE] mean and std.dev: (1252.93, 270.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 392.517 CPU sec, 49.054 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518084, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 840, 2682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7364)
[0000][PE] mean and std.dev: (1327.20, 1350.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.42, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1170, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5295)
[0000][PE] mean and std.dev: (1484.67, 1018.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 391.998 CPU sec, 42.150 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518479, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 688, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (929.33, 897.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1203, 1248, 2387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (1680.00, 695.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 395.066 CPU sec, 53.062 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518383, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 414, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2909)
[0000][PE] mean and std.dev: (659.00, 565.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.36, 110.77)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1347, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5406)
[0000][PE] mean and std.dev: (1512.86, 1033.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 395.120 CPU sec, 51.558 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518312, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 657, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4952)
[0000][PE] mean and std.dev: (1025.68, 1117.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.42)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1804, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (1516.69, 543.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 398.694 CPU sec, 49.224 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517987, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 401, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4069)
[0000][PE] mean and std.dev: (830.21, 743.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.58, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (102, 1199, 3302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9702)
[0000][PE] mean and std.dev: (1667.20, 1785.78)
[0000][PE] low and high boundaries for proper pairs: (1, 12902)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1077, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4361)
[0000][PE] mean and std.dev: (1189.69, 667.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 395.043 CPU sec, 44.600 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518354, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 418, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (699.60, 531.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.46, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1426, 2480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5350)
[0000][PE] mean and std.dev: (1549.04, 779.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 394.601 CPU sec, 45.292 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518375, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 706, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4846)
[0000][PE] mean and std.dev: (868.92, 810.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.38, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1567, 2651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6413)
[0000][PE] mean and std.dev: (1554.08, 975.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 404.247 CPU sec, 55.272 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518077, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 386, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2559)
[0000][PE] mean and std.dev: (642.35, 612.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.30, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 2218, 5851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15643)
[0000][PE] mean and std.dev: (3250.21, 2932.44)
[0000][PE] low and high boundaries for proper pairs: (1, 20539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 394.458 CPU sec, 47.547 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518291, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 449, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5804)
[0000][PE] mean and std.dev: (1137.96, 1355.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1239, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (1385.42, 770.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 393.586 CPU sec, 50.561 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518455, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 665, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4096)
[0000][PE] mean and std.dev: (1028.26, 866.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.53, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (633, 1043, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3540)
[0000][PE] mean and std.dev: (1054.95, 650.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 398.688 CPU sec, 41.362 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518295, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 650, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4534)
[0000][PE] mean and std.dev: (900.63, 905.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.20, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1932, 3277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7399)
[0000][PE] mean and std.dev: (2157.36, 1286.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 396.576 CPU sec, 51.076 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205792
	[0000][ M::kt_pipeline] read 1205792 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518423, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 694, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (975.10, 840.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (498, 757, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4395)
[0000][PE] mean and std.dev: (965.50, 635.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 396.545 CPU sec, 55.260 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205792
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517667, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 492, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4614)
[0000][PE] mean and std.dev: (860.32, 960.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1122, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2359)
[0000][PE] mean and std.dev: (1073.92, 456.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205792 reads in 398.128 CPU sec, 54.758 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518636, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 832, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3443)
[0000][PE] mean and std.dev: (901.05, 756.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.76, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1310, 2785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6623)
[0000][PE] mean and std.dev: (1965.00, 1673.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 394.716 CPU sec, 43.508 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518180, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 419, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (791.12, 641.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.49, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1648, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (1653.07, 738.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 394.795 CPU sec, 51.431 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518141, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 1211, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5265)
[0000][PE] mean and std.dev: (1070.62, 876.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.17, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1377, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (1120.08, 588.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 392.817 CPU sec, 53.182 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518192, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 440, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4330)
[0000][PE] mean and std.dev: (937.48, 933.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.47, 111.01)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1899, 3742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9078)
[0000][PE] mean and std.dev: (2464.33, 1870.76)
[0000][PE] low and high boundaries for proper pairs: (1, 11746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 399.759 CPU sec, 42.428 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518434, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 628, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5227)
[0000][PE] mean and std.dev: (1092.68, 1154.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.53, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1361, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4576)
[0000][PE] mean and std.dev: (1653.17, 889.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 395.765 CPU sec, 54.539 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518428, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 617, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6303)
[0000][PE] mean and std.dev: (1261.54, 1346.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1402, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5858)
[0000][PE] mean and std.dev: (1534.64, 684.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 396.540 CPU sec, 41.789 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518498, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 468, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3165)
[0000][PE] mean and std.dev: (769.83, 733.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1566, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5161)
[0000][PE] mean and std.dev: (1763.68, 1082.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 386.798 CPU sec, 40.886 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517856, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 370, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3873)
[0000][PE] mean and std.dev: (957.24, 999.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.68, 111.08)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1493, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4909)
[0000][PE] mean and std.dev: (1715.00, 889.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 393.335 CPU sec, 51.743 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517921, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 406, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (593.19, 449.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 848)
[0000][PE] mean and std.dev: (482.74, 111.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1021, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3955)
[0000][PE] mean and std.dev: (1088.10, 618.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 407.384 CPU sec, 50.160 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518375, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 644, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5113)
[0000][PE] mean and std.dev: (1256.27, 1267.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 840)
[0000][PE] mean and std.dev: (482.11, 110.69)
[0000][PE] low and high boundaries for proper pairs: (1, 984)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 399.177 CPU sec, 43.360 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000122 bp)...
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518804, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 488, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4526)
[0000][PE] mean and std.dev: (906.60, 844.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.57, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1538, 3425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8037)
[0000][PE] mean and std.dev: (2641.71, 2388.25)
[0000][PE] low and high boundaries for proper pairs: (1, 12195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 405.478 CPU sec, 48.155 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518333, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 366, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2220)
[0000][PE] mean and std.dev: (509.64, 447.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.70, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1512, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4918)
[0000][PE] mean and std.dev: (1560.47, 802.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 398.011 CPU sec, 53.213 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518813, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 868, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5520)
[0000][PE] mean and std.dev: (1293.33, 1305.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.82, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1326, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5062)
[0000][PE] mean and std.dev: (1462.81, 731.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 397.789 CPU sec, 52.264 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518311, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 343, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1499)
[0000][PE] mean and std.dev: (353.36, 190.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.08, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1751, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (1763.40, 598.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 392.145 CPU sec, 44.805 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518139, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 648, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (614.19, 468.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.73, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1266, 2632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6092)
[0000][PE] mean and std.dev: (1533.44, 1137.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 394.034 CPU sec, 47.086 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518527, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 343, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2671)
[0000][PE] mean and std.dev: (604.95, 683.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.57, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1155, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (1120.78, 588.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 396.684 CPU sec, 53.512 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518202, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 404, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5825)
[0000][PE] mean and std.dev: (1067.15, 1102.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.50, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1290, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5100)
[0000][PE] mean and std.dev: (1492.93, 977.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 410.117 CPU sec, 47.718 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518670, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1202, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5380)
[0000][PE] mean and std.dev: (1219.32, 1047.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.38, 111.67)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1201, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5959)
[0000][PE] mean and std.dev: (1537.06, 1140.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 393.531 CPU sec, 44.580 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518181, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 349, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2836)
[0000][PE] mean and std.dev: (651.65, 646.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1342, 2612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5836)
[0000][PE] mean and std.dev: (1821.88, 1209.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 395.125 CPU sec, 50.466 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518342, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 380, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (797.21, 801.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 846)
[0000][PE] mean and std.dev: (482.88, 111.49)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1186, 2690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6374)
[0000][PE] mean and std.dev: (1724.86, 1364.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 402.419 CPU sec, 56.038 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518814, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 528, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (885.95, 775.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 1385, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4365)
[0000][PE] mean and std.dev: (1394.31, 759.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 407.404 CPU sec, 53.015 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518381, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 652, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4904)
[0000][PE] mean and std.dev: (1135.41, 1109.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.04, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 406.732 CPU sec, 46.237 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518579, 13, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 375, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3188)
[0000][PE] mean and std.dev: (706.40, 658.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.41, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1635, 3603, 5642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13656)
[0000][PE] mean and std.dev: (3409.38, 2097.61)
[0000][PE] low and high boundaries for proper pairs: (1, 17663)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1368, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4486)
[0000][PE] mean and std.dev: (1151.33, 600.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 395.289 CPU sec, 50.275 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518307, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 463, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (789.04, 871.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.57, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1282, 1842, 2533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5035)
[0000][PE] mean and std.dev: (1786.58, 798.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 395.849 CPU sec, 45.076 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518590, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 661, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4638)
[0000][PE] mean and std.dev: (982.81, 940.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.45, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1780, 2118, 3265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6235)
[0000][PE] mean and std.dev: (2233.10, 1016.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 393.657 CPU sec, 50.950 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518675, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 519, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (734.35, 810.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1212, 1671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3529)
[0000][PE] mean and std.dev: (1173.00, 601.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 405.607 CPU sec, 52.379 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517702, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 558, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3851)
[0000][PE] mean and std.dev: (751.17, 755.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1473, 2636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5582)
[0000][PE] mean and std.dev: (1995.22, 1228.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 399.077 CPU sec, 48.926 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518426, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 732, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4909)
[0000][PE] mean and std.dev: (1014.79, 1015.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1347, 2663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6203)
[0000][PE] mean and std.dev: (1448.28, 1202.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 400.166 CPU sec, 58.951 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517771, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 374, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4907)
[0000][PE] mean and std.dev: (706.62, 803.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1593, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4781)
[0000][PE] mean and std.dev: (1521.91, 675.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 396.258 CPU sec, 53.166 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518341, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 608, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (714.64, 438.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1074, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (1150.15, 509.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 396.016 CPU sec, 55.212 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518656, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 749, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1011.83, 950.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1218, 1377, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (1597.89, 705.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 404.935 CPU sec, 53.597 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518469, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 835, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (850.75, 766.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.28, 111.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1303, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (1319.58, 695.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 410.074 CPU sec, 58.825 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517827, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 993, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6584)
[0000][PE] mean and std.dev: (1311.55, 1237.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.44, 110.94)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1373, 1831, 2789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5621)
[0000][PE] mean and std.dev: (1874.18, 884.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 407.514 CPU sec, 56.844 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517847, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 994, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3569)
[0000][PE] mean and std.dev: (674.63, 511.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.43, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1427, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5353)
[0000][PE] mean and std.dev: (1639.47, 1043.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 400.370 CPU sec, 46.799 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518157, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 410, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (698.84, 720.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1329, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (1325.47, 541.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 397.225 CPU sec, 52.546 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518002, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 373, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (772.88, 700.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1179, 4268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11214)
[0000][PE] mean and std.dev: (2414.53, 2264.36)
[0000][PE] low and high boundaries for proper pairs: (1, 14687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 408.126 CPU sec, 45.528 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518223, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 424, 952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2394)
[0000][PE] mean and std.dev: (631.23, 495.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1537, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3901)
[0000][PE] mean and std.dev: (1413.50, 520.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 414.145 CPU sec, 48.610 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518425, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 383, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2891)
[0000][PE] mean and std.dev: (598.55, 605.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.62, 111.51)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1393, 3355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8477)
[0000][PE] mean and std.dev: (1940.05, 1327.74)
[0000][PE] low and high boundaries for proper pairs: (1, 11038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 399.564 CPU sec, 46.248 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518614, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 422, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (712.16, 684.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.25, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 392.730 CPU sec, 48.901 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205822
	[0000][ M::kt_pipeline] read 1205822 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518591, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 398, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4152)
[0000][PE] mean and std.dev: (825.24, 843.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.71, 111.42)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1530, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4681)
[0000][PE] mean and std.dev: (1498.08, 847.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 395.268 CPU sec, 53.917 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518600, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 382, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1084)
[0000][PE] mean and std.dev: (397.20, 188.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.33, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1392, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (493, 2168)
[0000][PE] mean and std.dev: (1344.67, 260.31)
[0000][PE] low and high boundaries for proper pairs: (158, 2503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205822 reads in 393.747 CPU sec, 46.747 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518250, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (594, 1064, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4938)
[0000][PE] mean and std.dev: (1177.00, 827.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1050, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4514)
[0000][PE] mean and std.dev: (1341.22, 817.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 392.951 CPU sec, 47.518 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205472
	[0000][ M::kt_pipeline] read 1205472 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518075, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 645, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3211)
[0000][PE] mean and std.dev: (799.21, 654.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.62, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1620, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (1502.00, 531.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 399.606 CPU sec, 46.754 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518236, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 418, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4056)
[0000][PE] mean and std.dev: (891.23, 823.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.53)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1259, 1817, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4130)
[0000][PE] mean and std.dev: (1844.89, 833.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205472 reads in 397.026 CPU sec, 54.652 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518296, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 878, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (1055.00, 914.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.45, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1254, 3185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7447)
[0000][PE] mean and std.dev: (2032.60, 1862.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 399.877 CPU sec, 52.949 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518464, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 935, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3753)
[0000][PE] mean and std.dev: (972.39, 783.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 403.500 CPU sec, 48.107 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518059, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 401, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2650)
[0000][PE] mean and std.dev: (667.50, 523.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.64, 111.58)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1322, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4159)
[0000][PE] mean and std.dev: (1572.36, 966.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 396.648 CPU sec, 47.842 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518326, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 481, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3518)
[0000][PE] mean and std.dev: (800.65, 818.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.50, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1670, 3247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8015)
[0000][PE] mean and std.dev: (2050.11, 1554.93)
[0000][PE] low and high boundaries for proper pairs: (1, 10399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 401.587 CPU sec, 38.143 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518040, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 834, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4135)
[0000][PE] mean and std.dev: (1080.06, 995.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.58, 110.98)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1375, 1729, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6025)
[0000][PE] mean and std.dev: (1850.71, 976.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 392.656 CPU sec, 41.835 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518435, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 329, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (707.58, 741.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.53, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1457, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5430)
[0000][PE] mean and std.dev: (1853.78, 1265.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 392.465 CPU sec, 48.499 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518010, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 474, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6676)
[0000][PE] mean and std.dev: (1330.31, 1546.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.61, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1206, 1469, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (1597.14, 854.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 390.951 CPU sec, 38.571 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518125, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 454, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (855.35, 847.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1486, 3190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7902)
[0000][PE] mean and std.dev: (2039.82, 1537.97)
[0000][PE] low and high boundaries for proper pairs: (1, 10258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 397.154 CPU sec, 44.342 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518335, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 338, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2966)
[0000][PE] mean and std.dev: (552.21, 457.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.31, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1555, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (1520.71, 715.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 403.344 CPU sec, 43.754 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518345, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 553, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5782)
[0000][PE] mean and std.dev: (1140.14, 1143.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1395, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4076)
[0000][PE] mean and std.dev: (1449.17, 830.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 407.929 CPU sec, 44.547 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518223, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 1034, 2872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7964)
[0000][PE] mean and std.dev: (1533.00, 1586.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.68, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1517, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4802)
[0000][PE] mean and std.dev: (1565.00, 918.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 392.555 CPU sec, 51.284 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518268, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 616, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (880.24, 831.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.74, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 1109, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3100)
[0000][PE] mean and std.dev: (909.38, 470.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 398.282 CPU sec, 46.587 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518085, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 406, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2274)
[0000][PE] mean and std.dev: (547.79, 478.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1796, 4344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10778)
[0000][PE] mean and std.dev: (2657.00, 2490.05)
[0000][PE] low and high boundaries for proper pairs: (1, 13995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 411.613 CPU sec, 54.658 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518201, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 429, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (915.00, 936.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (116, 846)
[0000][PE] mean and std.dev: (482.80, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1205, 2770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6186)
[0000][PE] mean and std.dev: (1553.50, 884.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 397.410 CPU sec, 46.191 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518208, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 453, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4631)
[0000][PE] mean and std.dev: (933.87, 862.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.29, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1518, 2840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6582)
[0000][PE] mean and std.dev: (1764.09, 1151.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 392.761 CPU sec, 46.680 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518476, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 990, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3320)
[0000][PE] mean and std.dev: (878.11, 673.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.34, 111.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1204, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (1413.37, 694.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 395.604 CPU sec, 49.539 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518288, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 401, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3352)
[0000][PE] mean and std.dev: (720.48, 688.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1138, 1326, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (96, 2701)
[0000][PE] mean and std.dev: (1205.29, 414.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 398.886 CPU sec, 39.772 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518067, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 921, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (942.09, 751.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.86, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1662, 2493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5457)
[0000][PE] mean and std.dev: (1630.58, 784.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 395.830 CPU sec, 47.500 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518762, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 585, 2440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6784)
[0000][PE] mean and std.dev: (1099.83, 1105.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.53, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1662, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4442)
[0000][PE] mean and std.dev: (1638.33, 1045.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 398.200 CPU sec, 42.805 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205800
	[0000][ M::kt_pipeline] read 1205800 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518613, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 972, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5094)
[0000][PE] mean and std.dev: (1057.46, 758.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 111.13)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1350, 1538, 2825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5775)
[0000][PE] mean and std.dev: (2088.72, 1153.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 393.361 CPU sec, 44.267 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205800
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518116, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 589, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (747.56, 683.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1690, 2600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5268)
[0000][PE] mean and std.dev: (1758.44, 917.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205800 reads in 400.476 CPU sec, 49.909 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518219, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (458, 1109, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4346)
[0000][PE] mean and std.dev: (1158.36, 854.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.33, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1512, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (1420.86, 522.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 402.147 CPU sec, 48.652 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518163, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 895, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6001)
[0000][PE] mean and std.dev: (1320.85, 1198.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1144, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (1184.35, 506.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 397.247 CPU sec, 46.930 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518244, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 450, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (868.08, 941.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.33, 111.41)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 2182, 3773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8927)
[0000][PE] mean and std.dev: (2759.53, 2262.65)
[0000][PE] low and high boundaries for proper pairs: (1, 11810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 395.327 CPU sec, 43.040 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518280, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 415, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (674.15, 612.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.56, 111.01)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1329, 1647, 3617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8193)
[0000][PE] mean and std.dev: (2236.27, 1496.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 393.153 CPU sec, 48.467 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518116, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 705, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (980.61, 951.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.57, 111.31)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1448, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4422)
[0000][PE] mean and std.dev: (1301.86, 460.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 397.274 CPU sec, 46.943 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205830
	[0000][ M::kt_pipeline] read 1205830 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518441, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 351, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (782.57, 748.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.45, 111.06)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1508, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3191)
[0000][PE] mean and std.dev: (1404.76, 580.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 394.758 CPU sec, 48.832 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205830
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518130, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 355, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2194)
[0000][PE] mean and std.dev: (527.73, 332.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.63, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1244, 1527, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (1416.33, 817.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205830 reads in 391.027 CPU sec, 44.305 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518336, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 775, 2382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6568)
[0000][PE] mean and std.dev: (1278.59, 1328.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.72, 111.19)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1147, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (1277.33, 687.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 392.971 CPU sec, 40.848 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518414, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 318, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3828)
[0000][PE] mean and std.dev: (773.04, 880.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.33, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1435, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5704)
[0000][PE] mean and std.dev: (1877.47, 1078.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 392.283 CPU sec, 42.324 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518371, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 425, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (774.67, 720.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.35, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1111, 3852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10084)
[0000][PE] mean and std.dev: (2106.23, 2271.24)
[0000][PE] low and high boundaries for proper pairs: (1, 13200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 390.752 CPU sec, 43.650 real sec
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205882
	[0000][ M::kt_pipeline] read 1205882 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518099, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 1187, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5802)
[0000][PE] mean and std.dev: (1243.27, 1144.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.38, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1512, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1493.40, 767.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 393.130 CPU sec, 38.428 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205882
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518268, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 545, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (785.36, 632.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.43)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1296, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2729)
[0000][PE] mean and std.dev: (1136.41, 524.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205882 reads in 393.467 CPU sec, 42.306 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517895, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 420, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3658)
[0000][PE] mean and std.dev: (797.65, 683.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.45, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1586, 1817, 2485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4283)
[0000][PE] mean and std.dev: (1848.55, 769.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 410.761 CPU sec, 46.660 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517849, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 873, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5035)
[0000][PE] mean and std.dev: (1128.00, 1107.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.56, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1681, 3911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9485)
[0000][PE] mean and std.dev: (2236.00, 1388.01)
[0000][PE] low and high boundaries for proper pairs: (1, 12272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 407.145 CPU sec, 49.280 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205848
	[0000][ M::kt_pipeline] read 1205848 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518156, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 873, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3128)
[0000][PE] mean and std.dev: (820.76, 599.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.77, 111.10)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1443, 2806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6068)
[0000][PE] mean and std.dev: (1756.92, 1007.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 396.224 CPU sec, 42.049 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518417, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 526, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2738)
[0000][PE] mean and std.dev: (666.10, 583.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.42, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1450, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3719)
[0000][PE] mean and std.dev: (1351.29, 762.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205848 reads in 406.566 CPU sec, 41.264 real sec
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518656, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 451, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2863)
[0000][PE] mean and std.dev: (581.36, 427.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1817, 3011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6783)
[0000][PE] mean and std.dev: (1842.39, 1118.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 401.705 CPU sec, 49.416 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518513, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 369, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (588.08, 572.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.32, 111.09)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1868, 2695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5925)
[0000][PE] mean and std.dev: (1916.05, 1059.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 395.892 CPU sec, 44.704 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518431, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 428, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2865)
[0000][PE] mean and std.dev: (730.45, 638.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.26, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1319, 3052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7300)
[0000][PE] mean and std.dev: (1910.43, 1394.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 393.839 CPU sec, 44.421 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518430, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 887, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (777.14, 587.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 1576, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6109)
[0000][PE] mean and std.dev: (1423.93, 916.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 395.789 CPU sec, 47.468 real sec
[0000] Calling mem_process_seqs.., task: 1066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518502, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 378, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1459)
[0000][PE] mean and std.dev: (401.41, 231.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.71, 111.30)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1480, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5127)
[0000][PE] mean and std.dev: (1776.27, 1123.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 389.546 CPU sec, 46.267 real sec
[0000] Calling mem_process_seqs.., task: 1067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518602, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 602, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (1016.07, 1021.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1466, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4241)
[0000][PE] mean and std.dev: (1643.20, 811.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 386.381 CPU sec, 31.659 real sec
[0000] Calling mem_process_seqs.., task: 1068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518180, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 704, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4549)
[0000][PE] mean and std.dev: (939.17, 749.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.68, 111.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1565, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5078)
[0000][PE] mean and std.dev: (1658.23, 958.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 399.630 CPU sec, 46.720 real sec
[0000] Calling mem_process_seqs.., task: 1069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518175, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 438, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (845.89, 819.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.70, 111.00)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1339, 1912, 3221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6985)
[0000][PE] mean and std.dev: (2290.40, 1541.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 412.974 CPU sec, 51.234 real sec
[0000] Calling mem_process_seqs.., task: 1070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518100, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 457, 1414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (733.23, 812.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.42, 110.98)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1607, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (1587.05, 749.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 408.046 CPU sec, 48.815 real sec
[0000] Calling mem_process_seqs.., task: 1071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518467, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 454, 1490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (898.57, 831.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.52, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1323, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2808)
[0000][PE] mean and std.dev: (1219.21, 499.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 399.235 CPU sec, 49.684 real sec
[0000] Calling mem_process_seqs.., task: 1072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518153, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 468, 1987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5311)
[0000][PE] mean and std.dev: (959.15, 936.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.76, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1077, 2603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6559)
[0000][PE] mean and std.dev: (1880.50, 1778.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 397.278 CPU sec, 41.981 real sec
[0000] Calling mem_process_seqs.., task: 1073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518784, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 1302, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (1079.40, 788.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1025, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (1187.69, 471.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 392.385 CPU sec, 42.390 real sec
[0000] Calling mem_process_seqs.., task: 1074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518475, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 712, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (1057.73, 1143.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 110.93)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1465, 1625, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (1695.00, 691.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 392.573 CPU sec, 44.784 real sec
[0000] Calling mem_process_seqs.., task: 1075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518736, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 496, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2700)
[0000][PE] mean and std.dev: (623.05, 558.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.49, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1348, 1525, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4345)
[0000][PE] mean and std.dev: (1840.60, 981.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 389.760 CPU sec, 44.882 real sec
[0000] Calling mem_process_seqs.., task: 1076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518440, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 539, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4198)
[0000][PE] mean and std.dev: (970.33, 832.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1180, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5725)
[0000][PE] mean and std.dev: (1454.47, 908.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 393.235 CPU sec, 50.454 real sec
[0000] Calling mem_process_seqs.., task: 1077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518008, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 409, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2640)
[0000][PE] mean and std.dev: (669.68, 524.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.50, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1549, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5952)
[0000][PE] mean and std.dev: (1751.62, 1009.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 415.398 CPU sec, 52.252 real sec
[0000] Calling mem_process_seqs.., task: 1078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518568, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 340, 463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 811)
[0000][PE] mean and std.dev: (340.42, 137.85)
[0000][PE] low and high boundaries for proper pairs: (1, 985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.15, 111.03)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1534, 2669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6131)
[0000][PE] mean and std.dev: (1804.53, 1020.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 389.991 CPU sec, 39.289 real sec
[0000] Calling mem_process_seqs.., task: 1079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518463, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 432, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (1102.38, 1127.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.65, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 2454, 3150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7388)
[0000][PE] mean and std.dev: (2098.81, 1419.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 394.573 CPU sec, 45.412 real sec
[0000] Calling mem_process_seqs.., task: 1080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518451, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 349, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4470)
[0000][PE] mean and std.dev: (798.93, 1085.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.60, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1206, 1612, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (1490.67, 624.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 397.226 CPU sec, 42.690 real sec
[0000] Calling mem_process_seqs.., task: 1081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518517, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 342, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2426)
[0000][PE] mean and std.dev: (466.32, 459.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.38, 111.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1942, 3213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7495)
[0000][PE] mean and std.dev: (2134.00, 1176.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 397.748 CPU sec, 47.159 real sec
[0000] Calling mem_process_seqs.., task: 1082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 518267, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 771, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (866.23, 750.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.41, 110.98)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1857, 3314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7640)
[0000][PE] mean and std.dev: (1898.25, 1013.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 395.260 CPU sec, 40.257 real sec
[0000] Calling mem_process_seqs.., task: 1083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518244, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 389, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4246)
[0000][PE] mean and std.dev: (719.79, 750.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.74, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1269, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (1361.40, 560.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 393.673 CPU sec, 44.766 real sec
[0000] Calling mem_process_seqs.., task: 1084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518253, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 880, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6100)
[0000][PE] mean and std.dev: (924.06, 703.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8002)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.37, 111.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1435, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4398)
[0000][PE] mean and std.dev: (1355.78, 646.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 389.166 CPU sec, 33.652 real sec
[0000] Calling mem_process_seqs.., task: 1085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518022, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 433, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (810.21, 722.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.15)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1190, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3170)
[0000][PE] mean and std.dev: (1411.68, 641.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 395.867 CPU sec, 44.852 real sec
[0000] Calling mem_process_seqs.., task: 1086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518194, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 632, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (760.66, 492.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.80, 110.99)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1276, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2873)
[0000][PE] mean and std.dev: (1254.45, 452.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 398.035 CPU sec, 44.720 real sec
[0000] Calling mem_process_seqs.., task: 1087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518388, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 549, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (760.48, 684.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.46, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1019, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3049)
[0000][PE] mean and std.dev: (1127.00, 565.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 391.829 CPU sec, 41.462 real sec
[0000] Calling mem_process_seqs.., task: 1088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518025, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 657, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4149)
[0000][PE] mean and std.dev: (883.52, 730.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.61, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (856, 1046, 4285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11143)
[0000][PE] mean and std.dev: (2370.00, 2565.79)
[0000][PE] low and high boundaries for proper pairs: (1, 14572)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 1748, 2618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5370)
[0000][PE] mean and std.dev: (1868.17, 910.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 393.534 CPU sec, 31.094 real sec
[0000] Calling mem_process_seqs.., task: 1089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518171, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 427, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (848.22, 873.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.55, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1379, 2374, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5306)
[0000][PE] mean and std.dev: (1877.58, 644.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 391.578 CPU sec, 44.473 real sec
[0000] Calling mem_process_seqs.., task: 1090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518322, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 469, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4028)
[0000][PE] mean and std.dev: (916.24, 859.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.55, 111.12)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (678, 1049, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (1097.81, 499.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 385.242 CPU sec, 34.843 real sec
[0000] Calling mem_process_seqs.., task: 1091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518435, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 415, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (857.29, 950.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.40, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1301, 1793, 3279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7235)
[0000][PE] mean and std.dev: (2347.16, 1406.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 396.725 CPU sec, 42.750 real sec
[0000] Calling mem_process_seqs.., task: 1092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518015, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 358, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (590.94, 584.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.46, 111.20)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1448, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5393)
[0000][PE] mean and std.dev: (1567.00, 840.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 403.686 CPU sec, 47.809 real sec
[0000] Calling mem_process_seqs.., task: 1093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518266, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 719, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (953.65, 836.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4300)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.41, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1447, 3406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8404)
[0000][PE] mean and std.dev: (1771.62, 1133.26)
[0000][PE] low and high boundaries for proper pairs: (1, 10903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 393.787 CPU sec, 44.784 real sec
[0000] Calling mem_process_seqs.., task: 1094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518349, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 869, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3337)
[0000][PE] mean and std.dev: (793.33, 592.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.54, 111.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1240, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3275)
[0000][PE] mean and std.dev: (1401.14, 672.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 395.762 CPU sec, 43.257 real sec
[0000] Calling mem_process_seqs.., task: 1095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518179, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 404, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (623.17, 698.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.29, 111.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1656, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5052)
[0000][PE] mean and std.dev: (1801.33, 1003.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 393.077 CPU sec, 37.534 real sec
[0000] Calling mem_process_seqs.., task: 1096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518391, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 568, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6724)
[0000][PE] mean and std.dev: (1199.64, 1470.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.51, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1160, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4643)
[0000][PE] mean and std.dev: (1365.91, 658.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 388.893 CPU sec, 34.185 real sec
[0000] Calling mem_process_seqs.., task: 1097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518424, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 501, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (955.28, 868.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.11)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1579, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5622)
[0000][PE] mean and std.dev: (1561.12, 822.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 392.788 CPU sec, 49.818 real sec
[0000] Calling mem_process_seqs.., task: 1098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518931, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1115, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4805)
[0000][PE] mean and std.dev: (1051.78, 820.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.60, 111.46)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1877, 3435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8469)
[0000][PE] mean and std.dev: (2174.88, 1755.33)
[0000][PE] low and high boundaries for proper pairs: (1, 10986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 390.959 CPU sec, 41.749 real sec
[0000] Calling mem_process_seqs.., task: 1099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518067, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 756, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (695.40, 539.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.65, 111.41)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1239, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (1266.21, 521.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 392.291 CPU sec, 39.161 real sec
[0000] Calling mem_process_seqs.., task: 1100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518238, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 288, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2654)
[0000][PE] mean and std.dev: (549.60, 571.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.43, 111.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1366, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4986)
[0000][PE] mean and std.dev: (1444.44, 596.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 408.222 CPU sec, 48.494 real sec
[0000] Calling mem_process_seqs.., task: 1101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518490, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 599, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (1155.00, 1186.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.39, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 762, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (1070.50, 751.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 395.290 CPU sec, 51.420 real sec
[0000] Calling mem_process_seqs.., task: 1102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205828
	[0000][ M::kt_pipeline] read 1205828 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518171, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 1430, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4243)
[0000][PE] mean and std.dev: (1276.05, 926.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.44, 111.18)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1396, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3691)
[0000][PE] mean and std.dev: (1506.30, 545.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 395.270 CPU sec, 43.746 real sec
[0000] Calling mem_process_seqs.., task: 1103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205828
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518347, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 873, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5134)
[0000][PE] mean and std.dev: (1212.43, 973.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.38, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1503, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (1509.04, 877.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205828 reads in 399.266 CPU sec, 46.193 real sec
[0000] Calling mem_process_seqs.., task: 1104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517967, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 516, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3270)
[0000][PE] mean and std.dev: (946.65, 819.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.68, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1371, 1650, 2676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5286)
[0000][PE] mean and std.dev: (1766.31, 919.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 392.446 CPU sec, 43.231 real sec
[0000] Calling mem_process_seqs.., task: 1105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517916, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 485, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2797)
[0000][PE] mean and std.dev: (654.68, 571.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 552)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 842)
[0000][PE] mean and std.dev: (482.22, 110.92)
[0000][PE] low and high boundaries for proper pairs: (1, 987)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1345, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4552)
[0000][PE] mean and std.dev: (1614.18, 928.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 398.951 CPU sec, 36.192 real sec
[0000] Calling mem_process_seqs.., task: 1106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518574, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 1071, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5125)
[0000][PE] mean and std.dev: (1177.60, 1169.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.66, 111.35)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1157, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4847)
[0000][PE] mean and std.dev: (1554.47, 996.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 394.444 CPU sec, 49.775 real sec
[0000] Calling mem_process_seqs.., task: 1107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518161, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 945, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6190)
[0000][PE] mean and std.dev: (1159.36, 971.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.47, 111.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1516, 3134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7328)
[0000][PE] mean and std.dev: (1839.77, 935.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 392.569 CPU sec, 37.156 real sec
[0000] Calling mem_process_seqs.., task: 1108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518194, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 479, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2441)
[0000][PE] mean and std.dev: (605.32, 528.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.50, 111.07)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1346, 1602, 3137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6719)
[0000][PE] mean and std.dev: (2319.80, 1522.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 390.707 CPU sec, 40.803 real sec
[0000] Calling mem_process_seqs.., task: 1109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518209, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 573, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3861)
[0000][PE] mean and std.dev: (890.55, 893.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.51, 111.23)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1364, 2685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5953)
[0000][PE] mean and std.dev: (1726.76, 1151.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 401.173 CPU sec, 40.001 real sec
[0000] Calling mem_process_seqs.., task: 1110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518509, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 339, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2604)
[0000][PE] mean and std.dev: (544.28, 464.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 111.05)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 1949, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4788)
[0000][PE] mean and std.dev: (1710.18, 760.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 405.453 CPU sec, 50.202 real sec
[0000] Calling mem_process_seqs.., task: 1111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518324, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 596, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2253)
[0000][PE] mean and std.dev: (540.91, 360.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.76, 111.21)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1056, 2481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5745)
[0000][PE] mean and std.dev: (1433.33, 1070.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 395.181 CPU sec, 41.978 real sec
[0000] Calling mem_process_seqs.., task: 1112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205796
	[0000][ M::kt_pipeline] read 1205796 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518296, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 386, 793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1839)
[0000][PE] mean and std.dev: (503.68, 428.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (408, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 843)
[0000][PE] mean and std.dev: (482.48, 110.98)
[0000][PE] low and high boundaries for proper pairs: (1, 988)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1475, 2743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5997)
[0000][PE] mean and std.dev: (1748.58, 938.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 393.706 CPU sec, 44.827 real sec
[0000] Calling mem_process_seqs.., task: 1113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 167725076, nseq: 1123628
	[0000][ M::kt_pipeline] read 1123628 sequences (167725076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518262, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 497, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3146)
[0000][PE] mean and std.dev: (768.73, 697.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 475, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.48, 111.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1287, 1828, 4422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10692)
[0000][PE] mean and std.dev: (2597.95, 2259.15)
[0000][PE] low and high boundaries for proper pairs: (1, 13827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205796 reads in 396.274 CPU sec, 41.174 real sec
[0000] Calling mem_process_seqs.., task: 1114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1123628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 483565, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 384, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (729.22, 716.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (407, 474, 553)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 845)
[0000][PE] mean and std.dev: (482.23, 111.04)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1676, 2176, 5819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14105)
[0000][PE] mean and std.dev: (3541.18, 2690.15)
[0000][PE] low and high boundaries for proper pairs: (1, 18248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1123628 reads in 371.807 CPU sec, 44.941 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.131722 MHz
Runtime profile:

	Time taken for main_mem function: 76402.24 sec

	IO times (sec) :
	Reading IO time (reads) avg: 3058.07, (3058.07, 3058.07)
	Writing IO time (SAM) avg: 8608.82, (8608.82, 8608.82)
	Reading IO time (Reference Genome) avg: 29.28, (29.28, 29.28)
	Index read time avg: 18.28, (18.28, 18.28)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 76353.25
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 76340.68, (76340.68, 76340.68)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 25569.60, (25569.60, 25569.60)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 50557.26, (50557.26, 50557.26)
		SMEM compute avg: 17137.66, (17174.84, 17101.20)
		SAL compute avg: 10659.14, (10708.00, 10595.10)
				MEM_SA avg: 4670.65, (4763.49, 4539.94)

		BSW time, avg: 13412.52, (13427.80, 13384.81)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
